#ifndef VOIDCSFML_SYSTEM_H
#define VOIDCSFML_SYSTEM_H
#include <voidcsfml/config.h>
VOIDCSFML_API sfml_system_version(int*, int*, int*);
VOIDCSFML_API time_initialize(void* self);
VOIDCSFML_API time_asseconds(void* self, float* result);
VOIDCSFML_API time_asmilliseconds(void* self, int32_t* result);
VOIDCSFML_API time_asmicroseconds(void* self, int64_t* result);
VOIDCSFML_API operator_eq_f4Tf4T(void* left, void* right, unsigned char* result);
VOIDCSFML_API operator_ne_f4Tf4T(void* left, void* right, unsigned char* result);
VOIDCSFML_API operator_lt_f4Tf4T(void* left, void* right, unsigned char* result);
VOIDCSFML_API operator_gt_f4Tf4T(void* left, void* right, unsigned char* result);
VOIDCSFML_API operator_le_f4Tf4T(void* left, void* right, unsigned char* result);
VOIDCSFML_API operator_ge_f4Tf4T(void* left, void* right, unsigned char* result);
VOIDCSFML_API operator_sub_f4T(void* right, void* result);
VOIDCSFML_API operator_add_f4Tf4T(void* left, void* right, void* result);
VOIDCSFML_API operator_sub_f4Tf4T(void* left, void* right, void* result);
VOIDCSFML_API operator_mul_f4TBw9(void* left, float right, void* result);
VOIDCSFML_API operator_mul_f4TG4x(void* left, int64_t right, void* result);
VOIDCSFML_API operator_div_f4TBw9(void* left, float right, void* result);
VOIDCSFML_API operator_div_f4TG4x(void* left, int64_t right, void* result);
VOIDCSFML_API operator_div_f4Tf4T(void* left, void* right, float* result);
VOIDCSFML_API operator_mod_f4Tf4T(void* left, void* right, void* result);
VOIDCSFML_API time_initialize_PxG(void* self, void* copy);
VOIDCSFML_API seconds_Bw9(float amount, void* result);
VOIDCSFML_API milliseconds_qe2(int32_t amount, void* result);
VOIDCSFML_API microseconds_G4x(int64_t amount, void* result);
VOIDCSFML_API clock_initialize(void* self);
VOIDCSFML_API clock_getelapsedtime(void* self, void* result);
VOIDCSFML_API clock_restart(void* self, void* result);
VOIDCSFML_API clock_initialize_LuC(void* self, void* copy);
VOIDCSFML_API (*inputstream_read_callback)(void*, void*, int64_t, int64_t*);
VOIDCSFML_API (*inputstream_seek_callback)(void*, int64_t, int64_t*);
VOIDCSFML_API (*inputstream_tell_callback)(void*, int64_t*);
VOIDCSFML_API (*inputstream_getsize_callback)(void*, int64_t*);
VOIDCSFML_API inputstream_initialize(void* self);
VOIDCSFML_API inputstream_initialize_mua(void* self, void* copy);
VOIDCSFML_API fileinputstream_initialize(void* self);
VOIDCSFML_API fileinputstream_finalize(void* self);
VOIDCSFML_API fileinputstream_open_zkC(void* self, size_t filename_size, char* filename, unsigned char* result);
VOIDCSFML_API fileinputstream_read_xALG4x(void* self, void* data, int64_t size, int64_t* result);
VOIDCSFML_API fileinputstream_seek_G4x(void* self, int64_t position, int64_t* result);
VOIDCSFML_API fileinputstream_tell(void* self, int64_t* result);
VOIDCSFML_API fileinputstream_getsize(void* self, int64_t* result);
VOIDCSFML_API memoryinputstream_initialize(void* self);
VOIDCSFML_API memoryinputstream_open_5h8vgv(void* self, void* data, size_t size_in_bytes);
VOIDCSFML_API memoryinputstream_read_xALG4x(void* self, void* data, int64_t size, int64_t* result);
VOIDCSFML_API memoryinputstream_seek_G4x(void* self, int64_t position, int64_t* result);
VOIDCSFML_API memoryinputstream_tell(void* self, int64_t* result);
VOIDCSFML_API memoryinputstream_getsize(void* self, int64_t* result);
VOIDCSFML_API memoryinputstream_initialize_kYd(void* self, void* copy);
VOIDCSFML_API mutex_initialize(void* self);
VOIDCSFML_API mutex_finalize(void* self);
VOIDCSFML_API mutex_lock(void* self);
VOIDCSFML_API mutex_unlock(void* self);
VOIDCSFML_API sleep_f4T(void* duration);
VOIDCSFML_API thread_initialize_XPcbdx(void* self, void (*function)(void*), void* argument);
VOIDCSFML_API thread_finalize(void* self);
VOIDCSFML_API thread_launch(void* self);
VOIDCSFML_API thread_wait(void* self);
VOIDCSFML_API thread_terminate(void* self);
#endif
