require "../config"
require "../window/lib"
require "../system/lib"
@[Link("voidcsfml-graphics")]
lib VoidCSFML
  fun blendmode_initialize(self : Void*)
  fun blendmode_initialize_8xr8xrBw1(self : Void*, source_factor : LibC::Int, destination_factor : LibC::Int, blend_equation : LibC::Int)
  fun blendmode_initialize_8xr8xrBw18xr8xrBw1(self : Void*, color_source_factor : LibC::Int, color_destination_factor : LibC::Int, color_blend_equation : LibC::Int, alpha_source_factor : LibC::Int, alpha_destination_factor : LibC::Int, alpha_blend_equation : LibC::Int)
  fun blendmode_setcolorsrcfactor_8xr(self : Void*, color_src_factor : LibC::Int)
  fun blendmode_setcolordstfactor_8xr(self : Void*, color_dst_factor : LibC::Int)
  fun blendmode_setcolorequation_Bw1(self : Void*, color_equation : LibC::Int)
  fun blendmode_setalphasrcfactor_8xr(self : Void*, alpha_src_factor : LibC::Int)
  fun blendmode_setalphadstfactor_8xr(self : Void*, alpha_dst_factor : LibC::Int)
  fun blendmode_setalphaequation_Bw1(self : Void*, alpha_equation : LibC::Int)
  fun operator_eq_PG5PG5(left : Void*, right : Void*, result : Bool*)
  fun operator_ne_PG5PG5(left : Void*, right : Void*, result : Bool*)
  fun blendmode_initialize_PG5(self : Void*, copy : Void*)
  fun transform_initialize(self : Void*)
  fun transform_initialize_Bw9Bw9Bw9Bw9Bw9Bw9Bw9Bw9Bw9(self : Void*, a00 : LibC::Float, a01 : LibC::Float, a02 : LibC::Float, a10 : LibC::Float, a11 : LibC::Float, a12 : LibC::Float, a20 : LibC::Float, a21 : LibC::Float, a22 : LibC::Float)
  fun transform_getmatrix(self : Void*, result : LibC::Float**)
  fun transform_getinverse(self : Void*, result : Void*)
  fun transform_transformpoint_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float, result : Void*)
  fun transform_transformpoint_UU2(self : Void*, point : Void*, result : Void*)
  fun transform_transformrect_WPZ(self : Void*, rectangle : Void*, result : Void*)
  fun transform_combine_FPe(self : Void*, transform : Void*, result : Void*)
  fun transform_translate_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float, result : Void*)
  fun transform_translate_UU2(self : Void*, offset : Void*, result : Void*)
  fun transform_rotate_Bw9(self : Void*, angle : LibC::Float, result : Void*)
  fun transform_rotate_Bw9Bw9Bw9(self : Void*, angle : LibC::Float, center_x : LibC::Float, center_y : LibC::Float, result : Void*)
  fun transform_rotate_Bw9UU2(self : Void*, angle : LibC::Float, center : Void*, result : Void*)
  fun transform_scale_Bw9Bw9(self : Void*, scale_x : LibC::Float, scale_y : LibC::Float, result : Void*)
  fun transform_scale_Bw9Bw9Bw9Bw9(self : Void*, scale_x : LibC::Float, scale_y : LibC::Float, center_x : LibC::Float, center_y : LibC::Float, result : Void*)
  fun transform_scale_UU2(self : Void*, factors : Void*, result : Void*)
  fun transform_scale_UU2UU2(self : Void*, factors : Void*, center : Void*, result : Void*)
  fun operator_mul_FPeFPe(left : Void*, right : Void*, result : Void*)
  fun operator_mul_FPeUU2(left : Void*, right : Void*, result : Void*)
  fun transform_initialize_FPe(self : Void*, copy : Void*)
  fun renderstates_initialize(self : Void*)
  fun renderstates_initialize_PG5(self : Void*, blend_mode : Void*)
  fun renderstates_initialize_FPe(self : Void*, transform : Void*)
  fun renderstates_initialize_MXd(self : Void*, texture : Void*)
  fun renderstates_initialize_8P6(self : Void*, shader : Void*)
  fun renderstates_initialize_PG5FPeMXd8P6(self : Void*, blend_mode : Void*, transform : Void*, texture : Void*, shader : Void*)
  fun renderstates_setblendmode_CPE(self : Void*, blend_mode : Void*)
  fun renderstates_settransform_lbe(self : Void*, transform : Void*)
  fun renderstates_settexture_MXd(self : Void*, texture : Void*)
  fun renderstates_setshader_8P6(self : Void*, shader : Void*)
  fun renderstates_initialize_mi4(self : Void*, copy : Void*)
  fun transformable_initialize(self : Void*)
  fun transformable_finalize(self : Void*)
  fun transformable_setposition_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun transformable_setposition_UU2(self : Void*, position : Void*)
  fun transformable_setrotation_Bw9(self : Void*, angle : LibC::Float)
  fun transformable_setscale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun transformable_setscale_UU2(self : Void*, factors : Void*)
  fun transformable_setorigin_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun transformable_setorigin_UU2(self : Void*, origin : Void*)
  fun transformable_getposition(self : Void*, result : Void*)
  fun transformable_getrotation(self : Void*, result : LibC::Float*)
  fun transformable_getscale(self : Void*, result : Void*)
  fun transformable_getorigin(self : Void*, result : Void*)
  fun transformable_move_Bw9Bw9(self : Void*, offset_x : LibC::Float, offset_y : LibC::Float)
  fun transformable_move_UU2(self : Void*, offset : Void*)
  fun transformable_rotate_Bw9(self : Void*, angle : LibC::Float)
  fun transformable_scale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun transformable_scale_UU2(self : Void*, factor : Void*)
  fun transformable_gettransform(self : Void*, result : Void*)
  fun transformable_getinversetransform(self : Void*, result : Void*)
  fun transformable_initialize_dkg(self : Void*, copy : Void*)
  fun color_initialize(self : Void*)
  fun color_initialize_9yU9yU9yU9yU(self : Void*, red : UInt8, green : UInt8, blue : UInt8, alpha : UInt8)
  fun color_initialize_saL(self : Void*, color : UInt32)
  fun color_tointeger(self : Void*, result : UInt32*)
  fun color_setr_9yU(self : Void*, r : UInt8)
  fun color_setg_9yU(self : Void*, g : UInt8)
  fun color_setb_9yU(self : Void*, b : UInt8)
  fun color_seta_9yU(self : Void*, a : UInt8)
  fun operator_eq_QVeQVe(left : Void*, right : Void*, result : Bool*)
  fun operator_ne_QVeQVe(left : Void*, right : Void*, result : Bool*)
  fun operator_add_QVeQVe(left : Void*, right : Void*, result : Void*)
  fun operator_sub_QVeQVe(left : Void*, right : Void*, result : Void*)
  fun operator_mul_QVeQVe(left : Void*, right : Void*, result : Void*)
  fun color_initialize_QVe(self : Void*, copy : Void*)
  fun vertex_initialize(self : Void*)
  fun vertex_initialize_UU2(self : Void*, position : Void*)
  fun vertex_initialize_UU2QVe(self : Void*, position : Void*, color : Void*)
  fun vertex_initialize_UU2UU2(self : Void*, position : Void*, tex_coords : Void*)
  fun vertex_initialize_UU2QVeUU2(self : Void*, position : Void*, color : Void*, tex_coords : Void*)
  fun vertex_setposition_llt(self : Void*, position : Void*)
  fun vertex_setcolor_9qU(self : Void*, color : Void*)
  fun vertex_settexcoords_llt(self : Void*, tex_coords : Void*)
  fun vertex_initialize_Y3J(self : Void*, copy : Void*)
  fun vertexarray_initialize(self : Void*)
  fun vertexarray_initialize_u9wvgv(self : Void*, type : LibC::Int, vertex_count : LibC::SizeT)
  fun vertexarray_getvertexcount(self : Void*, result : LibC::SizeT*)
  fun vertexarray_operator_indexset_vgvRos(self : Void*, index : LibC::SizeT, value : Void*)
  fun vertexarray_operator_index_vgv(self : Void*, index : LibC::SizeT, result : Void*)
  fun vertexarray_clear(self : Void*)
  fun vertexarray_resize_vgv(self : Void*, vertex_count : LibC::SizeT)
  fun vertexarray_append_Y3J(self : Void*, vertex : Void*)
  fun vertexarray_setprimitivetype_u9w(self : Void*, type : LibC::Int)
  fun vertexarray_getprimitivetype(self : Void*, result : LibC::Int*)
  fun vertexarray_getbounds(self : Void*, result : Void*)
  fun vertexarray_draw_kb9RoT(self : Void*, target : Void*, states : Void*)
  fun vertexarray_draw_fqURoT(self : Void*, target : Void*, states : Void*)
  fun vertexarray_draw_Xk1RoT(self : Void*, target : Void*, states : Void*)
  fun vertexarray_initialize_EXB(self : Void*, copy : Void*)
  $shape_getpointcount_callback : Void*, LibC::SizeT* ->
  $shape_getpoint_callback : Void*, LibC::SizeT, Void* ->
  fun shape_finalize(self : Void*)
  fun shape_settexture_MXdGZq(self : Void*, texture : Void*, reset_rect : Bool)
  fun shape_settexturerect_2k1(self : Void*, rect : Void*)
  fun shape_setfillcolor_QVe(self : Void*, color : Void*)
  fun shape_setoutlinecolor_QVe(self : Void*, color : Void*)
  fun shape_setoutlinethickness_Bw9(self : Void*, thickness : LibC::Float)
  fun shape_gettexture(self : Void*, result : Void**)
  fun shape_gettexturerect(self : Void*, result : Void*)
  fun shape_getfillcolor(self : Void*, result : Void*)
  fun shape_getoutlinecolor(self : Void*, result : Void*)
  fun shape_getoutlinethickness(self : Void*, result : LibC::Float*)
  fun shape_getlocalbounds(self : Void*, result : Void*)
  fun shape_getglobalbounds(self : Void*, result : Void*)
  fun shape_initialize(self : Void*)
  fun shape_update(self : Void*)
  fun shape_setposition_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun shape_setposition_UU2(self : Void*, position : Void*)
  fun shape_setrotation_Bw9(self : Void*, angle : LibC::Float)
  fun shape_setscale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun shape_setscale_UU2(self : Void*, factors : Void*)
  fun shape_setorigin_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun shape_setorigin_UU2(self : Void*, origin : Void*)
  fun shape_getposition(self : Void*, result : Void*)
  fun shape_getrotation(self : Void*, result : LibC::Float*)
  fun shape_getscale(self : Void*, result : Void*)
  fun shape_getorigin(self : Void*, result : Void*)
  fun shape_move_Bw9Bw9(self : Void*, offset_x : LibC::Float, offset_y : LibC::Float)
  fun shape_move_UU2(self : Void*, offset : Void*)
  fun shape_rotate_Bw9(self : Void*, angle : LibC::Float)
  fun shape_scale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun shape_scale_UU2(self : Void*, factor : Void*)
  fun shape_gettransform(self : Void*, result : Void*)
  fun shape_getinversetransform(self : Void*, result : Void*)
  fun shape_draw_kb9RoT(self : Void*, target : Void*, states : Void*)
  fun shape_draw_fqURoT(self : Void*, target : Void*, states : Void*)
  fun shape_draw_Xk1RoT(self : Void*, target : Void*, states : Void*)
  fun shape_initialize_r5K(self : Void*, copy : Void*)
  fun circleshape_initialize_Bw9vgv(self : Void*, radius : LibC::Float, point_count : LibC::SizeT)
  fun circleshape_setradius_Bw9(self : Void*, radius : LibC::Float)
  fun circleshape_getradius(self : Void*, result : LibC::Float*)
  fun circleshape_setpointcount_vgv(self : Void*, count : LibC::SizeT)
  fun circleshape_getpointcount(self : Void*, result : LibC::SizeT*)
  fun circleshape_getpoint_vgv(self : Void*, index : LibC::SizeT, result : Void*)
  fun circleshape_settexture_MXdGZq(self : Void*, texture : Void*, reset_rect : Bool)
  fun circleshape_settexturerect_2k1(self : Void*, rect : Void*)
  fun circleshape_setfillcolor_QVe(self : Void*, color : Void*)
  fun circleshape_setoutlinecolor_QVe(self : Void*, color : Void*)
  fun circleshape_setoutlinethickness_Bw9(self : Void*, thickness : LibC::Float)
  fun circleshape_gettexture(self : Void*, result : Void**)
  fun circleshape_gettexturerect(self : Void*, result : Void*)
  fun circleshape_getfillcolor(self : Void*, result : Void*)
  fun circleshape_getoutlinecolor(self : Void*, result : Void*)
  fun circleshape_getoutlinethickness(self : Void*, result : LibC::Float*)
  fun circleshape_getlocalbounds(self : Void*, result : Void*)
  fun circleshape_getglobalbounds(self : Void*, result : Void*)
  fun circleshape_setposition_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun circleshape_setposition_UU2(self : Void*, position : Void*)
  fun circleshape_setrotation_Bw9(self : Void*, angle : LibC::Float)
  fun circleshape_setscale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun circleshape_setscale_UU2(self : Void*, factors : Void*)
  fun circleshape_setorigin_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun circleshape_setorigin_UU2(self : Void*, origin : Void*)
  fun circleshape_getposition(self : Void*, result : Void*)
  fun circleshape_getrotation(self : Void*, result : LibC::Float*)
  fun circleshape_getscale(self : Void*, result : Void*)
  fun circleshape_getorigin(self : Void*, result : Void*)
  fun circleshape_move_Bw9Bw9(self : Void*, offset_x : LibC::Float, offset_y : LibC::Float)
  fun circleshape_move_UU2(self : Void*, offset : Void*)
  fun circleshape_rotate_Bw9(self : Void*, angle : LibC::Float)
  fun circleshape_scale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun circleshape_scale_UU2(self : Void*, factor : Void*)
  fun circleshape_gettransform(self : Void*, result : Void*)
  fun circleshape_getinversetransform(self : Void*, result : Void*)
  fun circleshape_draw_kb9RoT(self : Void*, target : Void*, states : Void*)
  fun circleshape_draw_fqURoT(self : Void*, target : Void*, states : Void*)
  fun circleshape_draw_Xk1RoT(self : Void*, target : Void*, states : Void*)
  fun circleshape_initialize_Ii7(self : Void*, copy : Void*)
  fun convexshape_initialize_vgv(self : Void*, point_count : LibC::SizeT)
  fun convexshape_setpointcount_vgv(self : Void*, count : LibC::SizeT)
  fun convexshape_getpointcount(self : Void*, result : LibC::SizeT*)
  fun convexshape_setpoint_vgvUU2(self : Void*, index : LibC::SizeT, point : Void*)
  fun convexshape_getpoint_vgv(self : Void*, index : LibC::SizeT, result : Void*)
  fun convexshape_settexture_MXdGZq(self : Void*, texture : Void*, reset_rect : Bool)
  fun convexshape_settexturerect_2k1(self : Void*, rect : Void*)
  fun convexshape_setfillcolor_QVe(self : Void*, color : Void*)
  fun convexshape_setoutlinecolor_QVe(self : Void*, color : Void*)
  fun convexshape_setoutlinethickness_Bw9(self : Void*, thickness : LibC::Float)
  fun convexshape_gettexture(self : Void*, result : Void**)
  fun convexshape_gettexturerect(self : Void*, result : Void*)
  fun convexshape_getfillcolor(self : Void*, result : Void*)
  fun convexshape_getoutlinecolor(self : Void*, result : Void*)
  fun convexshape_getoutlinethickness(self : Void*, result : LibC::Float*)
  fun convexshape_getlocalbounds(self : Void*, result : Void*)
  fun convexshape_getglobalbounds(self : Void*, result : Void*)
  fun convexshape_setposition_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun convexshape_setposition_UU2(self : Void*, position : Void*)
  fun convexshape_setrotation_Bw9(self : Void*, angle : LibC::Float)
  fun convexshape_setscale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun convexshape_setscale_UU2(self : Void*, factors : Void*)
  fun convexshape_setorigin_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun convexshape_setorigin_UU2(self : Void*, origin : Void*)
  fun convexshape_getposition(self : Void*, result : Void*)
  fun convexshape_getrotation(self : Void*, result : LibC::Float*)
  fun convexshape_getscale(self : Void*, result : Void*)
  fun convexshape_getorigin(self : Void*, result : Void*)
  fun convexshape_move_Bw9Bw9(self : Void*, offset_x : LibC::Float, offset_y : LibC::Float)
  fun convexshape_move_UU2(self : Void*, offset : Void*)
  fun convexshape_rotate_Bw9(self : Void*, angle : LibC::Float)
  fun convexshape_scale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun convexshape_scale_UU2(self : Void*, factor : Void*)
  fun convexshape_gettransform(self : Void*, result : Void*)
  fun convexshape_getinversetransform(self : Void*, result : Void*)
  fun convexshape_draw_kb9RoT(self : Void*, target : Void*, states : Void*)
  fun convexshape_draw_fqURoT(self : Void*, target : Void*, states : Void*)
  fun convexshape_draw_Xk1RoT(self : Void*, target : Void*, states : Void*)
  fun convexshape_initialize_Ydx(self : Void*, copy : Void*)
  fun glyph_initialize(self : Void*)
  fun glyph_setadvance_Bw9(self : Void*, advance : LibC::Float)
  fun glyph_setbounds_5MC(self : Void*, bounds : Void*)
  fun glyph_settexturerect_POq(self : Void*, texture_rect : Void*)
  fun glyph_initialize_UlF(self : Void*, copy : Void*)
  fun image_initialize(self : Void*)
  fun image_finalize(self : Void*)
  fun image_create_emSemSQVe(self : Void*, width : LibC::UInt, height : LibC::UInt, color : Void*)
  fun image_create_emSemS843(self : Void*, width : LibC::UInt, height : LibC::UInt, pixels : UInt8*)
  fun image_loadfromfile_zkC(self : Void*, filename_size : LibC::SizeT, filename : LibC::Char*, result : Bool*)
  fun image_loadfrommemory_5h8vgv(self : Void*, data : UInt8*, size : LibC::SizeT, result : Bool*)
  fun image_loadfromstream_PO0(self : Void*, stream : Void*, result : Bool*)
  fun image_savetofile_zkC(self : Void*, filename_size : LibC::SizeT, filename : LibC::Char*, result : Bool*)
  fun image_getsize(self : Void*, result : Void*)
  fun image_createmaskfromcolor_QVe9yU(self : Void*, color : Void*, alpha : UInt8)
  fun image_copy_dptemSemS2k1GZq(self : Void*, source : Void*, dest_x : LibC::UInt, dest_y : LibC::UInt, source_rect : Void*, apply_alpha : Bool)
  fun image_setpixel_emSemSQVe(self : Void*, x : LibC::UInt, y : LibC::UInt, color : Void*)
  fun image_getpixel_emSemS(self : Void*, x : LibC::UInt, y : LibC::UInt, result : Void*)
  fun image_getpixelsptr(self : Void*, result : UInt8**)
  fun image_fliphorizontally(self : Void*)
  fun image_flipvertically(self : Void*)
  fun image_initialize_dpt(self : Void*, copy : Void*)
  fun texture_initialize(self : Void*)
  fun texture_finalize(self : Void*)
  fun texture_create_emSemS(self : Void*, width : LibC::UInt, height : LibC::UInt, result : Bool*)
  fun texture_loadfromfile_zkC2k1(self : Void*, filename_size : LibC::SizeT, filename : LibC::Char*, area : Void*, result : Bool*)
  fun texture_loadfrommemory_5h8vgv2k1(self : Void*, data : UInt8*, size : LibC::SizeT, area : Void*, result : Bool*)
  fun texture_loadfromstream_PO02k1(self : Void*, stream : Void*, area : Void*, result : Bool*)
  fun texture_loadfromimage_dpt2k1(self : Void*, image : Void*, area : Void*, result : Bool*)
  fun texture_getsize(self : Void*, result : Void*)
  fun texture_copytoimage(self : Void*, result : Void*)
  fun texture_update_843(self : Void*, pixels : UInt8*)
  fun texture_update_843emSemSemSemS(self : Void*, pixels : UInt8*, width : LibC::UInt, height : LibC::UInt, x : LibC::UInt, y : LibC::UInt)
  fun texture_update_dpt(self : Void*, image : Void*)
  fun texture_update_dptemSemS(self : Void*, image : Void*, x : LibC::UInt, y : LibC::UInt)
  fun texture_update_JRh(self : Void*, window : Void*)
  fun texture_update_JRhemSemS(self : Void*, window : Void*, x : LibC::UInt, y : LibC::UInt)
  fun texture_setsmooth_GZq(self : Void*, smooth : Bool)
  fun texture_issmooth(self : Void*, result : Bool*)
  fun texture_setrepeated_GZq(self : Void*, repeated : Bool)
  fun texture_isrepeated(self : Void*, result : Bool*)
  fun texture_getnativehandle(self : Void*, result : LibC::UInt*)
  fun texture_bind_MXdK9j(texture : Void*, coordinate_type : LibC::Int)
  fun texture_getmaximumsize(result : LibC::UInt*)
  fun texture_initialize_DJb(self : Void*, copy : Void*)
  fun font_info_initialize(self : Void*)
  fun font_info_getfamily(self : Void*, result : LibC::Char**)
  fun font_info_setfamily_Fzm(self : Void*, family_size : LibC::SizeT, family : LibC::Char*)
  fun font_info_initialize_HPc(self : Void*, copy : Void*)
  fun font_initialize(self : Void*)
  fun font_finalize(self : Void*)
  fun font_loadfromfile_zkC(self : Void*, filename_size : LibC::SizeT, filename : LibC::Char*, result : Bool*)
  fun font_loadfrommemory_5h8vgv(self : Void*, data : UInt8*, size_in_bytes : LibC::SizeT, result : Bool*)
  fun font_loadfromstream_PO0(self : Void*, stream : Void*, result : Bool*)
  fun font_getinfo(self : Void*, result : Void**)
  fun font_getglyph_saLemSGZq(self : Void*, code_point : UInt32, character_size : LibC::UInt, bold : Bool, result : Void*)
  fun font_getkerning_saLsaLemS(self : Void*, first : UInt32, second : UInt32, character_size : LibC::UInt, result : LibC::Float*)
  fun font_getlinespacing_emS(self : Void*, character_size : LibC::UInt, result : LibC::Float*)
  fun font_getunderlineposition_emS(self : Void*, character_size : LibC::UInt, result : LibC::Float*)
  fun font_getunderlinethickness_emS(self : Void*, character_size : LibC::UInt, result : LibC::Float*)
  fun font_gettexture_emS(self : Void*, character_size : LibC::UInt, result : Void**)
  fun font_initialize_7CF(self : Void*, copy : Void*)
  fun rectangleshape_initialize_UU2(self : Void*, size : Void*)
  fun rectangleshape_setsize_UU2(self : Void*, size : Void*)
  fun rectangleshape_getsize(self : Void*, result : Void*)
  fun rectangleshape_getpointcount(self : Void*, result : LibC::SizeT*)
  fun rectangleshape_getpoint_vgv(self : Void*, index : LibC::SizeT, result : Void*)
  fun rectangleshape_settexture_MXdGZq(self : Void*, texture : Void*, reset_rect : Bool)
  fun rectangleshape_settexturerect_2k1(self : Void*, rect : Void*)
  fun rectangleshape_setfillcolor_QVe(self : Void*, color : Void*)
  fun rectangleshape_setoutlinecolor_QVe(self : Void*, color : Void*)
  fun rectangleshape_setoutlinethickness_Bw9(self : Void*, thickness : LibC::Float)
  fun rectangleshape_gettexture(self : Void*, result : Void**)
  fun rectangleshape_gettexturerect(self : Void*, result : Void*)
  fun rectangleshape_getfillcolor(self : Void*, result : Void*)
  fun rectangleshape_getoutlinecolor(self : Void*, result : Void*)
  fun rectangleshape_getoutlinethickness(self : Void*, result : LibC::Float*)
  fun rectangleshape_getlocalbounds(self : Void*, result : Void*)
  fun rectangleshape_getglobalbounds(self : Void*, result : Void*)
  fun rectangleshape_setposition_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun rectangleshape_setposition_UU2(self : Void*, position : Void*)
  fun rectangleshape_setrotation_Bw9(self : Void*, angle : LibC::Float)
  fun rectangleshape_setscale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun rectangleshape_setscale_UU2(self : Void*, factors : Void*)
  fun rectangleshape_setorigin_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun rectangleshape_setorigin_UU2(self : Void*, origin : Void*)
  fun rectangleshape_getposition(self : Void*, result : Void*)
  fun rectangleshape_getrotation(self : Void*, result : LibC::Float*)
  fun rectangleshape_getscale(self : Void*, result : Void*)
  fun rectangleshape_getorigin(self : Void*, result : Void*)
  fun rectangleshape_move_Bw9Bw9(self : Void*, offset_x : LibC::Float, offset_y : LibC::Float)
  fun rectangleshape_move_UU2(self : Void*, offset : Void*)
  fun rectangleshape_rotate_Bw9(self : Void*, angle : LibC::Float)
  fun rectangleshape_scale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun rectangleshape_scale_UU2(self : Void*, factor : Void*)
  fun rectangleshape_gettransform(self : Void*, result : Void*)
  fun rectangleshape_getinversetransform(self : Void*, result : Void*)
  fun rectangleshape_draw_kb9RoT(self : Void*, target : Void*, states : Void*)
  fun rectangleshape_draw_fqURoT(self : Void*, target : Void*, states : Void*)
  fun rectangleshape_draw_Xk1RoT(self : Void*, target : Void*, states : Void*)
  fun rectangleshape_initialize_wlj(self : Void*, copy : Void*)
  fun view_initialize(self : Void*)
  fun view_initialize_WPZ(self : Void*, rectangle : Void*)
  fun view_initialize_UU2UU2(self : Void*, center : Void*, size : Void*)
  fun view_setcenter_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun view_setcenter_UU2(self : Void*, center : Void*)
  fun view_setsize_Bw9Bw9(self : Void*, width : LibC::Float, height : LibC::Float)
  fun view_setsize_UU2(self : Void*, size : Void*)
  fun view_setrotation_Bw9(self : Void*, angle : LibC::Float)
  fun view_setviewport_WPZ(self : Void*, viewport : Void*)
  fun view_reset_WPZ(self : Void*, rectangle : Void*)
  fun view_getcenter(self : Void*, result : Void*)
  fun view_getsize(self : Void*, result : Void*)
  fun view_getrotation(self : Void*, result : LibC::Float*)
  fun view_getviewport(self : Void*, result : Void*)
  fun view_move_Bw9Bw9(self : Void*, offset_x : LibC::Float, offset_y : LibC::Float)
  fun view_move_UU2(self : Void*, offset : Void*)
  fun view_rotate_Bw9(self : Void*, angle : LibC::Float)
  fun view_zoom_Bw9(self : Void*, factor : LibC::Float)
  fun view_gettransform(self : Void*, result : Void*)
  fun view_getinversetransform(self : Void*, result : Void*)
  fun view_initialize_DDi(self : Void*, copy : Void*)
  fun rendertarget_clear_QVe(self : Void*, color : Void*)
  fun rendertarget_setview_DDi(self : Void*, view : Void*)
  fun rendertarget_getview(self : Void*, result : Void**)
  fun rendertarget_getdefaultview(self : Void*, result : Void**)
  fun rendertarget_getviewport_DDi(self : Void*, view : Void*, result : Void*)
  fun rendertarget_mappixeltocoords_ufV(self : Void*, point : Void*, result : Void*)
  fun rendertarget_mappixeltocoords_ufVDDi(self : Void*, point : Void*, view : Void*, result : Void*)
  fun rendertarget_mapcoordstopixel_UU2(self : Void*, point : Void*, result : Void*)
  fun rendertarget_mapcoordstopixel_UU2DDi(self : Void*, point : Void*, view : Void*, result : Void*)
  fun rendertarget_draw_46svgvu9wmi4(self : Void*, vertices : Void*, vertex_count : LibC::SizeT, type : LibC::Int, states : Void*)
  fun rendertarget_pushglstates(self : Void*)
  fun rendertarget_popglstates(self : Void*)
  fun rendertarget_resetglstates(self : Void*)
  fun rendertexture_initialize(self : Void*)
  fun rendertexture_finalize(self : Void*)
  fun rendertexture_create_emSemSGZq(self : Void*, width : LibC::UInt, height : LibC::UInt, depth_buffer : Bool, result : Bool*)
  fun rendertexture_setsmooth_GZq(self : Void*, smooth : Bool)
  fun rendertexture_issmooth(self : Void*, result : Bool*)
  fun rendertexture_setrepeated_GZq(self : Void*, repeated : Bool)
  fun rendertexture_isrepeated(self : Void*, result : Bool*)
  fun rendertexture_setactive_GZq(self : Void*, active : Bool, result : Bool*)
  fun rendertexture_display(self : Void*)
  fun rendertexture_getsize(self : Void*, result : Void*)
  fun rendertexture_gettexture(self : Void*, result : Void**)
  fun rendertexture_clear_QVe(self : Void*, color : Void*)
  fun rendertexture_setview_DDi(self : Void*, view : Void*)
  fun rendertexture_getview(self : Void*, result : Void**)
  fun rendertexture_getdefaultview(self : Void*, result : Void**)
  fun rendertexture_getviewport_DDi(self : Void*, view : Void*, result : Void*)
  fun rendertexture_mappixeltocoords_ufV(self : Void*, point : Void*, result : Void*)
  fun rendertexture_mappixeltocoords_ufVDDi(self : Void*, point : Void*, view : Void*, result : Void*)
  fun rendertexture_mapcoordstopixel_UU2(self : Void*, point : Void*, result : Void*)
  fun rendertexture_mapcoordstopixel_UU2DDi(self : Void*, point : Void*, view : Void*, result : Void*)
  fun rendertexture_draw_46svgvu9wmi4(self : Void*, vertices : Void*, vertex_count : LibC::SizeT, type : LibC::Int, states : Void*)
  fun rendertexture_pushglstates(self : Void*)
  fun rendertexture_popglstates(self : Void*)
  fun rendertexture_resetglstates(self : Void*)
  fun renderwindow_initialize(self : Void*)
  fun renderwindow_initialize_wg0bQssaLFw4(self : Void*, mode : Void*, title_size : LibC::SizeT, title : Char*, style : UInt32, settings : Void*)
  fun renderwindow_initialize_rLQFw4(self : Void*, handle : WindowHandle, settings : Void*)
  fun renderwindow_finalize(self : Void*)
  fun renderwindow_getsize(self : Void*, result : Void*)
  fun renderwindow_capture(self : Void*, result : Void*)
  fun renderwindow_create_wg0bQssaLFw4(self : Void*, mode : Void*, title_size : LibC::SizeT, title : Char*, style : UInt32, settings : Void*)
  fun renderwindow_create_rLQFw4(self : Void*, handle : WindowHandle, settings : Void*)
  fun renderwindow_close(self : Void*)
  fun renderwindow_isopen(self : Void*, result : Bool*)
  fun renderwindow_getsettings(self : Void*, result : Void*)
  fun renderwindow_pollevent_YJW(self : Void*, event : Void*, result : Bool*)
  fun renderwindow_waitevent_YJW(self : Void*, event : Void*, result : Bool*)
  fun renderwindow_getposition(self : Void*, result : Void*)
  fun renderwindow_setposition_ufV(self : Void*, position : Void*)
  fun renderwindow_setsize_DXO(self : Void*, size : Void*)
  fun renderwindow_settitle_bQs(self : Void*, title_size : LibC::SizeT, title : Char*)
  fun renderwindow_seticon_emSemS843(self : Void*, width : LibC::UInt, height : LibC::UInt, pixels : UInt8*)
  fun renderwindow_setvisible_GZq(self : Void*, visible : Bool)
  fun renderwindow_setverticalsyncenabled_GZq(self : Void*, enabled : Bool)
  fun renderwindow_setmousecursorvisible_GZq(self : Void*, visible : Bool)
  fun renderwindow_setkeyrepeatenabled_GZq(self : Void*, enabled : Bool)
  fun renderwindow_setframeratelimit_emS(self : Void*, limit : LibC::UInt)
  fun renderwindow_setjoystickthreshold_Bw9(self : Void*, threshold : LibC::Float)
  fun renderwindow_setactive_GZq(self : Void*, active : Bool, result : Bool*)
  fun renderwindow_requestfocus(self : Void*)
  fun renderwindow_hasfocus(self : Void*, result : Bool*)
  fun renderwindow_display(self : Void*)
  fun renderwindow_getsystemhandle(self : Void*, result : WindowHandle*)
  fun renderwindow_clear_QVe(self : Void*, color : Void*)
  fun renderwindow_setview_DDi(self : Void*, view : Void*)
  fun renderwindow_getview(self : Void*, result : Void**)
  fun renderwindow_getdefaultview(self : Void*, result : Void**)
  fun renderwindow_getviewport_DDi(self : Void*, view : Void*, result : Void*)
  fun renderwindow_mappixeltocoords_ufV(self : Void*, point : Void*, result : Void*)
  fun renderwindow_mappixeltocoords_ufVDDi(self : Void*, point : Void*, view : Void*, result : Void*)
  fun renderwindow_mapcoordstopixel_UU2(self : Void*, point : Void*, result : Void*)
  fun renderwindow_mapcoordstopixel_UU2DDi(self : Void*, point : Void*, view : Void*, result : Void*)
  fun renderwindow_draw_46svgvu9wmi4(self : Void*, vertices : Void*, vertex_count : LibC::SizeT, type : LibC::Int, states : Void*)
  fun renderwindow_pushglstates(self : Void*)
  fun renderwindow_popglstates(self : Void*)
  fun renderwindow_resetglstates(self : Void*)
  fun shader_initialize(self : Void*)
  fun shader_finalize(self : Void*)
  fun shader_loadfromfile_zkCqL0(self : Void*, filename_size : LibC::SizeT, filename : LibC::Char*, type : LibC::Int, result : Bool*)
  fun shader_loadfromfile_zkCzkC(self : Void*, vertex_shader_filename_size : LibC::SizeT, vertex_shader_filename : LibC::Char*, fragment_shader_filename_size : LibC::SizeT, fragment_shader_filename : LibC::Char*, result : Bool*)
  fun shader_loadfrommemory_zkCqL0(self : Void*, shader_size : LibC::SizeT, shader : LibC::Char*, type : LibC::Int, result : Bool*)
  fun shader_loadfrommemory_zkCzkC(self : Void*, vertex_shader_size : LibC::SizeT, vertex_shader : LibC::Char*, fragment_shader_size : LibC::SizeT, fragment_shader : LibC::Char*, result : Bool*)
  fun shader_loadfromstream_PO0qL0(self : Void*, stream : Void*, type : LibC::Int, result : Bool*)
  fun shader_loadfromstream_PO0PO0(self : Void*, vertex_shader_stream : Void*, fragment_shader_stream : Void*, result : Bool*)
  fun shader_setparameter_zkCBw9(self : Void*, name_size : LibC::SizeT, name : LibC::Char*, x : LibC::Float)
  fun shader_setparameter_zkCBw9Bw9(self : Void*, name_size : LibC::SizeT, name : LibC::Char*, x : LibC::Float, y : LibC::Float)
  fun shader_setparameter_zkCBw9Bw9Bw9(self : Void*, name_size : LibC::SizeT, name : LibC::Char*, x : LibC::Float, y : LibC::Float, z : LibC::Float)
  fun shader_setparameter_zkCBw9Bw9Bw9Bw9(self : Void*, name_size : LibC::SizeT, name : LibC::Char*, x : LibC::Float, y : LibC::Float, z : LibC::Float, w : LibC::Float)
  fun shader_setparameter_zkCUU2(self : Void*, name_size : LibC::SizeT, name : LibC::Char*, vector : Void*)
  fun shader_setparameter_zkCNzM(self : Void*, name_size : LibC::SizeT, name : LibC::Char*, vector : Void*)
  fun shader_setparameter_zkCQVe(self : Void*, name_size : LibC::SizeT, name : LibC::Char*, color : Void*)
  fun shader_setparameter_zkCFPe(self : Void*, name_size : LibC::SizeT, name : LibC::Char*, transform : Void*)
  fun shader_setparameter_zkCDJb(self : Void*, name_size : LibC::SizeT, name : LibC::Char*, texture : Void*)
  fun shader_setparameter_zkCLcV(self : Void*, name_size : LibC::SizeT, name : LibC::Char*)
  fun shader_getnativehandle(self : Void*, result : LibC::UInt*)
  fun shader_bind_8P6(shader : Void*)
  fun shader_isavailable(result : Bool*)
  fun sprite_initialize(self : Void*)
  fun sprite_initialize_DJb(self : Void*, texture : Void*)
  fun sprite_initialize_DJb2k1(self : Void*, texture : Void*, rectangle : Void*)
  fun sprite_settexture_DJbGZq(self : Void*, texture : Void*, reset_rect : Bool)
  fun sprite_settexturerect_2k1(self : Void*, rectangle : Void*)
  fun sprite_setcolor_QVe(self : Void*, color : Void*)
  fun sprite_gettexture(self : Void*, result : Void**)
  fun sprite_gettexturerect(self : Void*, result : Void*)
  fun sprite_getcolor(self : Void*, result : Void*)
  fun sprite_getlocalbounds(self : Void*, result : Void*)
  fun sprite_getglobalbounds(self : Void*, result : Void*)
  fun sprite_setposition_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun sprite_setposition_UU2(self : Void*, position : Void*)
  fun sprite_setrotation_Bw9(self : Void*, angle : LibC::Float)
  fun sprite_setscale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun sprite_setscale_UU2(self : Void*, factors : Void*)
  fun sprite_setorigin_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun sprite_setorigin_UU2(self : Void*, origin : Void*)
  fun sprite_getposition(self : Void*, result : Void*)
  fun sprite_getrotation(self : Void*, result : LibC::Float*)
  fun sprite_getscale(self : Void*, result : Void*)
  fun sprite_getorigin(self : Void*, result : Void*)
  fun sprite_move_Bw9Bw9(self : Void*, offset_x : LibC::Float, offset_y : LibC::Float)
  fun sprite_move_UU2(self : Void*, offset : Void*)
  fun sprite_rotate_Bw9(self : Void*, angle : LibC::Float)
  fun sprite_scale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun sprite_scale_UU2(self : Void*, factor : Void*)
  fun sprite_gettransform(self : Void*, result : Void*)
  fun sprite_getinversetransform(self : Void*, result : Void*)
  fun sprite_draw_kb9RoT(self : Void*, target : Void*, states : Void*)
  fun sprite_draw_fqURoT(self : Void*, target : Void*, states : Void*)
  fun sprite_draw_Xk1RoT(self : Void*, target : Void*, states : Void*)
  fun sprite_initialize_8xu(self : Void*, copy : Void*)
  fun text_initialize(self : Void*)
  fun text_initialize_bQs7CFemS(self : Void*, string_size : LibC::SizeT, string : Char*, font : Void*, character_size : LibC::UInt)
  fun text_setstring_bQs(self : Void*, string_size : LibC::SizeT, string : Char*)
  fun text_setfont_7CF(self : Void*, font : Void*)
  fun text_setcharactersize_emS(self : Void*, size : LibC::UInt)
  fun text_setstyle_saL(self : Void*, style : UInt32)
  fun text_setcolor_QVe(self : Void*, color : Void*)
  fun text_getstring(self : Void*, result : Char**)
  fun text_getfont(self : Void*, result : Void**)
  fun text_getcharactersize(self : Void*, result : LibC::UInt*)
  fun text_getstyle(self : Void*, result : UInt32*)
  fun text_getcolor(self : Void*, result : Void*)
  fun text_findcharacterpos_vgv(self : Void*, index : LibC::SizeT, result : Void*)
  fun text_getlocalbounds(self : Void*, result : Void*)
  fun text_getglobalbounds(self : Void*, result : Void*)
  fun text_setposition_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun text_setposition_UU2(self : Void*, position : Void*)
  fun text_setrotation_Bw9(self : Void*, angle : LibC::Float)
  fun text_setscale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun text_setscale_UU2(self : Void*, factors : Void*)
  fun text_setorigin_Bw9Bw9(self : Void*, x : LibC::Float, y : LibC::Float)
  fun text_setorigin_UU2(self : Void*, origin : Void*)
  fun text_getposition(self : Void*, result : Void*)
  fun text_getrotation(self : Void*, result : LibC::Float*)
  fun text_getscale(self : Void*, result : Void*)
  fun text_getorigin(self : Void*, result : Void*)
  fun text_move_Bw9Bw9(self : Void*, offset_x : LibC::Float, offset_y : LibC::Float)
  fun text_move_UU2(self : Void*, offset : Void*)
  fun text_rotate_Bw9(self : Void*, angle : LibC::Float)
  fun text_scale_Bw9Bw9(self : Void*, factor_x : LibC::Float, factor_y : LibC::Float)
  fun text_scale_UU2(self : Void*, factor : Void*)
  fun text_gettransform(self : Void*, result : Void*)
  fun text_getinversetransform(self : Void*, result : Void*)
  fun text_draw_kb9RoT(self : Void*, target : Void*, states : Void*)
  fun text_draw_fqURoT(self : Void*, target : Void*, states : Void*)
  fun text_draw_Xk1RoT(self : Void*, target : Void*, states : Void*)
  fun text_initialize_clM(self : Void*, copy : Void*)
  fun sfml_graphics_version(LibC::Int*, LibC::Int*, LibC::Int*)
end
