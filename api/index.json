{"repository_name":"github.com/oprypin/crsfml","body":"# ![CrSFML](logo.png)\n\n#### [Crystal][] bindings to [Simple and Fast Multimedia Library][sfml].\n\nDocumentation\n-------------\n\n- **[Installation](#installation)**\n\n- **[Tutorials][]**\n\n- **[API Documentation][]**\n\n- **[Examples](examples)** / **[Demos][]**\n\n\nIntroduction\n------------\n\n*CrSFML* is a library that allows SFML to be used with the Crystal programming language. [SFML][] is a library written in C++, so *CrSFML* also needs to ship thin [C bindings to SFML](#the-c-wrapper).\n\nTo quote the official site of SFML,\n\n> SFML provides a simple interface to the various components of your PC, to ease the development of games and multimedia applications.\n\nIndeed, SFML is most often used to make video games. It provides features such as hardware-accelerated 2D graphics, handling keyboard, mouse and gamepad input, vector and matrix manipulation, managing windows (can also be used as a base for OpenGL drawing), working with multiple image formats, audio playback and recording, basic networking... Check out some [demos] of *CrSFML* to see what it can do.\n\n*CrSFML* consists almost entirely of automatically generated code, based on SFML's header files. Read more about [generated code](CONTRIBUTING.md) and [API differences between SFML and CrSFML](#api-differences-between-sfml-and-crsfml).\n\n\nInstallation\n------------\n\nFirst, [install SFML](#install-sfml).\n\nThen create a _shard.yml_ file in your project's folder (or add to it) with the following contents:\n\n```yaml\nname: awesome-game\nversion: 0.1.0\n\ndependencies:\n  crsfml:\n    github: oprypin/crsfml\n    version: ~> 2.5.1\n```\n\nResolve dependencies with [Shards][]:\n\n```bash\nshards install\n```\n\nDuring installation this will invoke `make` to build the C++ wrappers as object files. If that fails, see [Custom SFML location](#custom-sfml-location).\n\nTry running an example:\n\n```bash\ncp lib/crsfml/examples/snakes.cr .\ncrystal snakes.cr\n```\n\nNow you're ready for the **[tutorials]**!\n\n##### Windows\n\nCrystal does not officially support Windows, but CrSFML supports it and is perfectly usable already. See [a video detailing the full setup][windows-setup].\n\n### Prerequisites\n\nThe C++ wrappers require a C++ compiler (C++03 will do).\n\n#### Install SFML\n\n[SFML][] must be installed, with the version that matches `SFML_VERSION` in [src/version.cr](src/version.cr) (usually latest). If it doesn't, no need to look for an older release of *CrSFML*, just [re-generate the sources](#generating-sources) for your version. SFML versions 2.3.x through 2.5.x are supported by *CrSFML*.\n\nThere are detailed [official instructions][sfml-install] on how to install SFML manually, but on many systems there are easier ways.\n\nIf SFML is not installed in a global/default location, see [Custom SFML location](#custom-sfml-location).\n\n##### Linux\n\nMany Linux-based systems provide SFML through their package manager. Make sure to install the *-dev* packages if there is such a separation in your Linux distribution of choice.\n\nNote that most often the packages provided by Linux distributions are outdated. If you're installing an older version of SFML (not recommended), make sure that it's still [supported by *CrSFML*](#install-sfml). You will need to [re-generate the sources](#generating-sources).\n\n##### Mac\n\nThe easiest way to install SFML on macOS is through the [Homebrew][] package manager:\n\n```bash\nbrew update\nbrew install sfml\n```\n\nIt can also be installed by copying binaries, as described in [official instructions][sfml-install].\n\n##### Windows\n\nDownloading [the official binaries][sfml-download] (\"Visual C++ 15 (2017) - 64-bit\") will do. Check out [the video on how to set things up on Windows][windows-setup].\n\n##### From source\n\nBuilding SFML from source is as simple as downloading the source code and running:\n\n```bash\ncmake .\ncmake --build .\nsudo make install  # optional!\n```\n\nIn some cases the dependencies are bundled with SFML, otherwise see the [official build instructions][sfml-build].\n\n### Custom SFML location\n\nIf SFML's headers and libraries are not in a path where the compiler would look by default (and the defaults usually work only on Linux), additional steps are needed.\n\nFirst, before building the extensions (`make`) or generating sources, you need to configure the include path:\n\n```bash\nexport SFML_INCLUDE_DIR=/full/path/to/sfml/include\n```\nWindows equivalent:\n```cmd\nset INCLUDE=%INCLUDE%;C:\\path\\to\\sfml\\include\n```\n\nSetting these variables beforehand can also fix `shards install`.\n\nThen, whenever using *CrSFML*, you need to configure the path to SFML libraries so the linker can find them. To apply these for the current shell session, run:\n\n```bash\nexport LIBRARY_PATH=/full/path/to/sfml/lib     # Used during linking\nexport LD_LIBRARY_PATH=/full/path/to/sfml/lib  # Used when running an executable\n```\nWindows equivalent:\n```cmd\nset LIB=%LIB%;c:\\path\\to\\sfml\\lib\nset PATH=%PATH%;c:\\path\\to\\sfml\\bin\n```\n\nCrSFML's top-level scripts also need the include path to work. E.g. `crystal generate.cr -- /full/path/to/sfml/include`.\n\n### Generating sources\n\nCrSFML's sources come almost entirely from a [generator program](generate.cr). They are based on a particular version of SFML. But as sources for the latest version are already bundled, usually you don't need to do this. [More details](CONTRIBUTING.md).\n\nAs this is out of scope for [Shards][], let's download the repository separately (then use CrSFML [without Shards](#crsfml-without-shards)).\n\n```bash\ngit clone https://github.com/oprypin/crsfml\ncd crsfml\n```\n\nThen we can generate the sources, either directly with `crystal generate.cr` or as part of the build process:\n\n```bash\ntouch generate.cr\nmake\n```\n\nIf run successfully, this generates all the source files and also compiles the C++ wrapper.\n\n### CrSFML without Shards\n\nIt's also possible to use *CrSFML* outside of Shards, as with any library. One option is to directly create a symbolic link to *CrSFML* in your project's *lib* folder.\n\n```bash\nmkdir lib\nln -s /full/path/to/crsfml lib/crsfml\n```\n\nAnother option is to `export CRYSTAL_PATH=/full/path/to` a directory that contains the *crsfml* directory.\n\n\nCrSFML as bindings to SFML\n--------------------------\n\n### API differences between SFML and CrSFML\n\nThe [API of *CrSFML*][api documentation] (a library for Crystal) attempts to be similar to SFML (a C++ library), but some general changes are present:\n\n- Methods are renamed to `snake_case`.\n- Getter, setter methods are changed:\n    - `x.getSomeProperty()` becomes `x.some_property`.\n    - `x.isSomeProperty()`, `x.hasSomeProperty()` become `x.some_property?`.\n    - `x.setSomeProperty(v)` becomes `x.some_property = v`.\n- Structs in Crystal are always passed by copy, so modifying them can be problematic. For example, `my_struct.x = 7` is fine but `array_of_structs[2].x = 5` will not work. To work around this, copy the whole struct, modify it, then write it back. Better yet, avoid the need to modify structs (work with them like with immutable objects).\n- Member functions, such as `loadFromFile`, that are used for initialization, each have a corresponding shorthand class method (`from_file`) that raises `SF::InitError` on failure.\n- SFML sometimes uses *enum* values as bitmasks. You can combine them using the `|` operator.\n- *enum* members are exposed at class level, so instead of `SF::Keyboard::Code::Slash` you can use `SF::Keyboard::Slash`.\n- SFML sometimes requires that an instance must remain alive as long as it is attached to the object. For example, a textured shape will cause errors if the texture object is destroyed. *CrSFML* prevents this problem by keeping a reference to the object.\n- The `Event` *union* and `EventType` *enum* are represented as a class hierarchy. Instead of `ev.type == SF::Event::Resized` use `ev.is_a?(SF::Event::Resized)`; instead of `ev.size.width` use `ev.width`.\n- Instead of subclassing `Drawable`, include the `Drawable` module with an abstract `draw` method.\n- Most of the [API documentation] is taken directly from SFML, so don't be surprised if it talks in C++ terms.\n\n### The C++ wrapper\n\nThe interface of the C++ â†’ C wrapper (which Crystal ultimately binds to) consists entirely of simple functions that accept only native types (such as `float`, `uint32_t`, `char*`) and untyped pointers (`void*`). The untyped pointers are never exposed to the user, only to other auto-generated parts of the code. The function names consist of the original SFML class name, the function name itself, and a base62 hash of the parameter types. Return types are never used; instead, the output is done into a pointer (which is usually the last argument of the function), but, as usual, the memory allocation is the caller's job. The first argument of each function is a pointer to the receiver object (if applicable).\n\nAbstract classes are implemented by exposing a collection of global callback variables, which must be set by the user if they want to use the corresponding class. The callback's first argument is the object, and some arguments are pointers that need to be assigned to inside the callback implementation (because return values are not used).\n\nCompilation of the C++ extensions is based only on SFML's header files, these are made into object files, and all the linking is deferred to the final linker invocation done by Crystal.\n\n#### Why not CSFML?\n\n[CSFML][] is a great library that allows SFML to be used with C. It goes to great lengths to be human-friendly and does a good job of converting C++ idioms to C idioms. In the past *CrSFML* used to be based on it, but after a while it became apparent that the advantages of CSFML's nice interface are also disadvantages when constructing (especially auto-generated) bindings that attempt to look as close to the real SFML as possible.\n\nMany details about functions' signatures are lost, as well as function overloads. Names of data types had to be simplified (not namespaced). And many other such small things that bring the frustration of having to reconstruct the details of the original SFML interface based on the simplified CSFML interface.\n\nThere are many aspects that prevent an efficient implementation from the standpoint of bindings, most importantly, CSFML takes memory allocation into its own hands, so any object creation in *CrSFML* involved allocation of two objects on the heap by two different libraries, and every interaction with it had to go through at least two pointers. Structs in CSFML are actually completely separate data types and they have to be constantly be converted between a \"SFML-struct\" and a \"CSFML-struct\".\n\nInstead of that, the C++ â†’ C wrapper passes the bare SFML data types directly through untyped pointers, and relies on the higher-level binding to deal safely with them. In case of structs the data layout is mirrored, in case of classes the pointers remain completely opaque.\n\nNot to forget that the wrapper is made automatically, so it can be quickly updated to any SFML release and prevents human error that could happen when implementing CSFML.\n\n\nCredits\n-------\n\n*CrSFML* was made by [Oleh Prypin][oprypin].\n\n*CrSFML* is [licensed](LICENSE.md) under the terms and conditions of the *zlib/libpng* license.\n\nThis library uses and is based on [SFML][sfml-authors].\n\nThanks to [Alan Willms][alanwillms] for translating [tutorials] to Crystal.\n\n\n[tutorials]: https://oprypin.github.io/crsfml/tutorials/\n[api documentation]: https://oprypin.github.io/crsfml/api/\n[demos]: https://github.com/oprypin/crsfml-examples\n\n[windows-setup]: https://pryp.in/blog/28/running-crystal-natively-on-windows-building-videogame-examples.html\n\n[sfml]: https://www.sfml-dev.org/ \"Simple and Fast Multimedia Library\"\n[csfml]: https://github.com/SFML/CSFML\n[sfml-authors]: https://github.com/SFML/SFML#readme\n[sfml-download]: https://www.sfml-dev.org/download.php\n[sfml-install]: https://www.sfml-dev.org/tutorials/\n[sfml-build]: https://www.sfml-dev.org/tutorials/2.5/compile-with-cmake.php\n\n[homebrew]: https://brew.sh/\n\n[crystal]: https://crystal-lang.org/\n[shards]: https://github.com/crystal-lang/shards\n\n[oprypin]: https://github.com/oprypin\n[alanwillms]: https://github.com/alanwillms\n","program":{"html_id":"github.com/oprypin/crsfml/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/oprypin/crsfml","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF","path":"SF.html","kind":"module","full_name":"SF","name":"SF","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"version.cr","line_number":1,"url":"https://github.com/oprypin/crsfml/blob/master/src/version.cr"},{"filename":"common.cr","line_number":3,"url":"https://github.com/oprypin/crsfml/blob/master/src/common.cr"},{"filename":"system/system.cr","line_number":1,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr"},{"filename":"system/obj.cr","line_number":3,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr"},{"filename":"window/window.cr","line_number":3,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/window.cr"},{"filename":"window/obj.cr","line_number":4,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"},{"filename":"window/window.cr","line_number":10,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/window.cr"},{"filename":"graphics/graphics.cr","line_number":1,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"},{"filename":"graphics/obj.cr","line_number":5,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":133,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"},{"filename":"audio/obj.cr","line_number":4,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr"},{"filename":"audio/audio.cr","line_number":3,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/audio.cr"},{"filename":"network/obj.cr","line_number":4,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"},{"filename":"network/network.cr","line_number":3,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/network.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SFML_VERSION","name":"SFML_VERSION","value":"\"2.5.1\"","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"\"2.5.1\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"color(*args,**kwargs)-instance-method","html_id":"color(*args,**kwargs)-instance-method","name":"color","doc":"Shorthand for `Color.new`","summary":"<p>Shorthand for <code><a href=\"SF/Color.html#new-class-method\">Color.new</a></code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L161","def":{"name":"color","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SF::Color.new(*args, **kwargs)"}},{"id":"float_rect(left:Number,top:Number,width:Number,height:Number)-instance-method","html_id":"float_rect(left:Number,top:Number,width:Number,height:Number)-instance-method","name":"float_rect","doc":"Shorthand for `FloatRect.new`\n\nConverts arguments to `Float32`","summary":"<p>Shorthand for <code>FloatRect.new</code></p>","abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Number"},{"name":"top","doc":null,"default_value":"","external_name":"top","restriction":"Number"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Number"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Number"}],"args_string":"(left : Number, top : Number, width : Number, height : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L120","def":{"name":"float_rect","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Number"},{"name":"top","doc":null,"default_value":"","external_name":"top","restriction":"Number"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Number"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"FloatRect.new(left.to_f32, top.to_f32, width.to_f32, height.to_f32)"}},{"id":"int_rect(left:Int,top:Int,width:Int,height:Int)-instance-method","html_id":"int_rect(left:Int,top:Int,width:Int,height:Int)-instance-method","name":"int_rect","doc":"Shorthand for `IntRect.new`\n\nConverts arguments to `Int32`","summary":"<p>Shorthand for <code>IntRect.new</code></p>","abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int"},{"name":"top","doc":null,"default_value":"","external_name":"top","restriction":"Int"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"}],"args_string":"(left : Int, top : Int, width : Int, height : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L126","def":{"name":"int_rect","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int"},{"name":"top","doc":null,"default_value":"","external_name":"top","restriction":"Int"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"IntRect.new(left.to_i32, top.to_i32, width.to_i32, height.to_i32)"}},{"id":"microseconds(amount:Int):Time-instance-method","html_id":"microseconds(amount:Int):Time-instance-method","name":"microseconds","doc":"Construct a time value from a number of microseconds\n\n* *amount* - Number of microseconds\n\n*Returns:* Time value constructed from the amount of microseconds\n\n*See also:* `seconds`, `milliseconds`","summary":"<p>Construct a time value from a number of microseconds</p>","abstract":false,"args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Int"}],"args_string":"(amount : Int) : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L283","def":{"name":"microseconds","args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_microseconds_G4x(Int64.new(amount), result)\nreturn result\n"}},{"id":"milliseconds(amount:Int):Time-instance-method","html_id":"milliseconds(amount:Int):Time-instance-method","name":"milliseconds","doc":"Construct a time value from a number of milliseconds\n\n* *amount* - Number of milliseconds\n\n*Returns:* Time value constructed from the amount of milliseconds\n\n*See also:* `seconds`, `microseconds`","summary":"<p>Construct a time value from a number of milliseconds</p>","abstract":false,"args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Int"}],"args_string":"(amount : Int) : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L271","def":{"name":"milliseconds","args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_milliseconds_qe2(Int32.new(amount), result)\nreturn result\n"}},{"id":"seconds(amount:Number):Time-instance-method","html_id":"seconds(amount:Number):Time-instance-method","name":"seconds","doc":"Construct a time value from a number of seconds\n\n* *amount* - Number of seconds\n\n*Returns:* Time value constructed from the amount of seconds\n\n*See also:* `milliseconds`, `microseconds`","summary":"<p>Construct a time value from a number of seconds</p>","abstract":false,"args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Number"}],"args_string":"(amount : Number) : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L259","def":{"name":"seconds","args":[{"name":"amount","doc":null,"default_value":"","external_name":"amount","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_seconds_Bw9(LibC::Float.new(amount), result)\nreturn result\n"}},{"id":"sleep(duration:Time)-instance-method","html_id":"sleep(duration:Time)-instance-method","name":"sleep","doc":"Make the current thread sleep for a given duration\n\n`SF::sleep` is the best way to block a program or one of its\nthreads, as it doesn't consume any CPU power.\n\n* *duration* - Time to sleep","summary":"<p>Make the current thread sleep for a given duration</p>","abstract":false,"args":[{"name":"duration","doc":null,"default_value":"","external_name":"duration","restriction":"Time"}],"args_string":"(duration : Time)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L766","def":{"name":"sleep","args":[{"name":"duration","doc":null,"default_value":"","external_name":"duration","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_sleep_f4T(duration)"}},{"id":"vector2(x,y)-instance-method","html_id":"vector2(x,y)-instance-method","name":"vector2","doc":"Shorthand for `Vector2.new`\n\nIf arguments are mixed between `Int32` and `Float`,\nthey are converted to match `Vector2f`","summary":"<p>Shorthand for <code><a href=\"SF/Vector2.html#new-class-method\">Vector2.new</a></code></p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(x, y)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L116","def":{"name":"vector2","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vector2.new(x, y)"}},{"id":"vector2f(x:Number,y:Number)-instance-method","html_id":"vector2f(x:Number,y:Number)-instance-method","name":"vector2f","doc":"Shorthand for `Vector2f.new`\n\nConverts arguments to `Float32`","summary":"<p>Shorthand for <code>Vector2f.new</code></p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"args_string":"(x : Number, y : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L143","def":{"name":"vector2f","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vector2f.new(x.to_f32, y.to_f32)"}},{"id":"vector2i(x:Int,y:Int)-instance-method","html_id":"vector2i(x:Int,y:Int)-instance-method","name":"vector2i","doc":"Shorthand for `Vector2i.new`\n\nConverts arguments to `Int32`","summary":"<p>Shorthand for <code>Vector2i.new</code></p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(x : Int, y : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L149","def":{"name":"vector2i","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vector2i.new(x.to_i32, y.to_i32)"}},{"id":"vector3(x,y,z)-instance-method","html_id":"vector3(x,y,z)-instance-method","name":"vector3","doc":"Shorthand for `Vector3.new`","summary":"<p>Shorthand for <code><a href=\"SF/Vector3.html#new-class-method\">Vector3.new</a></code></p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":""}],"args_string":"(x, y, z)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L248","def":{"name":"vector3","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SF::Vector3.new(x, y, z)"}},{"id":"vector3f(x:Number,y:Number,z:Number)-instance-method","html_id":"vector3f(x:Number,y:Number,z:Number)-instance-method","name":"vector3f","doc":"Shorthand for `Vector3f.new`\n\nConverts arguments to `Float32`","summary":"<p>Shorthand for <code>Vector3f.new</code></p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"args_string":"(x : Number, y : Number, z : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L257","def":{"name":"vector3f","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SF::Vector3.new(x.to_f32, y.to_f32, z.to_f32)"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/AlResource","path":"SF/AlResource.html","kind":"module","full_name":"SF::AlResource","name":"AlResource","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"audio/obj.cr","line_number":173,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/oprypin/crsfml/SF/SoundBuffer","kind":"class","full_name":"SF::SoundBuffer","name":"SoundBuffer"},{"html_id":"github.com/oprypin/crsfml/SF/SoundRecorder","kind":"class","full_name":"SF::SoundRecorder","name":"SoundRecorder"},{"html_id":"github.com/oprypin/crsfml/SF/SoundSource","kind":"class","full_name":"SF::SoundSource","name":"SoundSource"}],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Empty module that indicates the class requires an OpenAL context","summary":"<p>Empty module that indicates the class requires an OpenAL context</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/BlendMode","path":"SF/BlendMode.html","kind":"struct","full_name":"SF::BlendMode","name":"BlendMode","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":51,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":272,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"BlendAdd","name":"BlendAdd","value":"BlendMode.new(BlendMode::SrcAlpha, BlendMode::One, BlendMode::Add, BlendMode::One, BlendMode::One, BlendMode::Add)","doc":"Add source to dest","summary":"<p>Add source to dest</p>"},{"id":"BlendAlpha","name":"BlendAlpha","value":"BlendMode.new(BlendMode::SrcAlpha, BlendMode::OneMinusSrcAlpha, BlendMode::Add, BlendMode::One, BlendMode::OneMinusSrcAlpha, BlendMode::Add)","doc":"Blend source and dest according to dest alpha","summary":"<p>Blend source and dest according to dest alpha</p>"},{"id":"BlendMultiply","name":"BlendMultiply","value":"BlendMode.new(BlendMode::DstColor, BlendMode::Zero)","doc":"Multiply source and dest","summary":"<p>Multiply source and dest</p>"},{"id":"BlendNone","name":"BlendNone","value":"BlendMode.new(BlendMode::One, BlendMode::Zero)","doc":"Overwrite dest with source","summary":"<p>Overwrite dest with source</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Blending modes for drawing\n\n`SF::BlendMode` is a struct that represents a blend mode. A blend\nmode determines how the colors of an object you draw are\nmixed with the colors that are already in the buffer.\n\nThe struct is composed of 6 components, each of which has its\nown public member variable:\n* Color Source Factor (*color_src_factor*)\n* Color Destination Factor (*color_dst_factor*)\n* Color Blend Equation (*color_equation*)\n* Alpha Source Factor (*alpha_src_factor*)\n* Alpha Destination Factor (*alpha_dst_factor*)\n* Alpha Blend Equation (*alpha_equation*)\n\nThe source factor specifies how the pixel you are drawing contributes\nto the final color. The destination factor specifies how the pixel\nalready drawn in the buffer contributes to the final color.\n\nThe color channels RGB (red, green, blue; simply referred to as\ncolor) and A (alpha; the transparency) can be treated separately. This\nseparation can be useful for specific blend modes, but most often you\nwon't need it and will simply treat the color as a single unit.\n\nThe blend factors and equations correspond to their OpenGL equivalents.\nIn general, the color of the resulting pixel is calculated according\nto the following formula (*src* is the color of the source pixel, *dst*\nthe color of the destination pixel, the other variables correspond to the\npublic members, with the equations being + or - operators):\n```\ndst.rgb = color_src_factor * src.rgb (color_equation) color_dst_factor * dst.rgb\ndst.a   = alpha_src_factor * src.a   (alpha_equation) alpha_dst_factor * dst.a\n```\nAll factors and colors are represented as floating point numbers between\n0 and 1. Where necessary, the result is clamped to fit in that range.\n\nThe most common blending modes are defined as constants in the SF module:\n`SF::BlendAlpha`, `SF::BlendAdd`, `SF::BlendMultiply`, `SF::BlendNone`.\n\nIn SFML, a blend mode can be specified every time you draw a `SF::Drawable`\nobject to a render target. It is part of the `SF::RenderStates` compound\nthat is passed to the member function `SF::RenderTarget.draw`().\n\n*See also:* `SF::RenderStates`, `SF::RenderTarget`","summary":"<p>Blending modes for drawing</p>","class_methods":[],"constructors":[{"id":"new(color_source_factor:BlendMode::Factor,color_destination_factor:BlendMode::Factor,color_blend_equation:BlendMode::Equation,alpha_source_factor:BlendMode::Factor,alpha_destination_factor:BlendMode::Factor,alpha_blend_equation:BlendMode::Equation)-class-method","html_id":"new(color_source_factor:BlendMode::Factor,color_destination_factor:BlendMode::Factor,color_blend_equation:BlendMode::Equation,alpha_source_factor:BlendMode::Factor,alpha_destination_factor:BlendMode::Factor,alpha_blend_equation:BlendMode::Equation)-class-method","name":"new","doc":"Construct the blend mode given the factors and equation.\n\n* *color_source_factor* - Specifies how to compute the source factor for the color channels.\n* *color_destination_factor* - Specifies how to compute the destination factor for the color channels.\n* *color_blend_equation* - Specifies how to combine the source and destination colors.\n* *alpha_source_factor* - Specifies how to compute the source factor.\n* *alpha_destination_factor* - Specifies how to compute the destination factor.\n* *alpha_blend_equation* - Specifies how to combine the source and destination alphas.","summary":"<p>Construct the blend mode given the factors and equation.</p>","abstract":false,"args":[{"name":"color_source_factor","doc":null,"default_value":"","external_name":"color_source_factor","restriction":"BlendMode::Factor"},{"name":"color_destination_factor","doc":null,"default_value":"","external_name":"color_destination_factor","restriction":"BlendMode::Factor"},{"name":"color_blend_equation","doc":null,"default_value":"","external_name":"color_blend_equation","restriction":"BlendMode::Equation"},{"name":"alpha_source_factor","doc":null,"default_value":"","external_name":"alpha_source_factor","restriction":"BlendMode::Factor"},{"name":"alpha_destination_factor","doc":null,"default_value":"","external_name":"alpha_destination_factor","restriction":"BlendMode::Factor"},{"name":"alpha_blend_equation","doc":null,"default_value":"","external_name":"alpha_blend_equation","restriction":"BlendMode::Equation"}],"args_string":"(color_source_factor : BlendMode::Factor, color_destination_factor : BlendMode::Factor, color_blend_equation : BlendMode::Equation, alpha_source_factor : BlendMode::Factor, alpha_destination_factor : BlendMode::Factor, alpha_blend_equation : BlendMode::Equation)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L135","def":{"name":"new","args":[{"name":"color_source_factor","doc":null,"default_value":"","external_name":"color_source_factor","restriction":"BlendMode::Factor"},{"name":"color_destination_factor","doc":null,"default_value":"","external_name":"color_destination_factor","restriction":"BlendMode::Factor"},{"name":"color_blend_equation","doc":null,"default_value":"","external_name":"color_blend_equation","restriction":"BlendMode::Equation"},{"name":"alpha_source_factor","doc":null,"default_value":"","external_name":"alpha_source_factor","restriction":"BlendMode::Factor"},{"name":"alpha_destination_factor","doc":null,"default_value":"","external_name":"alpha_destination_factor","restriction":"BlendMode::Factor"},{"name":"alpha_blend_equation","doc":null,"default_value":"","external_name":"alpha_blend_equation","restriction":"BlendMode::Equation"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(color_source_factor, color_destination_factor, color_blend_equation, alpha_source_factor, alpha_destination_factor, alpha_blend_equation)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(source_factor:BlendMode::Factor,destination_factor:BlendMode::Factor,blend_equation:BlendMode::Equation=Add)-class-method","html_id":"new(source_factor:BlendMode::Factor,destination_factor:BlendMode::Factor,blend_equation:BlendMode::Equation=Add)-class-method","name":"new","doc":"Construct the blend mode given the factors and equation.\n\nThis constructor uses the same factors and equation for both\ncolor and alpha components. It also defaults to the Add equation.\n\n* *source_factor* - Specifies how to compute the source factor for the color and alpha channels.\n* *destination_factor* - Specifies how to compute the destination factor for the color and alpha channels.\n* *blend_equation* - Specifies how to combine the source and destination colors and alpha.","summary":"<p>Construct the blend mode given the factors and equation.</p>","abstract":false,"args":[{"name":"source_factor","doc":null,"default_value":"","external_name":"source_factor","restriction":"BlendMode::Factor"},{"name":"destination_factor","doc":null,"default_value":"","external_name":"destination_factor","restriction":"BlendMode::Factor"},{"name":"blend_equation","doc":null,"default_value":"Add","external_name":"blend_equation","restriction":"BlendMode::Equation"}],"args_string":"(source_factor : BlendMode::Factor, destination_factor : BlendMode::Factor, blend_equation : BlendMode::Equation = <span class=\"t\">Add</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L118","def":{"name":"new","args":[{"name":"source_factor","doc":null,"default_value":"","external_name":"source_factor","restriction":"BlendMode::Factor"},{"name":"destination_factor","doc":null,"default_value":"","external_name":"destination_factor","restriction":"BlendMode::Factor"},{"name":"blend_equation","doc":null,"default_value":"Add","external_name":"blend_equation","restriction":"BlendMode::Equation"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(source_factor, destination_factor, blend_equation)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nConstructs a blending mode that does alpha blending.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L101","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"!=(right:BlendMode):Bool-instance-method","html_id":"!=(right:BlendMode):Bool-instance-method","name":"!=","doc":"Overload of the != operator\n\n* *left* - Left operand\n* *right* - Right operand\n\n*Returns:* True if blending modes are different, false if they are equal","summary":"<p>Overload of the != operator</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"BlendMode"}],"args_string":"(right : BlendMode) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L208","def":{"name":"!=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"BlendMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_ne_PG5PG5(to_unsafe, right, out result)\nreturn result\n"}},{"id":"==(right:BlendMode):Bool-instance-method","html_id":"==(right:BlendMode):Bool-instance-method","name":"==","doc":"Overload of the == operator\n\n* *left* - Left operand\n* *right* - Right operand\n\n*Returns:* True if blending modes are equal, false if they are different","summary":"<p>Overload of the == operator</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"BlendMode"}],"args_string":"(right : BlendMode) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L198","def":{"name":"==","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"BlendMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_eq_PG5PG5(to_unsafe, right, out result)\nreturn result\n"}},{"id":"alpha_dst_factor:BlendMode::Factor-instance-method","html_id":"alpha_dst_factor:BlendMode::Factor-instance-method","name":"alpha_dst_factor","doc":"Destination blending factor for the alpha channel","summary":"<p>Destination blending factor for the alpha channel</p>","abstract":false,"args":[],"args_string":" : BlendMode::Factor","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L178","def":{"name":"alpha_dst_factor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BlendMode::Factor","visibility":"Public","body":"@alpha_dst_factor"}},{"id":"alpha_dst_factor=(alpha_dst_factor:BlendMode::Factor)-instance-method","html_id":"alpha_dst_factor=(alpha_dst_factor:BlendMode::Factor)-instance-method","name":"alpha_dst_factor=","doc":null,"summary":null,"abstract":false,"args":[{"name":"alpha_dst_factor","doc":null,"default_value":"","external_name":"alpha_dst_factor","restriction":"BlendMode::Factor"}],"args_string":"(alpha_dst_factor : BlendMode::Factor)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L181","def":{"name":"alpha_dst_factor=","args":[{"name":"alpha_dst_factor","doc":null,"default_value":"","external_name":"alpha_dst_factor","restriction":"BlendMode::Factor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@alpha_dst_factor = alpha_dst_factor"}},{"id":"alpha_equation:BlendMode::Equation-instance-method","html_id":"alpha_equation:BlendMode::Equation-instance-method","name":"alpha_equation","doc":"Blending equation for the alpha channel","summary":"<p>Blending equation for the alpha channel</p>","abstract":false,"args":[],"args_string":" : BlendMode::Equation","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L186","def":{"name":"alpha_equation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BlendMode::Equation","visibility":"Public","body":"@alpha_equation"}},{"id":"alpha_equation=(alpha_equation:BlendMode::Equation)-instance-method","html_id":"alpha_equation=(alpha_equation:BlendMode::Equation)-instance-method","name":"alpha_equation=","doc":null,"summary":null,"abstract":false,"args":[{"name":"alpha_equation","doc":null,"default_value":"","external_name":"alpha_equation","restriction":"BlendMode::Equation"}],"args_string":"(alpha_equation : BlendMode::Equation)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L189","def":{"name":"alpha_equation=","args":[{"name":"alpha_equation","doc":null,"default_value":"","external_name":"alpha_equation","restriction":"BlendMode::Equation"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@alpha_equation = alpha_equation"}},{"id":"alpha_src_factor:BlendMode::Factor-instance-method","html_id":"alpha_src_factor:BlendMode::Factor-instance-method","name":"alpha_src_factor","doc":"Source blending factor for the alpha channel","summary":"<p>Source blending factor for the alpha channel</p>","abstract":false,"args":[],"args_string":" : BlendMode::Factor","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L170","def":{"name":"alpha_src_factor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BlendMode::Factor","visibility":"Public","body":"@alpha_src_factor"}},{"id":"alpha_src_factor=(alpha_src_factor:BlendMode::Factor)-instance-method","html_id":"alpha_src_factor=(alpha_src_factor:BlendMode::Factor)-instance-method","name":"alpha_src_factor=","doc":null,"summary":null,"abstract":false,"args":[{"name":"alpha_src_factor","doc":null,"default_value":"","external_name":"alpha_src_factor","restriction":"BlendMode::Factor"}],"args_string":"(alpha_src_factor : BlendMode::Factor)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L173","def":{"name":"alpha_src_factor=","args":[{"name":"alpha_src_factor","doc":null,"default_value":"","external_name":"alpha_src_factor","restriction":"BlendMode::Factor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@alpha_src_factor = alpha_src_factor"}},{"id":"color_dst_factor:BlendMode::Factor-instance-method","html_id":"color_dst_factor:BlendMode::Factor-instance-method","name":"color_dst_factor","doc":"Destination blending factor for the color channels","summary":"<p>Destination blending factor for the color channels</p>","abstract":false,"args":[],"args_string":" : BlendMode::Factor","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L154","def":{"name":"color_dst_factor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BlendMode::Factor","visibility":"Public","body":"@color_dst_factor"}},{"id":"color_dst_factor=(color_dst_factor:BlendMode::Factor)-instance-method","html_id":"color_dst_factor=(color_dst_factor:BlendMode::Factor)-instance-method","name":"color_dst_factor=","doc":null,"summary":null,"abstract":false,"args":[{"name":"color_dst_factor","doc":null,"default_value":"","external_name":"color_dst_factor","restriction":"BlendMode::Factor"}],"args_string":"(color_dst_factor : BlendMode::Factor)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L157","def":{"name":"color_dst_factor=","args":[{"name":"color_dst_factor","doc":null,"default_value":"","external_name":"color_dst_factor","restriction":"BlendMode::Factor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@color_dst_factor = color_dst_factor"}},{"id":"color_equation:BlendMode::Equation-instance-method","html_id":"color_equation:BlendMode::Equation-instance-method","name":"color_equation","doc":"Blending equation for the color channels","summary":"<p>Blending equation for the color channels</p>","abstract":false,"args":[],"args_string":" : BlendMode::Equation","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L162","def":{"name":"color_equation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BlendMode::Equation","visibility":"Public","body":"@color_equation"}},{"id":"color_equation=(color_equation:BlendMode::Equation)-instance-method","html_id":"color_equation=(color_equation:BlendMode::Equation)-instance-method","name":"color_equation=","doc":null,"summary":null,"abstract":false,"args":[{"name":"color_equation","doc":null,"default_value":"","external_name":"color_equation","restriction":"BlendMode::Equation"}],"args_string":"(color_equation : BlendMode::Equation)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L165","def":{"name":"color_equation=","args":[{"name":"color_equation","doc":null,"default_value":"","external_name":"color_equation","restriction":"BlendMode::Equation"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@color_equation = color_equation"}},{"id":"color_src_factor:BlendMode::Factor-instance-method","html_id":"color_src_factor:BlendMode::Factor-instance-method","name":"color_src_factor","doc":"Source blending factor for the color channels","summary":"<p>Source blending factor for the color channels</p>","abstract":false,"args":[],"args_string":" : BlendMode::Factor","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L146","def":{"name":"color_src_factor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BlendMode::Factor","visibility":"Public","body":"@color_src_factor"}},{"id":"color_src_factor=(color_src_factor:BlendMode::Factor)-instance-method","html_id":"color_src_factor=(color_src_factor:BlendMode::Factor)-instance-method","name":"color_src_factor=","doc":null,"summary":null,"abstract":false,"args":[{"name":"color_src_factor","doc":null,"default_value":"","external_name":"color_src_factor","restriction":"BlendMode::Factor"}],"args_string":"(color_src_factor : BlendMode::Factor)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L149","def":{"name":"color_src_factor=","args":[{"name":"color_src_factor","doc":null,"default_value":"","external_name":"color_src_factor","restriction":"BlendMode::Factor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@color_src_factor = color_src_factor"}},{"id":"dup:BlendMode-instance-method","html_id":"dup:BlendMode-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : BlendMode","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L226","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BlendMode","visibility":"Public","body":"return BlendMode.new(self)"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/BlendMode/Equation","path":"SF/BlendMode/Equation.html","kind":"enum","full_name":"SF::BlendMode::Equation","name":"Equation","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":89,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Add","name":"Add","value":"0","doc":"Pixel = Src * SrcFactor + Dst * DstFactor","summary":"<p>Pixel = Src * SrcFactor + Dst * DstFactor</p>"},{"id":"Subtract","name":"Subtract","value":"1","doc":"Pixel = Src * SrcFactor - Dst * DstFactor","summary":"<p>Pixel = Src * SrcFactor - Dst * DstFactor</p>"},{"id":"ReverseSubtract","name":"ReverseSubtract","value":"2","doc":"Pixel = Dst * DstFactor - Src * SrcFactor","summary":"<p>Pixel = Dst * DstFactor - Src * SrcFactor</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/BlendMode","kind":"struct","full_name":"SF::BlendMode","name":"BlendMode"},"doc":"Enumeration of the blending equations\n\nThe equations are mapped directly to their OpenGL equivalents,\nspecified by gl_blend_equation() or gl_blend_equation_separate().","summary":"<p>Enumeration of the blending equations</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add?-instance-method","html_id":"add?-instance-method","name":"add?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L91","def":{"name":"add?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Add"}},{"id":"reverse_subtract?-instance-method","html_id":"reverse_subtract?-instance-method","name":"reverse_subtract?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L95","def":{"name":"reverse_subtract?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ReverseSubtract"}},{"id":"subtract?-instance-method","html_id":"subtract?-instance-method","name":"subtract?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L93","def":{"name":"subtract?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Subtract"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/BlendMode/Factor","path":"SF/BlendMode/Factor.html","kind":"enum","full_name":"SF::BlendMode::Factor","name":"Factor","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":62,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Zero","name":"Zero","value":"0","doc":"(0, 0, 0, 0)","summary":"<p>(0, 0, 0, 0)</p>"},{"id":"One","name":"One","value":"1","doc":"(1, 1, 1, 1)","summary":"<p>(1, 1, 1, 1)</p>"},{"id":"SrcColor","name":"SrcColor","value":"2","doc":"(src.r, src.g, src.b, src.a)","summary":"<p>(src.r, src.g, src.b, src.a)</p>"},{"id":"OneMinusSrcColor","name":"OneMinusSrcColor","value":"3","doc":"(1, 1, 1, 1) - (src.r, src.g, src.b, src.a)","summary":"<p>(1, 1, 1, 1) - (src.r, src.g, src.b, src.a)</p>"},{"id":"DstColor","name":"DstColor","value":"4","doc":"(dst.r, dst.g, dst.b, dst.a)","summary":"<p>(dst.r, dst.g, dst.b, dst.a)</p>"},{"id":"OneMinusDstColor","name":"OneMinusDstColor","value":"5","doc":"(1, 1, 1, 1) - (dst.r, dst.g, dst.b, dst.a)","summary":"<p>(1, 1, 1, 1) - (dst.r, dst.g, dst.b, dst.a)</p>"},{"id":"SrcAlpha","name":"SrcAlpha","value":"6","doc":"(src.a, src.a, src.a, src.a)","summary":"<p>(src.a, src.a, src.a, src.a)</p>"},{"id":"OneMinusSrcAlpha","name":"OneMinusSrcAlpha","value":"7","doc":"(1, 1, 1, 1) - (src.a, src.a, src.a, src.a)","summary":"<p>(1, 1, 1, 1) - (src.a, src.a, src.a, src.a)</p>"},{"id":"DstAlpha","name":"DstAlpha","value":"8","doc":"(dst.a, dst.a, dst.a, dst.a)","summary":"<p>(dst.a, dst.a, dst.a, dst.a)</p>"},{"id":"OneMinusDstAlpha","name":"OneMinusDstAlpha","value":"9","doc":"(1, 1, 1, 1) - (dst.a, dst.a, dst.a, dst.a)","summary":"<p>(1, 1, 1, 1) - (dst.a, dst.a, dst.a, dst.a)</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/BlendMode","kind":"struct","full_name":"SF::BlendMode","name":"BlendMode"},"doc":"Enumeration of the blending factors\n\nThe factors are mapped directly to their OpenGL equivalents,\nspecified by gl_blend_func() or gl_blend_func_separate().","summary":"<p>Enumeration of the blending factors</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"dst_alpha?-instance-method","html_id":"dst_alpha?-instance-method","name":"dst_alpha?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L80","def":{"name":"dst_alpha?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DstAlpha"}},{"id":"dst_color?-instance-method","html_id":"dst_color?-instance-method","name":"dst_color?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L72","def":{"name":"dst_color?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DstColor"}},{"id":"one?-instance-method","html_id":"one?-instance-method","name":"one?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L66","def":{"name":"one?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == One"}},{"id":"one_minus_dst_alpha?-instance-method","html_id":"one_minus_dst_alpha?-instance-method","name":"one_minus_dst_alpha?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L82","def":{"name":"one_minus_dst_alpha?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == OneMinusDstAlpha"}},{"id":"one_minus_dst_color?-instance-method","html_id":"one_minus_dst_color?-instance-method","name":"one_minus_dst_color?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L74","def":{"name":"one_minus_dst_color?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == OneMinusDstColor"}},{"id":"one_minus_src_alpha?-instance-method","html_id":"one_minus_src_alpha?-instance-method","name":"one_minus_src_alpha?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L78","def":{"name":"one_minus_src_alpha?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == OneMinusSrcAlpha"}},{"id":"one_minus_src_color?-instance-method","html_id":"one_minus_src_color?-instance-method","name":"one_minus_src_color?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L70","def":{"name":"one_minus_src_color?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == OneMinusSrcColor"}},{"id":"src_alpha?-instance-method","html_id":"src_alpha?-instance-method","name":"src_alpha?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L76","def":{"name":"src_alpha?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SrcAlpha"}},{"id":"src_color?-instance-method","html_id":"src_color?-instance-method","name":"src_color?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L68","def":{"name":"src_color?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SrcColor"}},{"id":"zero?-instance-method","html_id":"zero?-instance-method","name":"zero?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L64","def":{"name":"zero?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Zero"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/CircleShape","path":"SF/CircleShape.html","kind":"class","full_name":"SF::CircleShape","name":"CircleShape","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Shape","kind":"class","full_name":"SF::Shape","name":"Shape"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Shape","kind":"class","full_name":"SF::Shape","name":"Shape"},{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"},{"html_id":"github.com/oprypin/crsfml/SF/Transformable","kind":"class","full_name":"SF::Transformable","name":"Transformable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":2103,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Specialized shape representing a circle\n\nThis class inherits all the functions of `SF::Transformable`\n(position, rotation, scale, bounds, ...) as well as the\nfunctions of `SF::Shape` (outline, color, texture, ...).\n\nUsage example:\n```\ncircle = SF::CircleShape.new\ncircle.radius = 150\ncircle.outline_color = SF::Color::Red\ncircle.outline_thickness = 5\ncircle.position = {10, 20}\n...\nwindow.draw circle\n```\n\nSince the graphics card can't draw perfect circles, we have to\nfake them with multiple triangles connected to each other. The\n\"points count\" property of `SF::CircleShape` defines how many of these\ntriangles to use, and therefore defines the quality of the circle.\n\nThe number of points can also be used for another purpose; with\nsmall numbers you can create any regular polygon shape:\nequilateral triangle, square, pentagon, hexagon, ...\n\n*See also:* `SF::Shape`, `SF::RectangleShape`, `SF::ConvexShape`","summary":"<p>Specialized shape representing a circle</p>","class_methods":[],"constructors":[{"id":"new(radius:Number=0,point_count:Int=30)-class-method","html_id":"new(radius:Number=0,point_count:Int=30)-class-method","name":"new","doc":"Default constructor\n\n* *radius* - Radius of the circle\n* *point_count* - Number of points composing the circle","summary":"<p>Default constructor</p>","abstract":false,"args":[{"name":"radius","doc":null,"default_value":"0","external_name":"radius","restriction":"Number"},{"name":"point_count","doc":null,"default_value":"30","external_name":"point_count","restriction":"Int"}],"args_string":"(radius : Number = <span class=\"n\">0</span>, point_count : Int = <span class=\"n\">30</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2113","def":{"name":"new","args":[{"name":"radius","doc":null,"default_value":"0","external_name":"radius","restriction":"Number"},{"name":"point_count","doc":null,"default_value":"30","external_name":"point_count","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(radius, point_count)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:CircleShape-instance-method","html_id":"dup:CircleShape-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : CircleShape","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2340","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CircleShape","visibility":"Public","body":"return CircleShape.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Virtual destructor","summary":"<p>Virtual destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2105","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_circleshape_finalize(to_unsafe)\nSFMLExt.sfml_circleshape_free(@this)\n"}},{"id":"get_point(index:Int):Vector2f-instance-method","html_id":"get_point(index:Int):Vector2f-instance-method","name":"get_point","doc":"Get a point of the circle\n\nThe returned point is in local coordinates, that is,\nthe shape's transforms (position, rotation, scale) are\nnot taken into account.\nThe result is undefined if *index* is out of the valid range.\n\n* *index* - Index of the point to get, in range `0 ... point_count`\n\n*Returns:* index-th point of the shape","summary":"<p>Get a point of the circle</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2161","def":{"name":"get_point","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\nSFMLExt.sfml_circleshape_getpoint_vgv(to_unsafe, LibC::SizeT.new(index), result)\nreturn result\n"}},{"id":"point_count:Int32-instance-method","html_id":"point_count:Int32-instance-method","name":"point_count","doc":"Get the number of points of the circle\n\n*Returns:* Number of points of the circle\n\n*See also:* `point_count=`","summary":"<p>Get the number of points of the circle</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2147","def":{"name":"point_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_circleshape_getpointcount(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"point_count=(count:Int)-instance-method","html_id":"point_count=(count:Int)-instance-method","name":"point_count=","doc":"Set the number of points of the circle\n\n* *count* - New number of points of the circle\n\n*See also:* `point_count`","summary":"<p>Set the number of points of the circle</p>","abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int"}],"args_string":"(count : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2139","def":{"name":"point_count=","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_circleshape_setpointcount_vgv(to_unsafe, LibC::SizeT.new(count))"}},{"id":"radius:Float32-instance-method","html_id":"radius:Float32-instance-method","name":"radius","doc":"Get the radius of the circle\n\n*Returns:* Radius of the circle\n\n*See also:* `radius=`","summary":"<p>Get the radius of the circle</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2130","def":{"name":"radius","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_circleshape_getradius(to_unsafe, out result)\nreturn result\n"}},{"id":"radius=(radius:Number)-instance-method","html_id":"radius=(radius:Number)-instance-method","name":"radius=","doc":"Set the radius of the circle\n\n* *radius* - New radius of the circle\n\n*See also:* `radius`","summary":"<p>Set the radius of the circle</p>","abstract":false,"args":[{"name":"radius","doc":null,"default_value":"","external_name":"radius","restriction":"Number"}],"args_string":"(radius : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2122","def":{"name":"radius=","args":[{"name":"radius","doc":null,"default_value":"","external_name":"radius","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_circleshape_setradius_Bw9(to_unsafe, LibC::Float.new(radius))"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Clipboard","path":"SF/Clipboard.html","kind":"module","full_name":"SF::Clipboard","name":"Clipboard","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"window/obj.cr","line_number":41,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Give access to the system clipboard\n\n`SF::Clipboard` provides an interface for getting and\nsetting the contents of the system clipboard.\n\nIt is important to note that due to limitations on some\noperating systems, setting the clipboard contents is\nonly guaranteed to work if there is currently an open\nwindow for which events are being handled.\n\nUsage example:\n```c++\n// get the clipboard content as a string\nsf::String string = sf::Clipboard::getString();\n\n// or use it in the event loop\nsf::Event event;\nwhile(window.pollEvent(event))\n{\n    if(event.type == sf::Event::Closed)\n        window.close();\n    if(event.type == sf::Event::KeyPressed)\n    {\n        // Using Ctrl + V to paste a string into SFML\n        if(event.key.control && event.key.code == sf::Keyboard::V)\n            string = sf::Clipboard::getString();\n\n        // Using Ctrl + C to copy a string out of SFML\n        if(event.key.control && event.key.code == sf::Keyboard::C)\n            sf::Clipboard::setString(\"Hello World!\");\n    }\n}\n```\n\n*See also:* `SF::String`, `SF::Event`","summary":"<p>Give access to the system clipboard</p>","class_methods":[{"id":"string:String-class-method","html_id":"string:String-class-method","name":"string","doc":"Get the content of the clipboard as string data\n\nThis function returns the content of the clipboard\nas a string. If the clipboard does not contain string\nit returns an empty `SF::String` object.\n\n*Returns:* Clipboard contents as `SF::String` object","summary":"<p>Get the content of the clipboard as string data</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L49","def":{"name":"string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"SFMLExt.sfml_clipboard_getstring(out result)\nreturn String.build do |io|\n  while (v = result.value) != '\\u{0}'\n    io << v\n    result = result + 1\n  end\nend\n"}},{"id":"string=(text:String)-class-method","html_id":"string=(text:String)-class-method","name":"string=","doc":"Set the content of the clipboard as string data\n\nThis function sets the content of the clipboard as a\nstring.\n\n*Warning:* Due to limitations on some operating systems,\nsetting the clipboard contents is only\nguaranteed to work if there is currently an\nopen window for which events are being handled.\n\n* *text* - `SF::String` containing the data to be sent\nto the clipboard","summary":"<p>Set the content of the clipboard as string data</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(text : String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L65","def":{"name":"string=","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_clipboard_setstring_bQs(text.size, text.chars)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Clock","path":"SF/Clock.html","kind":"class","full_name":"SF::Clock","name":"Clock","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"system/obj.cr","line_number":312,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Utility class that measures the elapsed time\n\n`SF::Clock` is a lightweight class for measuring time.\n\nIts provides the most precise time that the underlying\nOS can achieve (generally microseconds or nanoseconds).\nIt also ensures monotonicity, which means that the returned\ntime can never go backward, even if the system time is\nchanged.\n\nUsage example:\n```\nclock = SF::Clock.new\n...\ntime1 = clock.elapsed_time\n...\ntime2 = clock.restart()\n```\n\nThe `SF::Time` value returned by the clock can then be\nconverted to a number of seconds, milliseconds or even\nmicroseconds.\n\n*See also:* `SF::Time`","summary":"<p>Utility class that measures the elapsed time</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nThe clock starts automatically after being constructed.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L321","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:Clock-instance-method","html_id":"dup:Clock-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Clock","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L361","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Clock","visibility":"Public","body":"return Clock.new(self)"}},{"id":"elapsed_time:Time-instance-method","html_id":"elapsed_time:Time-instance-method","name":"elapsed_time","doc":"Get the elapsed time\n\nThis function returns the time elapsed since the last call\nto restart() (or the construction of the instance if restart()\nhas not been called).\n\n*Returns:* Time elapsed","summary":"<p>Get the elapsed time</p>","abstract":false,"args":[],"args_string":" : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L332","def":{"name":"elapsed_time","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_clock_getelapsedtime(to_unsafe, result)\nreturn result\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L314","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_clock_finalize(to_unsafe)\nSFMLExt.sfml_clock_free(@this)\n"}},{"id":"restart:Time-instance-method","html_id":"restart:Time-instance-method","name":"restart","doc":"Restart the clock\n\nThis function puts the time counter back to zero.\nIt also returns the time elapsed since the clock was started.\n\n*Returns:* Time elapsed","summary":"<p>Restart the clock</p>","abstract":false,"args":[],"args_string":" : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L343","def":{"name":"restart","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_clock_restart(to_unsafe, result)\nreturn result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Color","path":"SF/Color.html","kind":"struct","full_name":"SF::Color","name":"Color","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":1236,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":134,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Black","name":"Black","value":"new(0, 0, 0)","doc":"Black predefined color","summary":"<p>Black predefined color</p>"},{"id":"Blue","name":"Blue","value":"new(0, 0, 255)","doc":"Blue predefined color","summary":"<p>Blue predefined color</p>"},{"id":"Cyan","name":"Cyan","value":"new(0, 255, 255)","doc":"Cyan predefined color","summary":"<p>Cyan predefined color</p>"},{"id":"Green","name":"Green","value":"new(0, 255, 0)","doc":"Green predefined color","summary":"<p>Green predefined color</p>"},{"id":"Magenta","name":"Magenta","value":"new(255, 0, 255)","doc":"Magenta predefined color","summary":"<p>Magenta predefined color</p>"},{"id":"Red","name":"Red","value":"new(255, 0, 0)","doc":"Red predefined color","summary":"<p>Red predefined color</p>"},{"id":"Transparent","name":"Transparent","value":"new(0, 0, 0, 0)","doc":"Transparent (black) predefined color","summary":"<p>Transparent (black) predefined color</p>"},{"id":"White","name":"White","value":"new(255, 255, 255)","doc":"White predefined color","summary":"<p>White predefined color</p>"},{"id":"Yellow","name":"Yellow","value":"new(255, 255, 0)","doc":"Yellow predefined color","summary":"<p>Yellow predefined color</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Utility struct for manipulating RGBA colors\n\n`SF::Color` is a simple color struct composed of 4 components:\n* Red\n* Green\n* Blue\n* Alpha (opacity)\n\nEach component is a public member, an unsigned integer in\nthe range `0..255`. Thus, colors can be constructed and\nmanipulated very easily:\n\n```\ncolor = SF::Color.new(255, 0, 0) # red\ncolor.r = 0                      # make it black\ncolor.b = 128                    # make it dark blue\n```\n\nThe fourth component of colors, named \"alpha\", represents\nthe opacity of the color. A color with an alpha value of\n255 will be fully opaque, while an alpha value of 0 will\nmake a color fully transparent, whatever the value of the\nother components is.\n\nThe most common colors are already defined as static variables:\n```\nblack       = SF::Color::Black\nwhite       = SF::Color::White\nred         = SF::Color::Red\ngreen       = SF::Color::Green\nblue        = SF::Color::Blue\nyellow      = SF::Color::Yellow\nmagenta     = SF::Color::Magenta\ncyan        = SF::Color::Cyan\ntransparent = SF::Color::Transparent\n```\n\nColors can also be added and modulated (multiplied) using the\noverloaded operators + and *.","summary":"<p>Utility struct for manipulating RGBA colors</p>","class_methods":[],"constructors":[{"id":"new(red:Int,green:Int,blue:Int,alpha:Int=255)-class-method","html_id":"new(red:Int,green:Int,blue:Int,alpha:Int=255)-class-method","name":"new","doc":"Construct the color from its 4 RGBA components\n\n* *red* - Red component (in the range `0..255`)\n* *green* - Green component (in the range `0..255`)\n* *blue* - Blue component (in the range `0..255`)\n* *alpha* - Alpha (opacity) component (in the range `0..255`)","summary":"<p>Construct the color from its 4 RGBA components</p>","abstract":false,"args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Int"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Int"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Int"},{"name":"alpha","doc":null,"default_value":"255","external_name":"alpha","restriction":"Int"}],"args_string":"(red : Int, green : Int, blue : Int, alpha : Int = <span class=\"n\">255</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1258","def":{"name":"new","args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Int"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Int"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Int"},{"name":"alpha","doc":null,"default_value":"255","external_name":"alpha","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(red, green, blue, alpha)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(color:Int)-class-method","html_id":"new(color:Int)-class-method","name":"new","doc":"Construct the color from 32-bit unsigned integer\n\n* *color* - Number containing the RGBA components (in that order)","summary":"<p>Construct the color from 32-bit unsigned integer</p>","abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Int"}],"args_string":"(color : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1268","def":{"name":"new","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(color)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nConstructs an opaque black color. It is equivalent to\n`SF::Color`(0, 0, 0, 255).","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1245","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"!=(right:Color):Bool-instance-method","html_id":"!=(right:Color):Bool-instance-method","name":"!=","doc":"Overload of the != operator\n\nThis operator compares two colors and check if they are different.\n\n* *left* - Left operand\n* *right* - Right operand\n\n*Returns:* True if colors are different, false if they are equal","summary":"<p>Overload of the != operator</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Color"}],"args_string":"(right : Color) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1334","def":{"name":"!=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_ne_QVeQVe(to_unsafe, right, out result)\nreturn result\n"}},{"id":"*(right:Color):Color-instance-method","html_id":"*(right:Color):Color-instance-method","name":"*","doc":"Overload of the binary * operator\n\nThis operator returns the component-wise multiplication\n(also called \"modulation\") of two colors.\nComponents are then divided by 255 so that the result is\nstill in the range `0 .. 255`.\n\n* *left* - Left operand\n* *right* - Right operand\n\n*Returns:* Result of *left* * *right*","summary":"<p>Overload of the binary * operator</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Color"}],"args_string":"(right : Color) : Color","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1377","def":{"name":"*","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"result = Color.allocate\nSFMLExt.sfml_operator_mul_QVeQVe(to_unsafe, right, result)\nreturn result\n"}},{"id":"+(right:Color):Color-instance-method","html_id":"+(right:Color):Color-instance-method","name":"+","doc":"Overload of the binary + operator\n\nThis operator returns the component-wise sum of two colors.\nComponents that exceed 255 are clamped to 255.\n\n* *left* - Left operand\n* *right* - Right operand\n\n*Returns:* Result of *left* + *right*","summary":"<p>Overload of the binary + operator</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Color"}],"args_string":"(right : Color) : Color","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1347","def":{"name":"+","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"result = Color.allocate\nSFMLExt.sfml_operator_add_QVeQVe(to_unsafe, right, result)\nreturn result\n"}},{"id":"-(right:Color):Color-instance-method","html_id":"-(right:Color):Color-instance-method","name":"-","doc":"Overload of the binary - operator\n\nThis operator returns the component-wise subtraction of two colors.\nComponents below 0 are clamped to 0.\n\n* *left* - Left operand\n* *right* - Right operand\n\n*Returns:* Result of *left* - *right*","summary":"<p>Overload of the binary - operator</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Color"}],"args_string":"(right : Color) : Color","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1361","def":{"name":"-","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"result = Color.allocate\nSFMLExt.sfml_operator_sub_QVeQVe(to_unsafe, right, result)\nreturn result\n"}},{"id":"==(right:Color):Bool-instance-method","html_id":"==(right:Color):Bool-instance-method","name":"==","doc":"Overload of the == operator\n\nThis operator compares two colors and check if they are equal.\n\n* *left* - Left operand\n* *right* - Right operand\n\n*Returns:* True if colors are equal, false if they are different","summary":"<p>Overload of the == operator</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Color"}],"args_string":"(right : Color) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1322","def":{"name":"==","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_eq_QVeQVe(to_unsafe, right, out result)\nreturn result\n"}},{"id":"a:UInt8-instance-method","html_id":"a:UInt8-instance-method","name":"a","doc":"Alpha (opacity) component","summary":"<p>Alpha (opacity) component</p>","abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1308","def":{"name":"a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"@a"}},{"id":"a=(a:Int)-instance-method","html_id":"a=(a:Int)-instance-method","name":"a=","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Int"}],"args_string":"(a : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1311","def":{"name":"a=","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@a = UInt8.new(a)"}},{"id":"b:UInt8-instance-method","html_id":"b:UInt8-instance-method","name":"b","doc":"Blue component","summary":"<p>Blue component</p>","abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1300","def":{"name":"b","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"@b"}},{"id":"b=(b:Int)-instance-method","html_id":"b=(b:Int)-instance-method","name":"b=","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int"}],"args_string":"(b : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1303","def":{"name":"b=","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@b = UInt8.new(b)"}},{"id":"dup:Color-instance-method","html_id":"dup:Color-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Color","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1394","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"return Color.new(self)"}},{"id":"g:UInt8-instance-method","html_id":"g:UInt8-instance-method","name":"g","doc":"Green component","summary":"<p>Green component</p>","abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1292","def":{"name":"g","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"@g"}},{"id":"g=(g:Int)-instance-method","html_id":"g=(g:Int)-instance-method","name":"g=","doc":null,"summary":null,"abstract":false,"args":[{"name":"g","doc":null,"default_value":"","external_name":"g","restriction":"Int"}],"args_string":"(g : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1295","def":{"name":"g=","args":[{"name":"g","doc":null,"default_value":"","external_name":"g","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@g = UInt8.new(g)"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L154","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((((((io << ({{ @type.name }})) << \"(\") << @r) << \", \") << @g) << \", \") << @b\nif @a != 255\n  (io << \", a: \") << @a\nend\nio << \")\"\n"}},{"id":"r:UInt8-instance-method","html_id":"r:UInt8-instance-method","name":"r","doc":"Red component","summary":"<p>Red component</p>","abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1284","def":{"name":"r","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"@r"}},{"id":"r=(r:Int)-instance-method","html_id":"r=(r:Int)-instance-method","name":"r=","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"Int"}],"args_string":"(r : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1287","def":{"name":"r=","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@r = UInt8.new(r)"}},{"id":"to_integer:UInt32-instance-method","html_id":"to_integer:UInt32-instance-method","name":"to_integer","doc":"Retrieve the color as a 32-bit unsigned integer\n\n*Returns:* Color represented as a 32-bit unsigned integer","summary":"<p>Retrieve the color as a 32-bit unsigned integer</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1278","def":{"name":"to_integer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"SFMLExt.sfml_color_tointeger(to_unsafe, out result)\nreturn result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Context","path":"SF/Context.html","kind":"class","full_name":"SF::Context","name":"Context","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/SF/GlResource","kind":"module","full_name":"SF::GlResource","name":"GlResource"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":270,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/GlResource","kind":"module","full_name":"SF::GlResource","name":"GlResource"},{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Class holding a valid drawing context\n\nIf you need to make OpenGL calls without having an\nactive window (like in a thread), you can use an\ninstance of this class to get a valid context.\n\nHaving a valid context is necessary for *every* OpenGL call.\n\nNote that a context is only active in its current thread,\nif you create a new thread it will have no valid context\nby default.\n\nTo use a `SF::Context` instance, just construct it and let it\nlive as long as you need a valid context. No explicit activation\nis needed, all it has to do is to exist. Its destructor\nwill take care of deactivating and freeing all the attached\nresources.\n\nUsage example:\n```c++\nvoid threadFunction(void*)\n   SF::Context context\n   # from now on, you have a valid context\n\n   # you can make OpenGL calls\n   glClear(GL_DEPTH_BUFFER_BIT)\nend\n# the context is automatically deactivated and destroyed\n# by the SF::Context destructor\n```","summary":"<p>Class holding a valid drawing context</p>","class_methods":[{"id":"active_context_id:UInt64-class-method","html_id":"active_context_id:UInt64-class-method","name":"active_context_id","doc":"Get the currently active context's ID\n\nThe context ID is used to identify contexts when\nmanaging unshareable OpenGL resources.\n\n*Returns:* The active context's ID or 0 if no context is currently active","summary":"<p>Get the currently active context's ID</p>","abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L332","def":{"name":"active_context_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"SFMLExt.sfml_context_getactivecontextid(out result)\nreturn result\n"}},{"id":"extension_available?(name:String):Bool-class-method","html_id":"extension_available?(name:String):Bool-class-method","name":"extension_available?","doc":"Check whether a given OpenGL extension is available\n\n* *name* - Name of the extension to check for\n\n*Returns:* True if available, false if unavailable","summary":"<p>Check whether a given OpenGL extension is available</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L312","def":{"name":"extension_available?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_context_isextensionavailable_Yy6(name, out result)\nreturn result\n"}}],"constructors":[{"id":"new(settings:ContextSettings,width:Int,height:Int)-class-method","html_id":"new(settings:ContextSettings,width:Int,height:Int)-class-method","name":"new","doc":"Construct a in-memory context\n\nThis constructor is for internal use, you don't need\nto bother with it.\n\n* *settings* - Creation parameters\n* *width* - Back buffer width\n* *height* - Back buffer height","summary":"<p>Construct a in-memory context</p>","abstract":false,"args":[{"name":"settings","doc":null,"default_value":"","external_name":"settings","restriction":"ContextSettings"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"}],"args_string":"(settings : ContextSettings, width : Int, height : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L344","def":{"name":"new","args":[{"name":"settings","doc":null,"default_value":"","external_name":"settings","restriction":"ContextSettings"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(settings, width, height)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nThe constructor creates and activates the context","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L275","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"active=(active:Bool):Bool-instance-method","html_id":"active=(active:Bool):Bool-instance-method","name":"active=","doc":"Activate or deactivate explicitly the context\n\n* *active* - True to activate, false to deactivate\n\n*Returns:* True on success, false on failure","summary":"<p>Activate or deactivate explicitly the context</p>","abstract":false,"args":[{"name":"active","doc":null,"default_value":"","external_name":"active","restriction":"Bool"}],"args_string":"(active : Bool) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L291","def":{"name":"active=","args":[{"name":"active","doc":null,"default_value":"","external_name":"active","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_context_setactive_GZq(to_unsafe, active, out result)\nreturn result\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor\n\nThe destructor deactivates and destroys the context","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L282","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_context_finalize(to_unsafe)\nSFMLExt.sfml_context_free(@this)\n"}},{"id":"settings:ContextSettings-instance-method","html_id":"settings:ContextSettings-instance-method","name":"settings","doc":"Get the settings of the context\n\nNote that these settings may be different than the ones\npassed to the constructor; they are indeed adjusted if the\noriginal settings are not directly supported by the system.\n\n*Returns:* Structure containing the settings","summary":"<p>Get the settings of the context</p>","abstract":false,"args":[],"args_string":" : ContextSettings","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L302","def":{"name":"settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ContextSettings","visibility":"Public","body":"result = ContextSettings.allocate\nSFMLExt.sfml_context_getsettings(to_unsafe, result)\nreturn result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/ContextSettings","path":"SF/ContextSettings.html","kind":"struct","full_name":"SF::ContextSettings","name":"ContextSettings","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":127,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Structure defining the settings of the OpenGL\ncontext attached to a window\n\nContextSettings allows to define several advanced settings\nof the OpenGL context attached to a window. All these\nsettings with the exception of the compatibility flag\nand anti-aliasing level have no impact on the regular\nSFML rendering (graphics module), so you may need to use\nthis structure only if you're using SFML as a windowing\nsystem for custom OpenGL rendering.\n\nThe depth_bits and stencil_bits members define the number\nof bits per pixel requested for the (respectively) depth\nand stencil buffers.\n\nantialiasing_level represents the requested number of\nmultisampling levels for anti-aliasing.\n\nmajor_version and minor_version define the version of the\nOpenGL context that you want. Only versions greater or\nequal to 3.0 are relevant; versions lesser than 3.0 are\nall handled the same way (i.e. you can use any version\n&lt; 3.0 if you don't want an OpenGL 3 context).\n\nWhen requesting a context with a version greater or equal\nto 3.2, you have the option of specifying whether the\ncontext should follow the core or compatibility profile\nof all newer (>= 3.2) OpenGL specifications. For versions 3.0\nand 3.1 there is only the core profile. By default a\ncompatibility context is created. You only need to specify\nthe core flag if you want a core profile context to use with\nyour own OpenGL rendering.\n**Warning: The graphics module will not function if you\nrequest a core profile context. Make sure the attributes are\nset to Default if you want to use the graphics module.**\n\nSetting the debug attribute flag will request a context with\nadditional debugging features enabled. Depending on the\nsystem, this might be required for advanced OpenGL debugging.\nOpenGL debugging is disabled by default.\n\n**Special Note for OS X:**\nApple only supports choosing between either a legacy context\n(OpenGL 2.1) or a core context (OpenGL version depends on the\noperating system version but is at least 3.2). Compatibility\ncontexts are not supported. Further information is available on the\n[OpenGL Capabilities Tables](https://developer.apple.com/opengl/capabilities/index.html)\npage. OS X also currently does not support debug contexts.\n\nPlease note that these values are only a hint.\nNo failure will be reported if one or more of these values\nare not supported by the system; instead, SFML will try to\nfind the closest valid match. You can then retrieve the\nsettings that the window actually used to create its context,\nwith Window.settings().","summary":"<p>Structure defining the settings of the OpenGL context attached to a window</p>","class_methods":[],"constructors":[{"id":"new(depth:Int=0,stencil:Int=0,antialiasing:Int=0,major:Int=1,minor:Int=1,attributes:Attribute=Default,s_rgb:Bool=false)-class-method","html_id":"new(depth:Int=0,stencil:Int=0,antialiasing:Int=0,major:Int=1,minor:Int=1,attributes:Attribute=Default,s_rgb:Bool=false)-class-method","name":"new","doc":"Default constructor\n\n* *depth* - Depth buffer bits\n* *stencil* - Stencil buffer bits\n* *antialiasing* - Antialiasing level\n* *major* - Major number of the context version\n* *minor* - Minor number of the context version\n* *attributes* - Attribute flags of the context\n* *s_rgb* - sRGB capable framebuffer","summary":"<p>Default constructor</p>","abstract":false,"args":[{"name":"depth","doc":null,"default_value":"0","external_name":"depth","restriction":"Int"},{"name":"stencil","doc":null,"default_value":"0","external_name":"stencil","restriction":"Int"},{"name":"antialiasing","doc":null,"default_value":"0","external_name":"antialiasing","restriction":"Int"},{"name":"major","doc":null,"default_value":"1","external_name":"major","restriction":"Int"},{"name":"minor","doc":null,"default_value":"1","external_name":"minor","restriction":"Int"},{"name":"attributes","doc":null,"default_value":"Default","external_name":"attributes","restriction":"Attribute"},{"name":"s_rgb","doc":null,"default_value":"false","external_name":"s_rgb","restriction":"Bool"}],"args_string":"(depth : Int = <span class=\"n\">0</span>, stencil : Int = <span class=\"n\">0</span>, antialiasing : Int = <span class=\"n\">0</span>, major : Int = <span class=\"n\">1</span>, minor : Int = <span class=\"n\">1</span>, attributes : Attribute = <span class=\"t\">Default</span>, s_rgb : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L155","def":{"name":"new","args":[{"name":"depth","doc":null,"default_value":"0","external_name":"depth","restriction":"Int"},{"name":"stencil","doc":null,"default_value":"0","external_name":"stencil","restriction":"Int"},{"name":"antialiasing","doc":null,"default_value":"0","external_name":"antialiasing","restriction":"Int"},{"name":"major","doc":null,"default_value":"1","external_name":"major","restriction":"Int"},{"name":"minor","doc":null,"default_value":"1","external_name":"minor","restriction":"Int"},{"name":"attributes","doc":null,"default_value":"Default","external_name":"attributes","restriction":"Attribute"},{"name":"s_rgb","doc":null,"default_value":"false","external_name":"s_rgb","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(depth, stencil, antialiasing, major, minor, attributes, s_rgb)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"antialiasing_level:UInt32-instance-method","html_id":"antialiasing_level:UInt32-instance-method","name":"antialiasing_level","doc":"Level of antialiasing","summary":"<p>Level of antialiasing</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L183","def":{"name":"antialiasing_level","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@antialiasing_level"}},{"id":"antialiasing_level=(antialiasing_level:Int)-instance-method","html_id":"antialiasing_level=(antialiasing_level:Int)-instance-method","name":"antialiasing_level=","doc":null,"summary":null,"abstract":false,"args":[{"name":"antialiasing_level","doc":null,"default_value":"","external_name":"antialiasing_level","restriction":"Int"}],"args_string":"(antialiasing_level : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L186","def":{"name":"antialiasing_level=","args":[{"name":"antialiasing_level","doc":null,"default_value":"","external_name":"antialiasing_level","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@antialiasing_level = LibC::UInt.new(antialiasing_level)"}},{"id":"attribute_flags:UInt32-instance-method","html_id":"attribute_flags:UInt32-instance-method","name":"attribute_flags","doc":"The attribute flags to create the context with","summary":"<p>The attribute flags to create the context with</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L207","def":{"name":"attribute_flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@attribute_flags"}},{"id":"attribute_flags=(attribute_flags:Int)-instance-method","html_id":"attribute_flags=(attribute_flags:Int)-instance-method","name":"attribute_flags=","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_flags","doc":null,"default_value":"","external_name":"attribute_flags","restriction":"Int"}],"args_string":"(attribute_flags : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L210","def":{"name":"attribute_flags=","args":[{"name":"attribute_flags","doc":null,"default_value":"","external_name":"attribute_flags","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attribute_flags = UInt32.new(attribute_flags)"}},{"id":"depth_bits:UInt32-instance-method","html_id":"depth_bits:UInt32-instance-method","name":"depth_bits","doc":"Bits of the depth buffer","summary":"<p>Bits of the depth buffer</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L167","def":{"name":"depth_bits","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@depth_bits"}},{"id":"depth_bits=(depth_bits:Int)-instance-method","html_id":"depth_bits=(depth_bits:Int)-instance-method","name":"depth_bits=","doc":null,"summary":null,"abstract":false,"args":[{"name":"depth_bits","doc":null,"default_value":"","external_name":"depth_bits","restriction":"Int"}],"args_string":"(depth_bits : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L170","def":{"name":"depth_bits=","args":[{"name":"depth_bits","doc":null,"default_value":"","external_name":"depth_bits","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@depth_bits = LibC::UInt.new(depth_bits)"}},{"id":"dup:ContextSettings-instance-method","html_id":"dup:ContextSettings-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : ContextSettings","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L236","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ContextSettings","visibility":"Public","body":"return ContextSettings.new(self)"}},{"id":"major_version:UInt32-instance-method","html_id":"major_version:UInt32-instance-method","name":"major_version","doc":"Major number of the context version to create","summary":"<p>Major number of the context version to create</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L191","def":{"name":"major_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@major_version"}},{"id":"major_version=(major_version:Int)-instance-method","html_id":"major_version=(major_version:Int)-instance-method","name":"major_version=","doc":null,"summary":null,"abstract":false,"args":[{"name":"major_version","doc":null,"default_value":"","external_name":"major_version","restriction":"Int"}],"args_string":"(major_version : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L194","def":{"name":"major_version=","args":[{"name":"major_version","doc":null,"default_value":"","external_name":"major_version","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@major_version = LibC::UInt.new(major_version)"}},{"id":"minor_version:UInt32-instance-method","html_id":"minor_version:UInt32-instance-method","name":"minor_version","doc":"Minor number of the context version to create","summary":"<p>Minor number of the context version to create</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L199","def":{"name":"minor_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@minor_version"}},{"id":"minor_version=(minor_version:Int)-instance-method","html_id":"minor_version=(minor_version:Int)-instance-method","name":"minor_version=","doc":null,"summary":null,"abstract":false,"args":[{"name":"minor_version","doc":null,"default_value":"","external_name":"minor_version","restriction":"Int"}],"args_string":"(minor_version : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L202","def":{"name":"minor_version=","args":[{"name":"minor_version","doc":null,"default_value":"","external_name":"minor_version","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@minor_version = LibC::UInt.new(minor_version)"}},{"id":"s_rgb_capable:Bool-instance-method","html_id":"s_rgb_capable:Bool-instance-method","name":"s_rgb_capable","doc":"Whether the context framebuffer is sRGB capable","summary":"<p>Whether the context framebuffer is sRGB capable</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L215","def":{"name":"s_rgb_capable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@s_rgb_capable"}},{"id":"s_rgb_capable=(s_rgb_capable:Bool)-instance-method","html_id":"s_rgb_capable=(s_rgb_capable:Bool)-instance-method","name":"s_rgb_capable=","doc":null,"summary":null,"abstract":false,"args":[{"name":"s_rgb_capable","doc":null,"default_value":"","external_name":"s_rgb_capable","restriction":"Bool"}],"args_string":"(s_rgb_capable : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L218","def":{"name":"s_rgb_capable=","args":[{"name":"s_rgb_capable","doc":null,"default_value":"","external_name":"s_rgb_capable","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@s_rgb_capable = s_rgb_capable"}},{"id":"stencil_bits:UInt32-instance-method","html_id":"stencil_bits:UInt32-instance-method","name":"stencil_bits","doc":"Bits of the stencil buffer","summary":"<p>Bits of the stencil buffer</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L175","def":{"name":"stencil_bits","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@stencil_bits"}},{"id":"stencil_bits=(stencil_bits:Int)-instance-method","html_id":"stencil_bits=(stencil_bits:Int)-instance-method","name":"stencil_bits=","doc":null,"summary":null,"abstract":false,"args":[{"name":"stencil_bits","doc":null,"default_value":"","external_name":"stencil_bits","restriction":"Int"}],"args_string":"(stencil_bits : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L178","def":{"name":"stencil_bits=","args":[{"name":"stencil_bits","doc":null,"default_value":"","external_name":"stencil_bits","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@stencil_bits = LibC::UInt.new(stencil_bits)"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/ContextSettings/Attribute","path":"SF/ContextSettings/Attribute.html","kind":"enum","full_name":"SF::ContextSettings::Attribute","name":"Attribute","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":137,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Default","name":"Default","value":"0","doc":"Non-debug, compatibility context (this and the core attribute are mutually exclusive)","summary":"<p>Non-debug, compatibility context (this and the core attribute are mutually exclusive)</p>"},{"id":"Core","name":"Core","value":"1","doc":"Core attribute","summary":"<p>Core attribute</p>"},{"id":"Debug","name":"Debug","value":"4","doc":"Debug attribute","summary":"<p>Debug attribute</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/ContextSettings","kind":"struct","full_name":"SF::ContextSettings","name":"ContextSettings"},"doc":"Enumeration of the context attribute flags","summary":"<p>Enumeration of the context attribute flags</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"core?-instance-method","html_id":"core?-instance-method","name":"core?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L141","def":{"name":"core?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Core)"}},{"id":"debug?-instance-method","html_id":"debug?-instance-method","name":"debug?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L143","def":{"name":"debug?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Debug)"}},{"id":"default?-instance-method","html_id":"default?-instance-method","name":"default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L139","def":{"name":"default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Default)"}},{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L137","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == 0"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/ConvexShape","path":"SF/ConvexShape.html","kind":"class","full_name":"SF::ConvexShape","name":"ConvexShape","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Shape","kind":"class","full_name":"SF::Shape","name":"Shape"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Shape","kind":"class","full_name":"SF::Shape","name":"Shape"},{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"},{"html_id":"github.com/oprypin/crsfml/SF/Transformable","kind":"class","full_name":"SF::Transformable","name":"Transformable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":2370,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":198,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Specialized shape representing a convex polygon\n\nThis class inherits all the functions of `SF::Transformable`\n(position, rotation, scale, bounds, ...) as well as the\nfunctions of `SF::Shape` (outline, color, texture, ...).\n\nIt is important to keep in mind that a convex shape must\nalways be... convex, otherwise it may not be drawn correctly.\nMoreover, the points must be defined in order; using a random\norder would result in an incorrect shape.\n\nUsage example:\n```\npolygon = SF::ConvexShape.new\npolygon.point_count = 3\npolygon[0] = SF.vector2f(0, 0)\npolygon[1] = SF.vector2f(0, 10)\npolygon[2] = SF.vector2f(25, 5)\npolygon.outline_color = SF::Color::Red\npolygon.outline_thickness = 5\npolygon.position = {10, 20}\n...\nwindow.draw polygon\n```\n\n*See also:* `SF::Shape`, `SF::RectangleShape`, `SF::CircleShape`","summary":"<p>Specialized shape representing a convex polygon</p>","class_methods":[],"constructors":[{"id":"new(point_count:Int=0)-class-method","html_id":"new(point_count:Int=0)-class-method","name":"new","doc":"Default constructor\n\n* *point_count* - Number of points of the polygon","summary":"<p>Default constructor</p>","abstract":false,"args":[{"name":"point_count","doc":null,"default_value":"0","external_name":"point_count","restriction":"Int"}],"args_string":"(point_count : Int = <span class=\"n\">0</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2379","def":{"name":"new","args":[{"name":"point_count","doc":null,"default_value":"0","external_name":"point_count","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(point_count)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](index)-instance-method","html_id":"[](index)-instance-method","name":"[]","doc":"Shorthand for `get_point`","summary":"<p>Shorthand for <code><a href=\"../SF/ConvexShape.html#get_point(index:Int):Vector2f-instance-method\">#get_point</a></code></p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"args_string":"(index)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L200","def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_point(index)"}},{"id":"[]=(index,point)-instance-method","html_id":"[]=(index,point)-instance-method","name":"[]=","doc":"Shorthand for `set_point`","summary":"<p>Shorthand for <code><a href=\"../SF/ConvexShape.html#set_point(index:Int,point:Vector2%7CTuple)-instance-method\">#set_point</a></code></p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":""}],"args_string":"(index, point)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L204","def":{"name":"[]=","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":""},{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set_point(index, point)"}},{"id":"dup:ConvexShape-instance-method","html_id":"dup:ConvexShape-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : ConvexShape","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2609","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ConvexShape","visibility":"Public","body":"return ConvexShape.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Virtual destructor","summary":"<p>Virtual destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2372","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_convexshape_finalize(to_unsafe)\nSFMLExt.sfml_convexshape_free(@this)\n"}},{"id":"get_point(index:Int):Vector2f-instance-method","html_id":"get_point(index:Int):Vector2f-instance-method","name":"get_point","doc":"Get the position of a point\n\nThe returned point is in local coordinates, that is,\nthe shape's transforms (position, rotation, scale) are\nnot taken into account.\nThe result is undefined if *index* is out of the valid range.\n\n* *index* - Index of the point to get, in range `0 ... point_count`\n\n*Returns:* Position of the index-th point of the polygon\n\n*See also:* `point=`","summary":"<p>Get the position of a point</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2430","def":{"name":"get_point","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\nSFMLExt.sfml_convexshape_getpoint_vgv(to_unsafe, LibC::SizeT.new(index), result)\nreturn result\n"}},{"id":"point_count:Int32-instance-method","html_id":"point_count:Int32-instance-method","name":"point_count","doc":"Get the number of points of the polygon\n\n*Returns:* Number of points of the polygon\n\n*See also:* `point_count=`","summary":"<p>Get the number of points of the polygon</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2398","def":{"name":"point_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_convexshape_getpointcount(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"point_count=(count:Int)-instance-method","html_id":"point_count=(count:Int)-instance-method","name":"point_count=","doc":"Set the number of points of the polygon\n\n*count* must be greater than 2 to define a valid shape.\n\n* *count* - New number of points of the polygon\n\n*See also:* `point_count`","summary":"<p>Set the number of points of the polygon</p>","abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int"}],"args_string":"(count : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2390","def":{"name":"point_count=","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_convexshape_setpointcount_vgv(to_unsafe, LibC::SizeT.new(count))"}},{"id":"set_point(index:Int,point:Vector2|Tuple)-instance-method","html_id":"set_point(index:Int,point:Vector2|Tuple)-instance-method","name":"set_point","doc":"Set the position of a point\n\nDon't forget that the polygon must remain convex, and\nthe points need to stay ordered!\npoint_count= must be called first in order to set the total\nnumber of points. The result is undefined if *index* is out\nof the valid range.\n\n* *index* - Index of the point to change, in range `0 ... point_count`\n* *point* - New position of the point\n\n*See also:* `point`","summary":"<p>Set the position of a point</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"}],"args_string":"(index : Int, point : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2414","def":{"name":"set_point","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"point = Vector2f.new(point[0].to_f32, point[1].to_f32)\nSFMLExt.sfml_convexshape_setpoint_vgvUU2(to_unsafe, LibC::SizeT.new(index), point)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Cursor","path":"SF/Cursor.html","kind":"class","full_name":"SF::Cursor","name":"Cursor","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":391,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Cursor defines the appearance of a system cursor\n\n*Warning:* Features related to Cursor are not supported on\niOS and Android.\n\nThis class abstracts the operating system resources\nassociated with either a native system cursor or a custom\ncursor.\n\nAfter loading the cursor the graphical appearance\nwith either load_from_pixels() or load_from_system(), the\ncursor can be changed with `SF::Window::mouse_cursor=`().\n\nThe behaviour is undefined if the cursor is destroyed while\nin use by the window.\n\nUsage example:\n```c++\nsf::Window window;\n\n// ... create window as usual ...\n\nsf::Cursor cursor;\nif (cursor.loadFromSystem(sf::Cursor::Hand))\n    window.setMouseCursor(cursor);\n```\n\n*See also:* `SF::`Window`::mouse_cursor=`","summary":"<p>Cursor defines the appearance of a system cursor</p>","class_methods":[],"constructors":[{"id":"from_pixels(*args,**kwargs):self-class-method","html_id":"from_pixels(*args,**kwargs):self-class-method","name":"from_pixels","doc":"Shorthand for `cursor = Cursor.new; cursor.load_from_pixels(...); cursor`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>cursor = <a href=\"../SF/Cursor.html#new-class-method\">Cursor.new</a>; cursor.load_from_pixels(...); cursor</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L498","def":{"name":"from_pixels","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_pixels(*args, **kwargs))\n  raise(InitError.new(\"Cursor.load_from_pixels failed\"))\nend\nobj\n"}},{"id":"from_system(*args,**kwargs):self-class-method","html_id":"from_system(*args,**kwargs):self-class-method","name":"from_system","doc":"Shorthand for `cursor = Cursor.new; cursor.load_from_system(...); cursor`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>cursor = <a href=\"../SF/Cursor.html#new-class-method\">Cursor.new</a>; cursor<a href=\"../SF/Cursor.html#load_from_system(type:Cursor::Type):Bool-instance-method\">.load_from_system(...)</a>; cursor</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L523","def":{"name":"from_system","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_system(*args, **kwargs))\n  raise(InitError.new(\"Cursor.load_from_system failed\"))\nend\nobj\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nThis constructor doesn't actually create the cursor;\ninitially the new instance is invalid and must not be\nused until either load_from_pixels() or load_from_system()\nis called and successfully created a cursor.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L451","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor\n\nThis destructor releases the system resources\nassociated with this cursor, if any.","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L459","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_cursor_finalize(to_unsafe)\nSFMLExt.sfml_cursor_free(@this)\n"}},{"id":"load_from_pixels(pixels:::Pointer(UInt8),size:Vector2|Tuple,hotspot:Vector2|Tuple):Bool-instance-method","html_id":"load_from_pixels(pixels:::Pointer(UInt8),size:Vector2|Tuple,hotspot:Vector2|Tuple):Bool-instance-method","name":"load_from_pixels","doc":"Create a cursor with the provided image\n\n*pixels* must be an array of *width* by *height* pixels\nin 32-bit RGBA format. If not, this will cause undefined behavior.\n\nIf *pixels* is null or either *width* or *height* are 0,\nthe current cursor is left unchanged and the function will\nreturn false.\n\nIn addition to specifying the pixel data, you can also\nspecify the location of the hotspot of the cursor. The\nhotspot is the pixel coordinate within the cursor image\nwhich will be located exactly where the mouse pointer\nposition is. Any mouse actions that are performed will\nreturn the window/screen location of the hotspot.\n\n*Warning:* On Unix, the pixels are mapped into a monochrome\nbitmap: pixels with an alpha channel to 0 are\ntransparent, black if the RGB channel are close\nto zero, and white otherwise.\n\n* *pixels* - Array of pixels of the image\n* *size* - Width and height of the image\n* *hotspot* - (x,y) location of the hotspot\n*Returns:* true if the cursor was successfully loaded;\nfalse otherwise","summary":"<p>Create a cursor with the provided image</p>","abstract":false,"args":[{"name":"pixels","doc":null,"default_value":"","external_name":"pixels","restriction":"::Pointer(UInt8)"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Vector2 | Tuple"},{"name":"hotspot","doc":null,"default_value":"","external_name":"hotspot","restriction":"Vector2 | Tuple"}],"args_string":"(pixels : ::Pointer(UInt8), size : Vector2 | Tuple, hotspot : Vector2 | Tuple) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L489","def":{"name":"load_from_pixels","args":[{"name":"pixels","doc":null,"default_value":"","external_name":"pixels","restriction":"::Pointer(UInt8)"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Vector2 | Tuple"},{"name":"hotspot","doc":null,"default_value":"","external_name":"hotspot","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"size = Vector2u.new(size[0].to_u32, size[1].to_u32)\nhotspot = Vector2u.new(hotspot[0].to_u32, hotspot[1].to_u32)\nSFMLExt.sfml_cursor_loadfrompixels_843t9zt9z(to_unsafe, pixels, size, hotspot, out result)\nreturn result\n"}},{"id":"load_from_system(type:Cursor::Type):Bool-instance-method","html_id":"load_from_system(type:Cursor::Type):Bool-instance-method","name":"load_from_system","doc":"Create a native system cursor\n\nRefer to the list of cursor available on each system\n(see `SF::Cursor::Type`) to know whether a given cursor is\nexpected to load successfully or is not supported by\nthe operating system.\n\n* *type* - Native system cursor type\n*Returns:* true if and only if the corresponding cursor is\nnatively supported by the operating system;\nfalse otherwise","summary":"<p>Create a native system cursor</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Cursor::Type"}],"args_string":"(type : Cursor::Type) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L516","def":{"name":"load_from_system","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Cursor::Type"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_cursor_loadfromsystem_yAZ(to_unsafe, type, out result)\nreturn result\n"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Cursor/Type","path":"SF/Cursor/Type.html","kind":"enum","full_name":"SF::Cursor::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":416,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Arrow","name":"Arrow","value":"0","doc":"Arrow cursor (default)","summary":"<p>Arrow cursor (default)</p>"},{"id":"ArrowWait","name":"ArrowWait","value":"1","doc":"Busy arrow cursor","summary":"<p>Busy arrow cursor</p>"},{"id":"Wait","name":"Wait","value":"2","doc":"Busy cursor","summary":"<p>Busy cursor</p>"},{"id":"Text","name":"Text","value":"3","doc":"I-beam, cursor when hovering over a field allowing text entry","summary":"<p>I-beam, cursor when hovering over a field allowing text entry</p>"},{"id":"Hand","name":"Hand","value":"4","doc":"Pointing hand cursor","summary":"<p>Pointing hand cursor</p>"},{"id":"SizeHorizontal","name":"SizeHorizontal","value":"5","doc":"Horizontal double arrow cursor","summary":"<p>Horizontal double arrow cursor</p>"},{"id":"SizeVertical","name":"SizeVertical","value":"6","doc":"Vertical double arrow cursor","summary":"<p>Vertical double arrow cursor</p>"},{"id":"SizeTopLeftBottomRight","name":"SizeTopLeftBottomRight","value":"7","doc":"Double arrow cursor going from top-left to bottom-right","summary":"<p>Double arrow cursor going from top-left to bottom-right</p>"},{"id":"SizeBottomLeftTopRight","name":"SizeBottomLeftTopRight","value":"8","doc":"Double arrow cursor going from bottom-left to top-right","summary":"<p>Double arrow cursor going from bottom-left to top-right</p>"},{"id":"SizeAll","name":"SizeAll","value":"9","doc":"Combination of SizeHorizontal and SizeVertical","summary":"<p>Combination of SizeHorizontal and SizeVertical</p>"},{"id":"Cross","name":"Cross","value":"10","doc":"Crosshair cursor","summary":"<p>Crosshair cursor</p>"},{"id":"Help","name":"Help","value":"11","doc":"Help cursor","summary":"<p>Help cursor</p>"},{"id":"NotAllowed","name":"NotAllowed","value":"12","doc":"Action not allowed cursor","summary":"<p>Action not allowed cursor</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Cursor","kind":"class","full_name":"SF::Cursor","name":"Cursor"},"doc":"Enumeration of the native system cursor types\n\nRefer to the following table to determine which cursor\nis available on which platform.\n\n Type                               | Linux | Mac OS X | Windows  |\n------------------------------------|:-----:|:--------:|:--------:|\n `SF::Cursor::Arrow`                  |  yes  |    yes   |   yes    |\n `SF::Cursor::ArrowWait`              |  no   |    no    |   yes    |\n `SF::Cursor::Wait`                   |  yes  |    no    |   yes    |\n `SF::Cursor::Text`                   |  yes  |    yes   |   yes    |\n `SF::Cursor::Hand`                   |  yes  |    yes   |   yes    |\n `SF::Cursor::SizeHorizontal`         |  yes  |    yes   |   yes    |\n `SF::Cursor::SizeVertical`           |  yes  |    yes   |   yes    |\n `SF::Cursor::SizeTopLeftBottomRight` |  no   |    yes*  |   yes    |\n `SF::Cursor::SizeBottomLeftTopRight` |  no   |    yes*  |   yes    |\n `SF::Cursor::SizeAll`                |  yes  |    no    |   yes    |\n `SF::Cursor::Cross`                  |  yes  |    yes   |   yes    |\n `SF::Cursor::Help`                   |  yes  |    yes*  |   yes    |\n `SF::Cursor::NotAllowed`             |  yes  |    yes   |   yes    |\n\n * These cursor types are undocumented so may not\n   be available on all versions, but have been tested on 10.13","summary":"<p>Enumeration of the native system cursor types</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"arrow?-instance-method","html_id":"arrow?-instance-method","name":"arrow?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L418","def":{"name":"arrow?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Arrow"}},{"id":"arrow_wait?-instance-method","html_id":"arrow_wait?-instance-method","name":"arrow_wait?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L420","def":{"name":"arrow_wait?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ArrowWait"}},{"id":"cross?-instance-method","html_id":"cross?-instance-method","name":"cross?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L438","def":{"name":"cross?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Cross"}},{"id":"hand?-instance-method","html_id":"hand?-instance-method","name":"hand?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L426","def":{"name":"hand?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Hand"}},{"id":"help?-instance-method","html_id":"help?-instance-method","name":"help?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L440","def":{"name":"help?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Help"}},{"id":"not_allowed?-instance-method","html_id":"not_allowed?-instance-method","name":"not_allowed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L442","def":{"name":"not_allowed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NotAllowed"}},{"id":"size_all?-instance-method","html_id":"size_all?-instance-method","name":"size_all?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L436","def":{"name":"size_all?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SizeAll"}},{"id":"size_bottom_left_top_right?-instance-method","html_id":"size_bottom_left_top_right?-instance-method","name":"size_bottom_left_top_right?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L434","def":{"name":"size_bottom_left_top_right?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SizeBottomLeftTopRight"}},{"id":"size_horizontal?-instance-method","html_id":"size_horizontal?-instance-method","name":"size_horizontal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L428","def":{"name":"size_horizontal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SizeHorizontal"}},{"id":"size_top_left_bottom_right?-instance-method","html_id":"size_top_left_bottom_right?-instance-method","name":"size_top_left_bottom_right?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L432","def":{"name":"size_top_left_bottom_right?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SizeTopLeftBottomRight"}},{"id":"size_vertical?-instance-method","html_id":"size_vertical?-instance-method","name":"size_vertical?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L430","def":{"name":"size_vertical?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SizeVertical"}},{"id":"text?-instance-method","html_id":"text?-instance-method","name":"text?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L424","def":{"name":"text?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Text"}},{"id":"wait?-instance-method","html_id":"wait?-instance-method","name":"wait?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L422","def":{"name":"wait?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Wait"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/Drawable","path":"SF/Drawable.html","kind":"module","full_name":"SF::Drawable","name":"Drawable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"graphics/obj.cr","line_number":850,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":209,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/oprypin/crsfml/SF/Shape","kind":"class","full_name":"SF::Shape","name":"Shape"},{"html_id":"github.com/oprypin/crsfml/SF/Sprite","kind":"class","full_name":"SF::Sprite","name":"Sprite"},{"html_id":"github.com/oprypin/crsfml/SF/Text","kind":"class","full_name":"SF::Text","name":"Text"},{"html_id":"github.com/oprypin/crsfml/SF/VertexArray","kind":"class","full_name":"SF::VertexArray","name":"VertexArray"},{"html_id":"github.com/oprypin/crsfml/SF/VertexBuffer","kind":"class","full_name":"SF::VertexBuffer","name":"VertexBuffer"}],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Abstract module for objects that can be drawn\nto a render target\n\n`SF::Drawable` is a very simple module that allows objects\nof derived classes to be drawn to a `SF::RenderTarget`.\n\nAll you have to do in your derived class is to implement the\n`draw` function.\n\nNote that including `SF::Drawable` is not mandatory,\nbut it allows this nice syntax `window.draw(object)` rather\nthan `object.draw(window)`, which is more consistent with other\nSFML classes.\n\nExample:\n```\nclass MyDrawable\n  include SF::Drawable\n  def draw(target : SF::RenderTarget, states : SF::RenderStates)\n    # You can draw other high-level objects\n    target.draw(@sprite, states)\n\n    # ... or use the low-level API\n    states.texture = @texture\n    target.draw(@vertices, states)\n\n    # ... or draw with OpenGL directly\n    glBegin(GL_QUADS)\n    ...\n    glEnd()\n  end\n\n  @sprite : SF::Sprite\n  @texture : SF::Texture\n  @vertices : SF::VertexArray\nend\n```\n\n*See also:* `SF::RenderTarget`","summary":"<p>Abstract module for objects that can be drawn to a render target</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"draw(target:RenderTarget,states:RenderStates)-instance-method","html_id":"draw(target:RenderTarget,states:RenderStates)-instance-method","name":"draw","doc":"Draw the object to a render target.\n\nThis is an abstract method that has to be implemented by the\nincluding class to define how the drawable should be drawn.\n* *target* - Render target to draw to\n* *states* - Current render states","summary":"<p>Draw the object to a render target.</p>","abstract":true,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"RenderTarget"},{"name":"states","doc":null,"default_value":"","external_name":"states","restriction":"RenderStates"}],"args_string":"(target : RenderTarget, states : RenderStates)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L216","def":{"name":"draw","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"RenderTarget"},{"name":"states","doc":null,"default_value":"","external_name":"states","restriction":"RenderStates"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event","path":"SF/Event.html","kind":"struct","full_name":"SF::Event","name":"Event","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1267,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/Closed","kind":"struct","full_name":"SF::Event::Closed","name":"Closed"},{"html_id":"github.com/oprypin/crsfml/SF/Event/GainedFocus","kind":"struct","full_name":"SF::Event::GainedFocus","name":"GainedFocus"},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickButtonEvent","kind":"struct","full_name":"SF::Event::JoystickButtonEvent","name":"JoystickButtonEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickConnectEvent","kind":"struct","full_name":"SF::Event::JoystickConnectEvent","name":"JoystickConnectEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickMoveEvent","kind":"struct","full_name":"SF::Event::JoystickMoveEvent","name":"JoystickMoveEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event/KeyEvent","kind":"struct","full_name":"SF::Event::KeyEvent","name":"KeyEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event/LostFocus","kind":"struct","full_name":"SF::Event::LostFocus","name":"LostFocus"},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseButtonEvent","kind":"struct","full_name":"SF::Event::MouseButtonEvent","name":"MouseButtonEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseEntered","kind":"struct","full_name":"SF::Event::MouseEntered","name":"MouseEntered"},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseLeft","kind":"struct","full_name":"SF::Event::MouseLeft","name":"MouseLeft"},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseMoveEvent","kind":"struct","full_name":"SF::Event::MouseMoveEvent","name":"MouseMoveEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseWheelEvent","kind":"struct","full_name":"SF::Event::MouseWheelEvent","name":"MouseWheelEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseWheelScrollEvent","kind":"struct","full_name":"SF::Event::MouseWheelScrollEvent","name":"MouseWheelScrollEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event/SensorEvent","kind":"struct","full_name":"SF::Event::SensorEvent","name":"SensorEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event/SizeEvent","kind":"struct","full_name":"SF::Event::SizeEvent","name":"SizeEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event/TextEvent","kind":"struct","full_name":"SF::Event::TextEvent","name":"TextEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchEvent","kind":"struct","full_name":"SF::Event::TouchEvent","name":"TouchEvent"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Defines a system event and its parameters\n\n`SF::Event` holds all the informations about a system event\nthat just happened. Events are retrieved using the\n`SF::Window.poll_event` and `SF::Window.wait_event` functions.\n\nA `SF::Event` instance contains the type of the event\n(mouse moved, key pressed, window closed, ...) as well\nas the details about this particular event. Please note that\nthe event parameters are defined in a union, which means that\nonly the member matching the type of the event will be properly\nfilled; all other members will have undefined values and must not\nbe read if the type of the event doesn't match. For example,\nif you received a KeyPressed event, then you must read the\nevent.key member, all other members such as event.mouse_move\nor event.text will have undefined values.\n\nUsage example:\n```\nwhile (event = window.poll_event())\n  case event\n  # Request for closing the window\n  when SF::Event::Closed\n    window.close()\n\n  # The escape key was pressed\n  when SF::Event::KeyPressed\n    if event.code == SF::Keyboard::Escape\n      window.close()\n    end\n\n  # The window was resized\n  when SF::Event::Resized\n    do_something(event.width, event.height)\n\n  # etc ...\n  end\nend\n```","summary":"<p>Defines a system event and its parameters</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1267","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Event/Closed","path":"SF/Event/Closed.html","kind":"struct","full_name":"SF::Event::Closed","name":"Closed","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1842,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"The window requested to be closed (no data)","summary":"<p>The window requested to be closed (no data)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/GainedFocus","path":"SF/Event/GainedFocus.html","kind":"struct","full_name":"SF::Event::GainedFocus","name":"GainedFocus","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1851,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"The window gained the focus (no data)","summary":"<p>The window gained the focus (no data)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickButtonEvent","path":"SF/Event/JoystickButtonEvent.html","kind":"struct","full_name":"SF::Event::JoystickButtonEvent","name":"JoystickButtonEvent","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1692,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickButtonPressed","kind":"struct","full_name":"SF::Event::JoystickButtonPressed","name":"JoystickButtonPressed"},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickButtonReleased","kind":"struct","full_name":"SF::Event::JoystickButtonReleased","name":"JoystickButtonReleased"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"Joystick buttons events parameters\n(JoystickButtonPressed, JoystickButtonReleased)","summary":"<p>Joystick buttons events parameters (JoystickButtonPressed, JoystickButtonReleased)</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1693","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"button:UInt32-instance-method","html_id":"button:UInt32-instance-method","name":"button","doc":"Index of the button that has been pressed (in range `0 ... Joystick::ButtonCount`)","summary":"<p>Index of the button that has been pressed (in range `0 ...</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1710","def":{"name":"button","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@button"}},{"id":"button=(button:Int)-instance-method","html_id":"button=(button:Int)-instance-method","name":"button=","doc":null,"summary":null,"abstract":false,"args":[{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"Int"}],"args_string":"(button : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1713","def":{"name":"button=","args":[{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@button = LibC::UInt.new(button)"}},{"id":"dup:JoystickButtonEvent-instance-method","html_id":"dup:JoystickButtonEvent-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : JoystickButtonEvent","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1726","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JoystickButtonEvent","visibility":"Public","body":"return JoystickButtonEvent.new(self)"}},{"id":"joystick_id:UInt32-instance-method","html_id":"joystick_id:UInt32-instance-method","name":"joystick_id","doc":"Index of the joystick (in range `0 ... Joystick::Count`)","summary":"<p>Index of the joystick (in range `0 ...</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1702","def":{"name":"joystick_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@joystick_id"}},{"id":"joystick_id=(joystick_id:Int)-instance-method","html_id":"joystick_id=(joystick_id:Int)-instance-method","name":"joystick_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"joystick_id","doc":null,"default_value":"","external_name":"joystick_id","restriction":"Int"}],"args_string":"(joystick_id : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1705","def":{"name":"joystick_id=","args":[{"name":"joystick_id","doc":null,"default_value":"","external_name":"joystick_id","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@joystick_id = LibC::UInt.new(joystick_id)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickButtonPressed","path":"SF/Event/JoystickButtonPressed.html","kind":"struct","full_name":"SF::Event::JoystickButtonPressed","name":"JoystickButtonPressed","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickButtonEvent","kind":"struct","full_name":"SF::Event::JoystickButtonEvent","name":"JoystickButtonEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickButtonEvent","kind":"struct","full_name":"SF::Event::JoystickButtonEvent","name":"JoystickButtonEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1884,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A joystick button was pressed (data in event.joystick_button)","summary":"<p>A joystick button was pressed (data in event.joystick_button)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickButtonReleased","path":"SF/Event/JoystickButtonReleased.html","kind":"struct","full_name":"SF::Event::JoystickButtonReleased","name":"JoystickButtonReleased","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickButtonEvent","kind":"struct","full_name":"SF::Event::JoystickButtonEvent","name":"JoystickButtonEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickButtonEvent","kind":"struct","full_name":"SF::Event::JoystickButtonEvent","name":"JoystickButtonEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1887,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A joystick button was released (data in event.joystick_button)","summary":"<p>A joystick button was released (data in event.joystick_button)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickConnected","path":"SF/Event/JoystickConnected.html","kind":"struct","full_name":"SF::Event::JoystickConnected","name":"JoystickConnected","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickConnectEvent","kind":"struct","full_name":"SF::Event::JoystickConnectEvent","name":"JoystickConnectEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickConnectEvent","kind":"struct","full_name":"SF::Event::JoystickConnectEvent","name":"JoystickConnectEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1893,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A joystick was connected (data in event.joystick_connect)","summary":"<p>A joystick was connected (data in event.joystick_connect)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickConnectEvent","path":"SF/Event/JoystickConnectEvent.html","kind":"struct","full_name":"SF::Event::JoystickConnectEvent","name":"JoystickConnectEvent","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1613,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickConnected","kind":"struct","full_name":"SF::Event::JoystickConnected","name":"JoystickConnected"},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickDisconnected","kind":"struct","full_name":"SF::Event::JoystickDisconnected","name":"JoystickDisconnected"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"Joystick connection events parameters\n(JoystickConnected, JoystickDisconnected)","summary":"<p>Joystick connection events parameters (JoystickConnected, JoystickDisconnected)</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1614","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:JoystickConnectEvent-instance-method","html_id":"dup:JoystickConnectEvent-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : JoystickConnectEvent","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1636","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JoystickConnectEvent","visibility":"Public","body":"return JoystickConnectEvent.new(self)"}},{"id":"joystick_id:UInt32-instance-method","html_id":"joystick_id:UInt32-instance-method","name":"joystick_id","doc":"Index of the joystick (in range `0 ... Joystick::Count`)","summary":"<p>Index of the joystick (in range `0 ...</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1621","def":{"name":"joystick_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@joystick_id"}},{"id":"joystick_id=(joystick_id:Int)-instance-method","html_id":"joystick_id=(joystick_id:Int)-instance-method","name":"joystick_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"joystick_id","doc":null,"default_value":"","external_name":"joystick_id","restriction":"Int"}],"args_string":"(joystick_id : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1624","def":{"name":"joystick_id=","args":[{"name":"joystick_id","doc":null,"default_value":"","external_name":"joystick_id","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@joystick_id = LibC::UInt.new(joystick_id)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickDisconnected","path":"SF/Event/JoystickDisconnected.html","kind":"struct","full_name":"SF::Event::JoystickDisconnected","name":"JoystickDisconnected","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickConnectEvent","kind":"struct","full_name":"SF::Event::JoystickConnectEvent","name":"JoystickConnectEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickConnectEvent","kind":"struct","full_name":"SF::Event::JoystickConnectEvent","name":"JoystickConnectEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1896,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A joystick was disconnected (data in event.joystick_connect)","summary":"<p>A joystick was disconnected (data in event.joystick_connect)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickMoved","path":"SF/Event/JoystickMoved.html","kind":"struct","full_name":"SF::Event::JoystickMoved","name":"JoystickMoved","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickMoveEvent","kind":"struct","full_name":"SF::Event::JoystickMoveEvent","name":"JoystickMoveEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickMoveEvent","kind":"struct","full_name":"SF::Event::JoystickMoveEvent","name":"JoystickMoveEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1890,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"The joystick moved along an axis (data in event.joystick_move)","summary":"<p>The joystick moved along an axis (data in event.joystick_move)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickMoveEvent","path":"SF/Event/JoystickMoveEvent.html","kind":"struct","full_name":"SF::Event::JoystickMoveEvent","name":"JoystickMoveEvent","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1641,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/JoystickMoved","kind":"struct","full_name":"SF::Event::JoystickMoved","name":"JoystickMoved"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"Joystick axis move event parameters (JoystickMoved)","summary":"<p>Joystick axis move event parameters (JoystickMoved)</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1642","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"axis:Joystick::Axis-instance-method","html_id":"axis:Joystick::Axis-instance-method","name":"axis","doc":"Axis on which the joystick moved","summary":"<p>Axis on which the joystick moved</p>","abstract":false,"args":[],"args_string":" : Joystick::Axis","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1661","def":{"name":"axis","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Joystick::Axis","visibility":"Public","body":"@axis"}},{"id":"axis=(axis:Joystick::Axis)-instance-method","html_id":"axis=(axis:Joystick::Axis)-instance-method","name":"axis=","doc":null,"summary":null,"abstract":false,"args":[{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Joystick::Axis"}],"args_string":"(axis : Joystick::Axis)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1664","def":{"name":"axis=","args":[{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Joystick::Axis"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@axis = axis"}},{"id":"dup:JoystickMoveEvent-instance-method","html_id":"dup:JoystickMoveEvent-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : JoystickMoveEvent","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1686","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JoystickMoveEvent","visibility":"Public","body":"return JoystickMoveEvent.new(self)"}},{"id":"joystick_id:UInt32-instance-method","html_id":"joystick_id:UInt32-instance-method","name":"joystick_id","doc":"Index of the joystick (in range `0 ... Joystick::Count`)","summary":"<p>Index of the joystick (in range `0 ...</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1653","def":{"name":"joystick_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@joystick_id"}},{"id":"joystick_id=(joystick_id:Int)-instance-method","html_id":"joystick_id=(joystick_id:Int)-instance-method","name":"joystick_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"joystick_id","doc":null,"default_value":"","external_name":"joystick_id","restriction":"Int"}],"args_string":"(joystick_id : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1656","def":{"name":"joystick_id=","args":[{"name":"joystick_id","doc":null,"default_value":"","external_name":"joystick_id","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@joystick_id = LibC::UInt.new(joystick_id)"}},{"id":"position:Float32-instance-method","html_id":"position:Float32-instance-method","name":"position","doc":"New position on the axis (in range `-100 .. 100`)","summary":"<p>New position on the axis (in range `-100 ..</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1669","def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"@position"}},{"id":"position=(position:Number)-instance-method","html_id":"position=(position:Number)-instance-method","name":"position=","doc":null,"summary":null,"abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Number"}],"args_string":"(position : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1672","def":{"name":"position=","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@position = LibC::Float.new(position)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/KeyEvent","path":"SF/Event/KeyEvent.html","kind":"struct","full_name":"SF::Event::KeyEvent","name":"KeyEvent","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1308,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/KeyPressed","kind":"struct","full_name":"SF::Event::KeyPressed","name":"KeyPressed"},{"html_id":"github.com/oprypin/crsfml/SF/Event/KeyReleased","kind":"struct","full_name":"SF::Event::KeyReleased","name":"KeyReleased"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"Keyboard event parameters (KeyPressed, KeyReleased)","summary":"<p>Keyboard event parameters (KeyPressed, KeyReleased)</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1309","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"alt:Bool-instance-method","html_id":"alt:Bool-instance-method","name":"alt","doc":"Is the Alt key pressed?","summary":"<p>Is the Alt key pressed?</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1332","def":{"name":"alt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@alt"}},{"id":"alt=(alt:Bool)-instance-method","html_id":"alt=(alt:Bool)-instance-method","name":"alt=","doc":null,"summary":null,"abstract":false,"args":[{"name":"alt","doc":null,"default_value":"","external_name":"alt","restriction":"Bool"}],"args_string":"(alt : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1335","def":{"name":"alt=","args":[{"name":"alt","doc":null,"default_value":"","external_name":"alt","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@alt = alt"}},{"id":"code:Keyboard::Key-instance-method","html_id":"code:Keyboard::Key-instance-method","name":"code","doc":"Code of the key that has been pressed","summary":"<p>Code of the key that has been pressed</p>","abstract":false,"args":[],"args_string":" : Keyboard::Key","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1324","def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Keyboard::Key","visibility":"Public","body":"@code"}},{"id":"code=(code:Keyboard::Key)-instance-method","html_id":"code=(code:Keyboard::Key)-instance-method","name":"code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"Keyboard::Key"}],"args_string":"(code : Keyboard::Key)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1327","def":{"name":"code=","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"Keyboard::Key"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@code = code"}},{"id":"control:Bool-instance-method","html_id":"control:Bool-instance-method","name":"control","doc":"Is the Control key pressed?","summary":"<p>Is the Control key pressed?</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1340","def":{"name":"control","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@control"}},{"id":"control=(control:Bool)-instance-method","html_id":"control=(control:Bool)-instance-method","name":"control=","doc":null,"summary":null,"abstract":false,"args":[{"name":"control","doc":null,"default_value":"","external_name":"control","restriction":"Bool"}],"args_string":"(control : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1343","def":{"name":"control=","args":[{"name":"control","doc":null,"default_value":"","external_name":"control","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@control = control"}},{"id":"dup:KeyEvent-instance-method","html_id":"dup:KeyEvent-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : KeyEvent","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1375","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"KeyEvent","visibility":"Public","body":"return KeyEvent.new(self)"}},{"id":"shift:Bool-instance-method","html_id":"shift:Bool-instance-method","name":"shift","doc":"Is the Shift key pressed?","summary":"<p>Is the Shift key pressed?</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1348","def":{"name":"shift","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@shift"}},{"id":"shift=(shift:Bool)-instance-method","html_id":"shift=(shift:Bool)-instance-method","name":"shift=","doc":null,"summary":null,"abstract":false,"args":[{"name":"shift","doc":null,"default_value":"","external_name":"shift","restriction":"Bool"}],"args_string":"(shift : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1351","def":{"name":"shift=","args":[{"name":"shift","doc":null,"default_value":"","external_name":"shift","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@shift = shift"}},{"id":"system:Bool-instance-method","html_id":"system:Bool-instance-method","name":"system","doc":"Is the System key pressed?","summary":"<p>Is the System key pressed?</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1356","def":{"name":"system","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@system"}},{"id":"system=(system:Bool)-instance-method","html_id":"system=(system:Bool)-instance-method","name":"system=","doc":null,"summary":null,"abstract":false,"args":[{"name":"system","doc":null,"default_value":"","external_name":"system","restriction":"Bool"}],"args_string":"(system : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1359","def":{"name":"system=","args":[{"name":"system","doc":null,"default_value":"","external_name":"system","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@system = system"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/KeyPressed","path":"SF/Event/KeyPressed.html","kind":"struct","full_name":"SF::Event::KeyPressed","name":"KeyPressed","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/KeyEvent","kind":"struct","full_name":"SF::Event::KeyEvent","name":"KeyEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/KeyEvent","kind":"struct","full_name":"SF::Event::KeyEvent","name":"KeyEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1857,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A key was pressed (data in event.key)","summary":"<p>A key was pressed (data in event.key)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/KeyReleased","path":"SF/Event/KeyReleased.html","kind":"struct","full_name":"SF::Event::KeyReleased","name":"KeyReleased","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/KeyEvent","kind":"struct","full_name":"SF::Event::KeyEvent","name":"KeyEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/KeyEvent","kind":"struct","full_name":"SF::Event::KeyEvent","name":"KeyEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1860,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A key was released (data in event.key)","summary":"<p>A key was released (data in event.key)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/LostFocus","path":"SF/Event/LostFocus.html","kind":"struct","full_name":"SF::Event::LostFocus","name":"LostFocus","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1848,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"The window lost the focus (no data)","summary":"<p>The window lost the focus (no data)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseButtonEvent","path":"SF/Event/MouseButtonEvent.html","kind":"struct","full_name":"SF::Event::MouseButtonEvent","name":"MouseButtonEvent","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1448,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseButtonPressed","kind":"struct","full_name":"SF::Event::MouseButtonPressed","name":"MouseButtonPressed"},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseButtonReleased","kind":"struct","full_name":"SF::Event::MouseButtonReleased","name":"MouseButtonReleased"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"Mouse buttons events parameters\n(MouseButtonPressed, MouseButtonReleased)","summary":"<p>Mouse buttons events parameters (MouseButtonPressed, MouseButtonReleased)</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1449","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"button:Mouse::Button-instance-method","html_id":"button:Mouse::Button-instance-method","name":"button","doc":"Code of the button that has been pressed","summary":"<p>Code of the button that has been pressed</p>","abstract":false,"args":[],"args_string":" : Mouse::Button","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1460","def":{"name":"button","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Mouse::Button","visibility":"Public","body":"@button"}},{"id":"button=(button:Mouse::Button)-instance-method","html_id":"button=(button:Mouse::Button)-instance-method","name":"button=","doc":null,"summary":null,"abstract":false,"args":[{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"Mouse::Button"}],"args_string":"(button : Mouse::Button)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1463","def":{"name":"button=","args":[{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"Mouse::Button"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@button = button"}},{"id":"dup:MouseButtonEvent-instance-method","html_id":"dup:MouseButtonEvent-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : MouseButtonEvent","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1493","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MouseButtonEvent","visibility":"Public","body":"return MouseButtonEvent.new(self)"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":"X position of the mouse pointer, relative to the left of the owner window","summary":"<p>X position of the mouse pointer, relative to the left of the owner window</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1468","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@x"}},{"id":"x=(x:Int)-instance-method","html_id":"x=(x:Int)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"args_string":"(x : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1471","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = LibC::Int.new(x)"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":"Y position of the mouse pointer, relative to the top of the owner window","summary":"<p>Y position of the mouse pointer, relative to the top of the owner window</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1476","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@y"}},{"id":"y=(y:Int)-instance-method","html_id":"y=(y:Int)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(y : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1479","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = LibC::Int.new(y)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseButtonPressed","path":"SF/Event/MouseButtonPressed.html","kind":"struct","full_name":"SF::Event::MouseButtonPressed","name":"MouseButtonPressed","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseButtonEvent","kind":"struct","full_name":"SF::Event::MouseButtonEvent","name":"MouseButtonEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseButtonEvent","kind":"struct","full_name":"SF::Event::MouseButtonEvent","name":"MouseButtonEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1869,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A mouse button was pressed (data in event.mouse_button)","summary":"<p>A mouse button was pressed (data in event.mouse_button)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseButtonReleased","path":"SF/Event/MouseButtonReleased.html","kind":"struct","full_name":"SF::Event::MouseButtonReleased","name":"MouseButtonReleased","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseButtonEvent","kind":"struct","full_name":"SF::Event::MouseButtonEvent","name":"MouseButtonEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseButtonEvent","kind":"struct","full_name":"SF::Event::MouseButtonEvent","name":"MouseButtonEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1872,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A mouse button was released (data in event.mouse_button)","summary":"<p>A mouse button was released (data in event.mouse_button)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseEntered","path":"SF/Event/MouseEntered.html","kind":"struct","full_name":"SF::Event::MouseEntered","name":"MouseEntered","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1878,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"The mouse cursor entered the area of the window (no data)","summary":"<p>The mouse cursor entered the area of the window (no data)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseLeft","path":"SF/Event/MouseLeft.html","kind":"struct","full_name":"SF::Event::MouseLeft","name":"MouseLeft","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1881,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"The mouse cursor left the area of the window (no data)","summary":"<p>The mouse cursor left the area of the window (no data)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseMoved","path":"SF/Event/MouseMoved.html","kind":"struct","full_name":"SF::Event::MouseMoved","name":"MouseMoved","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseMoveEvent","kind":"struct","full_name":"SF::Event::MouseMoveEvent","name":"MouseMoveEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseMoveEvent","kind":"struct","full_name":"SF::Event::MouseMoveEvent","name":"MouseMoveEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1875,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"The mouse cursor moved (data in event.mouse_move)","summary":"<p>The mouse cursor moved (data in event.mouse_move)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseMoveEvent","path":"SF/Event/MouseMoveEvent.html","kind":"struct","full_name":"SF::Event::MouseMoveEvent","name":"MouseMoveEvent","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1408,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseMoved","kind":"struct","full_name":"SF::Event::MouseMoved","name":"MouseMoved"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"Mouse move event parameters (MouseMoved)","summary":"<p>Mouse move event parameters (MouseMoved)</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1409","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:MouseMoveEvent-instance-method","html_id":"dup:MouseMoveEvent-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : MouseMoveEvent","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1442","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MouseMoveEvent","visibility":"Public","body":"return MouseMoveEvent.new(self)"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":"X position of the mouse pointer, relative to the left of the owner window","summary":"<p>X position of the mouse pointer, relative to the left of the owner window</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1418","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@x"}},{"id":"x=(x:Int)-instance-method","html_id":"x=(x:Int)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"args_string":"(x : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1421","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = LibC::Int.new(x)"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":"Y position of the mouse pointer, relative to the top of the owner window","summary":"<p>Y position of the mouse pointer, relative to the top of the owner window</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1426","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@y"}},{"id":"y=(y:Int)-instance-method","html_id":"y=(y:Int)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(y : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1429","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = LibC::Int.new(y)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseWheelEvent","path":"SF/Event/MouseWheelEvent.html","kind":"struct","full_name":"SF::Event::MouseWheelEvent","name":"MouseWheelEvent","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1501,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseWheelMoved","kind":"struct","full_name":"SF::Event::MouseWheelMoved","name":"MouseWheelMoved"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"Mouse wheel events parameters (MouseWheelMoved)\n\nDEPRECATED: This event is deprecated and potentially inaccurate.\nUse MouseWheelScrollEvent instead.","summary":"<p>Mouse wheel events parameters (MouseWheelMoved)</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1502","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"delta:Int32-instance-method","html_id":"delta:Int32-instance-method","name":"delta","doc":"Number of ticks the wheel has moved (positive is up, negative is down)","summary":"<p>Number of ticks the wheel has moved (positive is up, negative is down)</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1513","def":{"name":"delta","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@delta"}},{"id":"delta=(delta:Int)-instance-method","html_id":"delta=(delta:Int)-instance-method","name":"delta=","doc":null,"summary":null,"abstract":false,"args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Int"}],"args_string":"(delta : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1516","def":{"name":"delta=","args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@delta = LibC::Int.new(delta)"}},{"id":"dup:MouseWheelEvent-instance-method","html_id":"dup:MouseWheelEvent-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : MouseWheelEvent","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1546","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MouseWheelEvent","visibility":"Public","body":"return MouseWheelEvent.new(self)"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":"X position of the mouse pointer, relative to the left of the owner window","summary":"<p>X position of the mouse pointer, relative to the left of the owner window</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1521","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@x"}},{"id":"x=(x:Int)-instance-method","html_id":"x=(x:Int)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"args_string":"(x : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1524","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = LibC::Int.new(x)"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":"Y position of the mouse pointer, relative to the top of the owner window","summary":"<p>Y position of the mouse pointer, relative to the top of the owner window</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1529","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@y"}},{"id":"y=(y:Int)-instance-method","html_id":"y=(y:Int)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(y : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1532","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = LibC::Int.new(y)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseWheelMoved","path":"SF/Event/MouseWheelMoved.html","kind":"struct","full_name":"SF::Event::MouseWheelMoved","name":"MouseWheelMoved","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseWheelEvent","kind":"struct","full_name":"SF::Event::MouseWheelEvent","name":"MouseWheelEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseWheelEvent","kind":"struct","full_name":"SF::Event::MouseWheelEvent","name":"MouseWheelEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1863,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"The mouse wheel was scrolled (data in event.mouse_wheel) (deprecated)","summary":"<p>The mouse wheel was scrolled (data in event.mouse_wheel) (deprecated)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseWheelScrolled","path":"SF/Event/MouseWheelScrolled.html","kind":"struct","full_name":"SF::Event::MouseWheelScrolled","name":"MouseWheelScrolled","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseWheelScrollEvent","kind":"struct","full_name":"SF::Event::MouseWheelScrollEvent","name":"MouseWheelScrollEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseWheelScrollEvent","kind":"struct","full_name":"SF::Event::MouseWheelScrollEvent","name":"MouseWheelScrollEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1866,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"The mouse wheel was scrolled (data in event.mouse_wheel_scroll)","summary":"<p>The mouse wheel was scrolled (data in event.mouse_wheel_scroll)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseWheelScrollEvent","path":"SF/Event/MouseWheelScrollEvent.html","kind":"struct","full_name":"SF::Event::MouseWheelScrollEvent","name":"MouseWheelScrollEvent","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1551,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/MouseWheelScrolled","kind":"struct","full_name":"SF::Event::MouseWheelScrolled","name":"MouseWheelScrolled"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"Mouse wheel events parameters (MouseWheelScrolled)","summary":"<p>Mouse wheel events parameters (MouseWheelScrolled)</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1552","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"delta:Float32-instance-method","html_id":"delta:Float32-instance-method","name":"delta","doc":"Wheel offset (positive is up/left, negative is down/right). High-precision mice may use non-integral offsets.","summary":"<p>Wheel offset (positive is up/left, negative is down/right).</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1573","def":{"name":"delta","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"@delta"}},{"id":"delta=(delta:Number)-instance-method","html_id":"delta=(delta:Number)-instance-method","name":"delta=","doc":null,"summary":null,"abstract":false,"args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Number"}],"args_string":"(delta : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1576","def":{"name":"delta=","args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@delta = LibC::Float.new(delta)"}},{"id":"dup:MouseWheelScrollEvent-instance-method","html_id":"dup:MouseWheelScrollEvent-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : MouseWheelScrollEvent","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1607","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MouseWheelScrollEvent","visibility":"Public","body":"return MouseWheelScrollEvent.new(self)"}},{"id":"wheel:Mouse::Wheel-instance-method","html_id":"wheel:Mouse::Wheel-instance-method","name":"wheel","doc":"Which wheel (for mice with multiple ones)","summary":"<p>Which wheel (for mice with multiple ones)</p>","abstract":false,"args":[],"args_string":" : Mouse::Wheel","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1565","def":{"name":"wheel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Mouse::Wheel","visibility":"Public","body":"@wheel"}},{"id":"wheel=(wheel:Mouse::Wheel)-instance-method","html_id":"wheel=(wheel:Mouse::Wheel)-instance-method","name":"wheel=","doc":null,"summary":null,"abstract":false,"args":[{"name":"wheel","doc":null,"default_value":"","external_name":"wheel","restriction":"Mouse::Wheel"}],"args_string":"(wheel : Mouse::Wheel)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1568","def":{"name":"wheel=","args":[{"name":"wheel","doc":null,"default_value":"","external_name":"wheel","restriction":"Mouse::Wheel"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@wheel = wheel"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":"X position of the mouse pointer, relative to the left of the owner window","summary":"<p>X position of the mouse pointer, relative to the left of the owner window</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1581","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@x"}},{"id":"x=(x:Int)-instance-method","html_id":"x=(x:Int)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"args_string":"(x : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1584","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = LibC::Int.new(x)"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":"Y position of the mouse pointer, relative to the top of the owner window","summary":"<p>Y position of the mouse pointer, relative to the top of the owner window</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1589","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@y"}},{"id":"y=(y:Int)-instance-method","html_id":"y=(y:Int)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(y : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1592","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = LibC::Int.new(y)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/Resized","path":"SF/Event/Resized.html","kind":"struct","full_name":"SF::Event::Resized","name":"Resized","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/SizeEvent","kind":"struct","full_name":"SF::Event::SizeEvent","name":"SizeEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/SizeEvent","kind":"struct","full_name":"SF::Event::SizeEvent","name":"SizeEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1845,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"The window was resized (data in event.size)","summary":"<p>The window was resized (data in event.size)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/SensorChanged","path":"SF/Event/SensorChanged.html","kind":"struct","full_name":"SF::Event::SensorChanged","name":"SensorChanged","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/SensorEvent","kind":"struct","full_name":"SF::Event::SensorEvent","name":"SensorEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/SensorEvent","kind":"struct","full_name":"SF::Event::SensorEvent","name":"SensorEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1908,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A sensor value changed (data in event.sensor)","summary":"<p>A sensor value changed (data in event.sensor)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/SensorEvent","path":"SF/Event/SensorEvent.html","kind":"struct","full_name":"SF::Event::SensorEvent","name":"SensorEvent","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1781,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/SensorChanged","kind":"struct","full_name":"SF::Event::SensorChanged","name":"SensorChanged"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"Sensor event parameters (SensorChanged)","summary":"<p>Sensor event parameters (SensorChanged)</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1782","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:SensorEvent-instance-method","html_id":"dup:SensorEvent-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : SensorEvent","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1837","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SensorEvent","visibility":"Public","body":"return SensorEvent.new(self)"}},{"id":"type:Sensor::Type-instance-method","html_id":"type:Sensor::Type-instance-method","name":"type","doc":"Type of the sensor","summary":"<p>Type of the sensor</p>","abstract":false,"args":[],"args_string":" : Sensor::Type","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1795","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Sensor::Type","visibility":"Public","body":"@type"}},{"id":"type=(type:Sensor::Type)-instance-method","html_id":"type=(type:Sensor::Type)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Sensor::Type"}],"args_string":"(type : Sensor::Type)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1798","def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Sensor::Type"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = type"}},{"id":"x:Float32-instance-method","html_id":"x:Float32-instance-method","name":"x","doc":"Current value of the sensor on X axis","summary":"<p>Current value of the sensor on X axis</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1803","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"@x"}},{"id":"x=(x:Number)-instance-method","html_id":"x=(x:Number)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"}],"args_string":"(x : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1806","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = LibC::Float.new(x)"}},{"id":"y:Float32-instance-method","html_id":"y:Float32-instance-method","name":"y","doc":"Current value of the sensor on Y axis","summary":"<p>Current value of the sensor on Y axis</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1811","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"@y"}},{"id":"y=(y:Number)-instance-method","html_id":"y=(y:Number)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"args_string":"(y : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1814","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = LibC::Float.new(y)"}},{"id":"z:Float32-instance-method","html_id":"z:Float32-instance-method","name":"z","doc":"Current value of the sensor on Z axis","summary":"<p>Current value of the sensor on Z axis</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1819","def":{"name":"z","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"@z"}},{"id":"z=(z:Number)-instance-method","html_id":"z=(z:Number)-instance-method","name":"z=","doc":null,"summary":null,"abstract":false,"args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"args_string":"(z : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1822","def":{"name":"z=","args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@z = LibC::Float.new(z)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/SizeEvent","path":"SF/Event/SizeEvent.html","kind":"struct","full_name":"SF::Event::SizeEvent","name":"SizeEvent","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1269,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/Resized","kind":"struct","full_name":"SF::Event::Resized","name":"Resized"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"Size events parameters (Resized)","summary":"<p>Size events parameters (Resized)</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1270","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:SizeEvent-instance-method","html_id":"dup:SizeEvent-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : SizeEvent","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1303","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SizeEvent","visibility":"Public","body":"return SizeEvent.new(self)"}},{"id":"height:UInt32-instance-method","html_id":"height:UInt32-instance-method","name":"height","doc":"New height, in pixels","summary":"<p>New height, in pixels</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1287","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@height"}},{"id":"height=(height:Int)-instance-method","html_id":"height=(height:Int)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"}],"args_string":"(height : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1290","def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height = LibC::UInt.new(height)"}},{"id":"width:UInt32-instance-method","html_id":"width:UInt32-instance-method","name":"width","doc":"New width, in pixels","summary":"<p>New width, in pixels</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1279","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@width"}},{"id":"width=(width:Int)-instance-method","html_id":"width=(width:Int)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"}],"args_string":"(width : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1282","def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width = LibC::UInt.new(width)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/TextEntered","path":"SF/Event/TextEntered.html","kind":"struct","full_name":"SF::Event::TextEntered","name":"TextEntered","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/TextEvent","kind":"struct","full_name":"SF::Event::TextEvent","name":"TextEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/TextEvent","kind":"struct","full_name":"SF::Event::TextEvent","name":"TextEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1854,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A character was entered (data in event.text)","summary":"<p>A character was entered (data in event.text)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/TextEvent","path":"SF/Event/TextEvent.html","kind":"struct","full_name":"SF::Event::TextEvent","name":"TextEvent","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1380,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/TextEntered","kind":"struct","full_name":"SF::Event::TextEntered","name":"TextEntered"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"Text event parameters (TextEntered)","summary":"<p>Text event parameters (TextEntered)</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1381","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:TextEvent-instance-method","html_id":"dup:TextEvent-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : TextEvent","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1403","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TextEvent","visibility":"Public","body":"return TextEvent.new(self)"}},{"id":"unicode:UInt32-instance-method","html_id":"unicode:UInt32-instance-method","name":"unicode","doc":"UTF-32 Unicode value of the character","summary":"<p>UTF-32 Unicode value of the character</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1388","def":{"name":"unicode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@unicode"}},{"id":"unicode=(unicode:Int)-instance-method","html_id":"unicode=(unicode:Int)-instance-method","name":"unicode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"unicode","doc":null,"default_value":"","external_name":"unicode","restriction":"Int"}],"args_string":"(unicode : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1391","def":{"name":"unicode=","args":[{"name":"unicode","doc":null,"default_value":"","external_name":"unicode","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@unicode = UInt32.new(unicode)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchBegan","path":"SF/Event/TouchBegan.html","kind":"struct","full_name":"SF::Event::TouchBegan","name":"TouchBegan","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchEvent","kind":"struct","full_name":"SF::Event::TouchEvent","name":"TouchEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchEvent","kind":"struct","full_name":"SF::Event::TouchEvent","name":"TouchEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1899,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A touch event began (data in event.touch)","summary":"<p>A touch event began (data in event.touch)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchEnded","path":"SF/Event/TouchEnded.html","kind":"struct","full_name":"SF::Event::TouchEnded","name":"TouchEnded","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchEvent","kind":"struct","full_name":"SF::Event::TouchEvent","name":"TouchEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchEvent","kind":"struct","full_name":"SF::Event::TouchEvent","name":"TouchEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1905,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A touch event ended (data in event.touch)","summary":"<p>A touch event ended (data in event.touch)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchEvent","path":"SF/Event/TouchEvent.html","kind":"struct","full_name":"SF::Event::TouchEvent","name":"TouchEvent","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1731,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchBegan","kind":"struct","full_name":"SF::Event::TouchBegan","name":"TouchBegan"},{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchEnded","kind":"struct","full_name":"SF::Event::TouchEnded","name":"TouchEnded"},{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchMoved","kind":"struct","full_name":"SF::Event::TouchMoved","name":"TouchMoved"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"Touch events parameters (TouchBegan, TouchMoved, TouchEnded)","summary":"<p>Touch events parameters (TouchBegan, TouchMoved, TouchEnded)</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1732","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:TouchEvent-instance-method","html_id":"dup:TouchEvent-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : TouchEvent","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1776","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TouchEvent","visibility":"Public","body":"return TouchEvent.new(self)"}},{"id":"finger:UInt32-instance-method","html_id":"finger:UInt32-instance-method","name":"finger","doc":"Index of the finger in case of multi-touch events","summary":"<p>Index of the finger in case of multi-touch events</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1743","def":{"name":"finger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@finger"}},{"id":"finger=(finger:Int)-instance-method","html_id":"finger=(finger:Int)-instance-method","name":"finger=","doc":null,"summary":null,"abstract":false,"args":[{"name":"finger","doc":null,"default_value":"","external_name":"finger","restriction":"Int"}],"args_string":"(finger : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1746","def":{"name":"finger=","args":[{"name":"finger","doc":null,"default_value":"","external_name":"finger","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@finger = LibC::UInt.new(finger)"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":"X position of the touch, relative to the left of the owner window","summary":"<p>X position of the touch, relative to the left of the owner window</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1751","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@x"}},{"id":"x=(x:Int)-instance-method","html_id":"x=(x:Int)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"args_string":"(x : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1754","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = LibC::Int.new(x)"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":"Y position of the touch, relative to the top of the owner window","summary":"<p>Y position of the touch, relative to the top of the owner window</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1759","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@y"}},{"id":"y=(y:Int)-instance-method","html_id":"y=(y:Int)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(y : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1762","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = LibC::Int.new(y)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchMoved","path":"SF/Event/TouchMoved.html","kind":"struct","full_name":"SF::Event::TouchMoved","name":"TouchMoved","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchEvent","kind":"struct","full_name":"SF::Event::TouchEvent","name":"TouchEvent"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Event/TouchEvent","kind":"struct","full_name":"SF::Event::TouchEvent","name":"TouchEvent"},{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1902,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Event","kind":"struct","full_name":"SF::Event","name":"Event"},"doc":"A touch moved (data in event.touch)","summary":"<p>A touch moved (data in event.touch)</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/FileInputStream","path":"SF/FileInputStream.html","kind":"class","full_name":"SF::FileInputStream","name":"FileInputStream","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/InputStream","kind":"class","full_name":"SF::InputStream","name":"InputStream"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/SF/InputStream","kind":"class","full_name":"SF::InputStream","name":"InputStream"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"system/obj.cr","line_number":499,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Implementation of input stream based on a file\n\nThis class is a specialization of InputStream that\nreads from a file on disk.\n\nIt wraps a file in the common InputStream interface\nand therefore allows to use generic classes or functions\nthat accept such a stream, with a file on disk as the data\nsource.\n\nIn addition to the virtual functions inherited from\nInputStream, FileInputStream adds a function to\nspecify the file to open.\n\nSFML resource classes can usually be loaded directly from\na filename, so this class shouldn't be useful to you unless\nyou create your own algorithms that operate on an InputStream.\n\nUsage example:\n```\ndef process(stream : InputStream)\nend\n\nstream = SF::FileInputStream.open(\"some_file.dat\")\nprocess(stream)\n```\n\nInputStream, MemoryInputStream","summary":"<p>Implementation of input stream based on a file</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L502","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"open(*args,**kwargs):self-class-method","html_id":"open(*args,**kwargs):self-class-method","name":"open","doc":"Shorthand for `file_input_stream = FileInputStream.new; file_input_stream.open(...); file_input_stream`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>file_input_stream = <a href=\"../SF/FileInputStream.html#new-class-method\">FileInputStream.new</a>; file_input_stream<a href=\"../SF/FileInputStream.html#open(*args,**kwargs):self-class-method\">.open(...)</a>; file_input_stream</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L523","def":{"name":"open","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.open(*args, **kwargs))\n  raise(InitError.new(\"FileInputStream.open failed\"))\nend\nobj\n"}}],"instance_methods":[{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Default destructor","summary":"<p>Default destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L507","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_fileinputstream_finalize(to_unsafe)\nSFMLExt.sfml_fileinputstream_free(@this)\n"}},{"id":"open(filename:String):Bool-instance-method","html_id":"open(filename:String):Bool-instance-method","name":"open","doc":"Open the stream from a file path\n\n* *filename* - Name of the file to open\n\n*Returns:* True on success, false on error","summary":"<p>Open the stream from a file path</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L516","def":{"name":"open","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_fileinputstream_open_zkC(to_unsafe, filename.bytesize, filename, out result)\nreturn result\n"}},{"id":"read(data:Slice):Int64-instance-method","html_id":"read(data:Slice):Int64-instance-method","name":"read","doc":"Read data from the stream\n\nAfter reading, the stream's reading position must be\nadvanced by the amount of bytes read.\n\n* *data* - Buffer where to copy the read data\n\n*Returns:* The number of bytes actually read, or -1 on error","summary":"<p>Read data from the stream</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice) : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L538","def":{"name":"read","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"SFMLExt.sfml_fileinputstream_read_xALG4x(to_unsafe, data, data.bytesize, out result)\nreturn result\n"}},{"id":"seek(position:Int):Int64-instance-method","html_id":"seek(position:Int):Int64-instance-method","name":"seek","doc":"Change the current reading position\n\n* *position* - The position to seek to, from the beginning\n\n*Returns:* The position actually sought to, or -1 on error","summary":"<p>Change the current reading position</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"args_string":"(position : Int) : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L547","def":{"name":"seek","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"SFMLExt.sfml_fileinputstream_seek_G4x(to_unsafe, Int64.new(position), out result)\nreturn result\n"}},{"id":"size:Int64-instance-method","html_id":"size:Int64-instance-method","name":"size","doc":"Return the size of the stream\n\n*Returns:* The total number of bytes available in the stream, or -1 on error","summary":"<p>Return the size of the stream</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L561","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"SFMLExt.sfml_fileinputstream_getsize(to_unsafe, out result)\nreturn result\n"}},{"id":"tell:Int64-instance-method","html_id":"tell:Int64-instance-method","name":"tell","doc":"Get the current reading position in the stream\n\n*Returns:* The current position, or -1 on error.","summary":"<p>Get the current reading position in the stream</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L554","def":{"name":"tell","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"SFMLExt.sfml_fileinputstream_tell(to_unsafe, out result)\nreturn result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/FloatRect","path":"SF/FloatRect.html","kind":"alias","full_name":"SF::FloatRect","name":"FloatRect","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"graphics/graphics.cr","line_number":114,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":true,"aliased":"SF::Rect(Float32)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Font","path":"SF/Font.html","kind":"class","full_name":"SF::Font","name":"Font","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":3655,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Class for loading and manipulating character fonts\n\nFonts can be loaded from a file, from memory or from a custom\nstream, and supports the most common types of fonts. See\nthe load_from_file function for the complete list of supported formats.\n\nOnce it is loaded, a `SF::Font` instance provides three\ntypes of information about the font:\n* Global metrics, such as the line spacing\n* Per-glyph metrics, such as bounding box or kerning\n* Pixel representation of glyphs\n\nFonts alone are not very useful: they hold the font data\nbut cannot make anything useful of it. To do so you need to\nuse the `SF::Text` class, which is able to properly output text\nwith several options such as character size, style, color,\nposition, rotation, etc.\nThis separation allows more flexibility and better performances:\nindeed a `SF::Font` is a heavy resource, and any operation on it\nis slow (often too slow for real-time applications). On the other\nside, a `SF::Text` is a lightweight object which can combine the\nglyphs data and metrics of a `SF::Font` to display any text on a\nrender target.\nNote that it is also possible to bind several `SF::Text` instances\nto the same `SF::Font`.\n\nIt is important to note that the `SF::Text` instance doesn't\ncopy the font that it uses, it only keeps a reference to it.\nThus, a `SF::Font` must not be destructed while it is\nused by a `SF::Text` (i.e. never write a function that\nuses a local `SF::Font` instance for creating a text).\n\nUsage example:\n```\n# Load a new font from file\nfont = SF::Font.from_file(\"arial.ttf\")\n\n# Create a text which uses our font\ntext1 = SF::Text.new(\"text\", font, 30)\n\n# Create another text using the same font, but with different parameters\ntext2 = SF::Text.new\ntext2.font = font\ntext2.character_size = 50\ntext2.style = SF::Text::Italic\n```\n\nApart from loading font files, and passing them to instances\nof `SF::Text`, you should normally not have to deal directly\nwith this class. However, it may be useful to access the\nfont metrics or rasterized glyphs for advanced usage.\n\nNote that if the font is a bitmap font, it is not scalable,\nthus not all requested sizes will be available to use. This\nneeds to be taken into consideration when using `SF::Text`.\nIf you need to display text of a certain size, make sure the\ncorresponding bitmap font that supports that size is used.\n\n*See also:* `SF::Text`","summary":"<p>Class for loading and manipulating character fonts</p>","class_methods":[],"constructors":[{"id":"from_file(*args,**kwargs):self-class-method","html_id":"from_file(*args,**kwargs):self-class-method","name":"from_file","doc":"Shorthand for `font = Font.new; font.load_from_file(...); font`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>font = <a href=\"../SF/Font.html#new-class-method\">Font.new</a>; font<a href=\"../SF/Font.html#load_from_file(filename:String):Bool-instance-method\">.load_from_file(...)</a>; font</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3731","def":{"name":"from_file","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_file(*args, **kwargs))\n  raise(InitError.new(\"Font.load_from_file failed\"))\nend\nobj\n"}},{"id":"from_memory(*args,**kwargs):self-class-method","html_id":"from_memory(*args,**kwargs):self-class-method","name":"from_memory","doc":"Shorthand for `font = Font.new; font.load_from_memory(...); font`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>font = <a href=\"../SF/Font.html#new-class-method\">Font.new</a>; font<a href=\"../SF/Font.html#load_from_memory(data:Slice):Bool-instance-method\">.load_from_memory(...)</a>; font</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3760","def":{"name":"from_memory","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_memory(*args, **kwargs))\n  raise(InitError.new(\"Font.load_from_memory failed\"))\nend\nobj\n"}},{"id":"from_stream(*args,**kwargs):self-class-method","html_id":"from_stream(*args,**kwargs):self-class-method","name":"from_stream","doc":"Shorthand for `font = Font.new; font.load_from_stream(...); font`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>font = <a href=\"../SF/Font.html#new-class-method\">Font.new</a>; font<a href=\"../SF/Font.html#load_from_stream(stream:InputStream):Bool-instance-method\">.load_from_stream(...)</a>; font</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3791","def":{"name":"from_stream","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_stream(*args, **kwargs))\n  raise(InitError.new(\"Font.load_from_stream failed\"))\nend\nobj\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nThis constructor defines an empty font","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3696","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:Font-instance-method","html_id":"dup:Font-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Font","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3907","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Font","visibility":"Public","body":"return Font.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor\n\nCleans up all the internal resources used by the font","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3703","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_font_finalize(to_unsafe)\nSFMLExt.sfml_font_free(@this)\n"}},{"id":"get_glyph(code_point:Int,character_size:Int,bold:Bool,outline_thickness:Number=0):Glyph-instance-method","html_id":"get_glyph(code_point:Int,character_size:Int,bold:Bool,outline_thickness:Number=0):Glyph-instance-method","name":"get_glyph","doc":"Retrieve a glyph of the font\n\nIf the font is a bitmap font, not all character sizes\nmight be available. If the glyph is not available at the\nrequested size, an empty glyph is returned.\n\nBe aware that using a negative value for the outline\nthickness will cause distorted rendering.\n\n* *code_point* - Unicode code point of the character to get\n* *character_size* - Reference character size\n* *bold* - Retrieve the bold version or the regular one?\n* *outline_thickness* - Thickness of outline (when != 0 the glyph will not be filled)\n\n*Returns:* The glyph corresponding to *code_point* and *character_size*","summary":"<p>Retrieve a glyph of the font</p>","abstract":false,"args":[{"name":"code_point","doc":null,"default_value":"","external_name":"code_point","restriction":"Int"},{"name":"character_size","doc":null,"default_value":"","external_name":"character_size","restriction":"Int"},{"name":"bold","doc":null,"default_value":"","external_name":"bold","restriction":"Bool"},{"name":"outline_thickness","doc":null,"default_value":"0","external_name":"outline_thickness","restriction":"Number"}],"args_string":"(code_point : Int, character_size : Int, bold : Bool, outline_thickness : Number = <span class=\"n\">0</span>) : Glyph","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3820","def":{"name":"get_glyph","args":[{"name":"code_point","doc":null,"default_value":"","external_name":"code_point","restriction":"Int"},{"name":"character_size","doc":null,"default_value":"","external_name":"character_size","restriction":"Int"},{"name":"bold","doc":null,"default_value":"","external_name":"bold","restriction":"Bool"},{"name":"outline_thickness","doc":null,"default_value":"0","external_name":"outline_thickness","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Glyph","visibility":"Public","body":"result = Glyph.allocate\nSFMLExt.sfml_font_getglyph_saLemSGZqBw9(to_unsafe, UInt32.new(code_point), LibC::UInt.new(character_size), bold, LibC::Float.new(outline_thickness), result)\nreturn result\n"}},{"id":"get_kerning(first:Int,second:Int,character_size:Int):Float32-instance-method","html_id":"get_kerning(first:Int,second:Int,character_size:Int):Float32-instance-method","name":"get_kerning","doc":"Get the kerning offset of two glyphs\n\nThe kerning is an extra offset (negative) to apply between two\nglyphs when rendering them, to make the pair look more \"natural\".\nFor example, the pair \"AV\" have a special kerning to make them\ncloser than other characters. Most of the glyphs pairs have a\nkerning offset of zero, though.\n\n* *first* - Unicode code point of the first character\n* *second* - Unicode code point of the second character\n* *character_size* - Reference character size\n\n*Returns:* Kerning value for *first* and *second,* in pixels","summary":"<p>Get the kerning offset of two glyphs</p>","abstract":false,"args":[{"name":"first","doc":null,"default_value":"","external_name":"first","restriction":"Int"},{"name":"second","doc":null,"default_value":"","external_name":"second","restriction":"Int"},{"name":"character_size","doc":null,"default_value":"","external_name":"character_size","restriction":"Int"}],"args_string":"(first : Int, second : Int, character_size : Int) : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3838","def":{"name":"get_kerning","args":[{"name":"first","doc":null,"default_value":"","external_name":"first","restriction":"Int"},{"name":"second","doc":null,"default_value":"","external_name":"second","restriction":"Int"},{"name":"character_size","doc":null,"default_value":"","external_name":"character_size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_font_getkerning_saLsaLemS(to_unsafe, UInt32.new(first), UInt32.new(second), LibC::UInt.new(character_size), out result)\nreturn result\n"}},{"id":"get_line_spacing(character_size:Int):Float32-instance-method","html_id":"get_line_spacing(character_size:Int):Float32-instance-method","name":"get_line_spacing","doc":"Get the line spacing\n\nLine spacing is the vertical offset to apply between two\nconsecutive lines of text.\n\n* *character_size* - Reference character size\n\n*Returns:* Line spacing, in pixels","summary":"<p>Get the line spacing</p>","abstract":false,"args":[{"name":"character_size","doc":null,"default_value":"","external_name":"character_size","restriction":"Int"}],"args_string":"(character_size : Int) : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3850","def":{"name":"get_line_spacing","args":[{"name":"character_size","doc":null,"default_value":"","external_name":"character_size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_font_getlinespacing_emS(to_unsafe, LibC::UInt.new(character_size), out result)\nreturn result\n"}},{"id":"get_texture(character_size:Int):Texture-instance-method","html_id":"get_texture(character_size:Int):Texture-instance-method","name":"get_texture","doc":"Retrieve the texture containing the loaded glyphs of a certain size\n\nThe contents of the returned texture changes as more glyphs\nare requested, thus it is not very relevant. It is mainly\nused internally by `SF::Text`.\n\n* *character_size* - Reference character size\n\n*Returns:* Texture containing the glyphs of the requested size","summary":"<p>Retrieve the texture containing the loaded glyphs of a certain size</p>","abstract":false,"args":[{"name":"character_size","doc":null,"default_value":"","external_name":"character_size","restriction":"Int"}],"args_string":"(character_size : Int) : Texture","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3890","def":{"name":"get_texture","args":[{"name":"character_size","doc":null,"default_value":"","external_name":"character_size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Texture","visibility":"Public","body":"SFMLExt.sfml_font_gettexture_emS(to_unsafe, LibC::UInt.new(character_size), out result)\nreturn Texture::Reference.new(result, self)\n"}},{"id":"get_underline_position(character_size:Int):Float32-instance-method","html_id":"get_underline_position(character_size:Int):Float32-instance-method","name":"get_underline_position","doc":"Get the position of the underline\n\nUnderline position is the vertical offset to apply between the\nbaseline and the underline.\n\n* *character_size* - Reference character size\n\n*Returns:* Underline position, in pixels\n\n*See also:* `underline_thickness`","summary":"<p>Get the position of the underline</p>","abstract":false,"args":[{"name":"character_size","doc":null,"default_value":"","external_name":"character_size","restriction":"Int"}],"args_string":"(character_size : Int) : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3864","def":{"name":"get_underline_position","args":[{"name":"character_size","doc":null,"default_value":"","external_name":"character_size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_font_getunderlineposition_emS(to_unsafe, LibC::UInt.new(character_size), out result)\nreturn result\n"}},{"id":"get_underline_thickness(character_size:Int):Float32-instance-method","html_id":"get_underline_thickness(character_size:Int):Float32-instance-method","name":"get_underline_thickness","doc":"Get the thickness of the underline\n\nUnderline thickness is the vertical size of the underline.\n\n* *character_size* - Reference character size\n\n*Returns:* Underline thickness, in pixels\n\n*See also:* `underline_position`","summary":"<p>Get the thickness of the underline</p>","abstract":false,"args":[{"name":"character_size","doc":null,"default_value":"","external_name":"character_size","restriction":"Int"}],"args_string":"(character_size : Int) : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3877","def":{"name":"get_underline_thickness","args":[{"name":"character_size","doc":null,"default_value":"","external_name":"character_size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_font_getunderlinethickness_emS(to_unsafe, LibC::UInt.new(character_size), out result)\nreturn result\n"}},{"id":"info:Font::Info-instance-method","html_id":"info:Font::Info-instance-method","name":"info","doc":"Get the font information\n\n*Returns:* A structure that holds the font information","summary":"<p>Get the font information</p>","abstract":false,"args":[],"args_string":" : Font::Info","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3801","def":{"name":"info","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Font::Info","visibility":"Public","body":"SFMLExt.sfml_font_getinfo(to_unsafe, out result)\nreturn Font::Info::Reference.new(result, self)\n"}},{"id":"load_from_file(filename:String):Bool-instance-method","html_id":"load_from_file(filename:String):Bool-instance-method","name":"load_from_file","doc":"Load the font from a file\n\nThe supported font formats are: TrueType, Type 1, CFF,\nOpenType, SFNT, X11 PCF, Windows FNT, BDF, PFR and Type 42.\nNote that this function knows nothing about the standard\nfonts installed on the user's system, thus you can't\nload them directly.\n\n*Warning:* SFML cannot preload all the font data in this\nfunction, so the file has to remain accessible until\nthe `SF::Font` object loads a new font or is destroyed.\n\n* *filename* - Path of the font file to load\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_memory`, `load_from_stream`","summary":"<p>Load the font from a file</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3724","def":{"name":"load_from_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_font_loadfromfile_zkC(to_unsafe, filename.bytesize, filename, out result)\nreturn result\n"}},{"id":"load_from_memory(data:Slice):Bool-instance-method","html_id":"load_from_memory(data:Slice):Bool-instance-method","name":"load_from_memory","doc":"Load the font from a file in memory\n\nThe supported font formats are: TrueType, Type 1, CFF,\nOpenType, SFNT, X11 PCF, Windows FNT, BDF, PFR and Type 42.\n\n*Warning:* SFML cannot preload all the font data in this\nfunction, so the buffer pointed by *data* has to remain\nvalid until the `SF::Font` object loads a new font or\nis destroyed.\n\n* *data* - Slice containing the file data in memory\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_file`, `load_from_stream`","summary":"<p>Load the font from a file in memory</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3753","def":{"name":"load_from_memory","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_font_loadfrommemory_5h8vgv(to_unsafe, data, data.bytesize, out result)\nreturn result\n"}},{"id":"load_from_stream(stream:InputStream):Bool-instance-method","html_id":"load_from_stream(stream:InputStream):Bool-instance-method","name":"load_from_stream","doc":"Load the font from a custom stream\n\nThe supported font formats are: TrueType, Type 1, CFF,\nOpenType, SFNT, X11 PCF, Windows FNT, BDF, PFR and Type 42.\nWarning: SFML cannot preload all the font data in this\nfunction, so the contents of *stream* have to remain\nvalid as long as the font is used.\n\n*Warning:* SFML cannot preload all the font data in this\nfunction, so the stream has to remain accessible until\nthe `SF::Font` object loads a new font or is destroyed.\n\n* *stream* - Source stream to read from\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_file`, `load_from_memory`","summary":"<p>Load the font from a custom stream</p>","abstract":false,"args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"InputStream"}],"args_string":"(stream : InputStream) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3784","def":{"name":"load_from_stream","args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"InputStream"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_font_loadfromstream_PO0(to_unsafe, stream, out result)\nreturn result\n"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Font/Info","path":"SF/Font/Info.html","kind":"class","full_name":"SF::Font::Info","name":"Info","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":3658,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Font","kind":"class","full_name":"SF::Font","name":"Font"},"doc":"Holds various information about a font","summary":"<p>Holds various information about a font</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3660","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:Info-instance-method","html_id":"dup:Info-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Info","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3689","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Info","visibility":"Public","body":"return Info.new(self)"}},{"id":"family:String-instance-method","html_id":"family:String-instance-method","name":"family","doc":"The font family","summary":"<p>The font family</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3669","def":{"name":"family","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"SFMLExt.sfml_font_info_getfamily(to_unsafe, out result)\nreturn String.new(result)\n"}},{"id":"family=(family:String)-instance-method","html_id":"family=(family:String)-instance-method","name":"family=","doc":null,"summary":null,"abstract":false,"args":[{"name":"family","doc":null,"default_value":"","external_name":"family","restriction":"String"}],"args_string":"(family : String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3673","def":{"name":"family=","args":[{"name":"family","doc":null,"default_value":"","external_name":"family","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_font_info_setfamily_Fzm(to_unsafe, family.bytesize, family)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3664","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_font_info_finalize(to_unsafe)\nSFMLExt.sfml_font_info_free(@this)\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/Ftp","path":"SF/Ftp.html","kind":"class","full_name":"SF::Ftp","name":"Ftp","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":429,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"A FTP client\n\n`SF::Ftp` is a very simple FTP client that allows you\nto communicate with a FTP server. The FTP protocol allows\nyou to manipulate a remote file system (list files,\nupload, download, create, remove, ...).\n\nUsing the FTP client consists of 4 parts:\n* Connecting to the FTP server\n* Logging in (either as a registered user or anonymously)\n* Sending commands to the server\n* Disconnecting (this part can be done implicitly by the destructor)\n\nEvery command returns a FTP response, which contains the\nstatus code as well as a message from the server. Some\ncommands such as working_directory() and directory_listing()\nreturn additional data, and use a class derived from\n`SF::Ftp::Response` to provide this data. The most often used\ncommands are directly provided as member functions, but it is\nalso possible to use specific commands with the send_command() function.\n\nNote that response statuses &gt;= 1000 are not part of the FTP standard,\nthey are generated by SFML when an internal error occurs.\n\nAll commands, especially upload and download, may take some\ntime to complete. This is important to know if you don't want\nto block your application while the server is completing\nthe task.\n\nUsage example:\n```\n# Create a new FTP client\nftp = SF::Ftp.new\n\n# Connect to the server\nresponse = ftp.connect(\"ftp://ftp.myserver.com\")\nif response.ok?\n  puts \"Connected\"\nend\n\n# Log in\nresponse = ftp.login(\"laurent\", \"dF6Zm89D\")\nif response.ok?\n  puts \"Logged in\"\nend\n\n# Print the working directory\ndirectory = ftp.working_directory()\nif directory.ok?\n  puts \"Working directory: #{directory.directory}\"\nend\n\n# Create a new directory\nresponse = ftp.create_directory \"files\"\nif response.ok?\n  puts \"Created new directory\"\nend\n\n# Upload a file to this new directory\nresponse = ftp.upload(\"local-path/file.txt\", \"files\", SF::Ftp::Ascii)\nif response.ok?)\n  puts \"File uploaded\"\nend\n\n# Send specific commands (here: FEAT to list supported FTP features)\nresponse = ftp.send_command \"FEAT\"\nif response.ok?\n  puts \"Feature list:\\n#{response.message}\"\nend\n\n# Disconnect from the server\nftp.disconnect()\n```","summary":"<p>A FTP client</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L431","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"change_directory(directory:String):Ftp::Response-instance-method","html_id":"change_directory(directory:String):Ftp::Response-instance-method","name":"change_directory","doc":"Change the current working directory\n\nThe new directory must be relative to the current one.\n\n* *directory* - New working directory\n\n*Returns:* Server response to the request\n\n*See also:* `working_directory`, `directory_listing`, `parent_directory`","summary":"<p>Change the current working directory</p>","abstract":false,"args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":"String"}],"args_string":"(directory : String) : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L818","def":{"name":"change_directory","args":[{"name":"directory","doc":null,"default_value":"","external_name":"directory","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_changedirectory_zkC(to_unsafe, directory.bytesize, directory, result)\nreturn result\n"}},{"id":"connect(server:IpAddress,port:Int=21,timeout:Time=Time::Zero):Ftp::Response-instance-method","html_id":"connect(server:IpAddress,port:Int=21,timeout:Time=Time::Zero):Ftp::Response-instance-method","name":"connect","doc":"Connect to the specified FTP server\n\nThe port has a default value of 21, which is the standard\nport used by the FTP protocol. You shouldn't use a different\nvalue, unless you really know what you do.\nThis function tries to connect to the server so it may take\na while to complete, especially if the server is not\nreachable. To avoid blocking your application for too long,\nyou can use a timeout. The default value, Time::Zero, means that the\nsystem timeout will be used (which is usually pretty long).\n\n* *server* - Name or address of the FTP server to connect to\n* *port* - Port used for the connection\n* *timeout* - Maximum time to wait\n\n*Returns:* Server response to the request\n\n*See also:* `disconnect`","summary":"<p>Connect to the specified FTP server</p>","abstract":false,"args":[{"name":"server","doc":null,"default_value":"","external_name":"server","restriction":"IpAddress"},{"name":"port","doc":null,"default_value":"21","external_name":"port","restriction":"Int"},{"name":"timeout","doc":null,"default_value":"Time::Zero","external_name":"timeout","restriction":"Time"}],"args_string":"(server : IpAddress, port : Int = <span class=\"n\">21</span>, timeout : Time = <span class=\"t\">Time</span><span class=\"t\">::</span><span class=\"t\">Zero</span>) : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L728","def":{"name":"connect","args":[{"name":"server","doc":null,"default_value":"","external_name":"server","restriction":"IpAddress"},{"name":"port","doc":null,"default_value":"21","external_name":"port","restriction":"Int"},{"name":"timeout","doc":null,"default_value":"Time::Zero","external_name":"timeout","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_connect_BfEbxif4T(to_unsafe, server, LibC::UShort.new(port), timeout, result)\nreturn result\n"}},{"id":"create_directory(name:String):Ftp::Response-instance-method","html_id":"create_directory(name:String):Ftp::Response-instance-method","name":"create_directory","doc":"Create a new directory\n\nThe new directory is created as a child of the current\nworking directory.\n\n* *name* - Name of the directory to create\n\n*Returns:* Server response to the request\n\n*See also:* `delete_directory`","summary":"<p>Create a new directory</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L843","def":{"name":"create_directory","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_createdirectory_zkC(to_unsafe, name.bytesize, name, result)\nreturn result\n"}},{"id":"delete_directory(name:String):Ftp::Response-instance-method","html_id":"delete_directory(name:String):Ftp::Response-instance-method","name":"delete_directory","doc":"Remove an existing directory\n\nThe directory to remove must be relative to the\ncurrent working directory.\nUse this function with caution, the directory will\nbe removed permanently!\n\n* *name* - Name of the directory to remove\n\n*Returns:* Server response to the request\n\n*See also:* `create_directory`","summary":"<p>Remove an existing directory</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L860","def":{"name":"delete_directory","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_deletedirectory_zkC(to_unsafe, name.bytesize, name, result)\nreturn result\n"}},{"id":"delete_file(name:String):Ftp::Response-instance-method","html_id":"delete_file(name:String):Ftp::Response-instance-method","name":"delete_file","doc":"Remove an existing file\n\nThe file name must be relative to the current working\ndirectory.\nUse this function with caution, the file will be\nremoved permanently!\n\n* *name* - File to remove\n\n*Returns:* Server response to the request\n\n*See also:* `rename_file`","summary":"<p>Remove an existing file</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L893","def":{"name":"delete_file","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_deletefile_zkC(to_unsafe, name.bytesize, name, result)\nreturn result\n"}},{"id":"disconnect:Ftp::Response-instance-method","html_id":"disconnect:Ftp::Response-instance-method","name":"disconnect","doc":"Close the connection with the server\n\n*Returns:* Server response to the request\n\n*See also:* `connect`","summary":"<p>Close the connection with the server</p>","abstract":false,"args":[],"args_string":" : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L738","def":{"name":"disconnect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_disconnect(to_unsafe, result)\nreturn result\n"}},{"id":"download(remote_file:String,local_path:String,mode:Ftp::TransferMode=Binary):Ftp::Response-instance-method","html_id":"download(remote_file:String,local_path:String,mode:Ftp::TransferMode=Binary):Ftp::Response-instance-method","name":"download","doc":"Download a file from the server\n\nThe filename of the distant file is relative to the\ncurrent working directory of the server, and the local\ndestination path is relative to the current directory\nof your application.\nIf a file with the same filename as the distant file\nalready exists in the local destination path, it will\nbe overwritten.\n\n* *remote_file* - Filename of the distant file to download\n* *local_path* - The directory in which to put the file on the local computer\n* *mode* - Transfer mode\n\n*Returns:* Server response to the request\n\n*See also:* `upload`","summary":"<p>Download a file from the server</p>","abstract":false,"args":[{"name":"remote_file","doc":null,"default_value":"","external_name":"remote_file","restriction":"String"},{"name":"local_path","doc":null,"default_value":"","external_name":"local_path","restriction":"String"},{"name":"mode","doc":null,"default_value":"Binary","external_name":"mode","restriction":"Ftp::TransferMode"}],"args_string":"(remote_file : String, local_path : String, mode : Ftp::TransferMode = <span class=\"t\">Binary</span>) : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L915","def":{"name":"download","args":[{"name":"remote_file","doc":null,"default_value":"","external_name":"remote_file","restriction":"String"},{"name":"local_path","doc":null,"default_value":"","external_name":"local_path","restriction":"String"},{"name":"mode","doc":null,"default_value":"Binary","external_name":"mode","restriction":"Ftp::TransferMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_download_zkCzkCJP8(to_unsafe, remote_file.bytesize, remote_file, local_path.bytesize, local_path, mode, result)\nreturn result\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor\n\nAutomatically closes the connection with the server if\nit is still opened.","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L706","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_ftp_finalize(to_unsafe)\nSFMLExt.sfml_ftp_free(@this)\n"}},{"id":"get_directory_listing(directory:String=&quot;&quot;):Ftp::ListingResponse-instance-method","html_id":"get_directory_listing(directory:String=&amp;quot;&amp;quot;):Ftp::ListingResponse-instance-method","name":"get_directory_listing","doc":"Get the contents of the given directory\n\nThis function retrieves the sub-directories and files\ncontained in the given directory. It is not recursive.\nThe *directory* parameter is relative to the current\nworking directory.\n\n* *directory* - Directory to list\n\n*Returns:* Server response to the request\n\n*See also:* `working_directory`, `change_directory`, `parent_directory`","summary":"<p>Get the contents of the given directory</p>","abstract":false,"args":[{"name":"directory","doc":null,"default_value":"\"\"","external_name":"directory","restriction":"String"}],"args_string":"(directory : String = <span class=\"s\">&quot;&quot;</span>) : Ftp::ListingResponse","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L804","def":{"name":"get_directory_listing","args":[{"name":"directory","doc":null,"default_value":"\"\"","external_name":"directory","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::ListingResponse","visibility":"Public","body":"result = Ftp::ListingResponse.new\nSFMLExt.sfml_ftp_getdirectorylisting_zkC(to_unsafe, directory.bytesize, directory, result)\nreturn result\n"}},{"id":"keep_alive:Ftp::Response-instance-method","html_id":"keep_alive:Ftp::Response-instance-method","name":"keep_alive","doc":"Send a null command to keep the connection alive\n\nThis command is useful because the server may close the\nconnection automatically if no command is sent.\n\n*Returns:* Server response to the request","summary":"<p>Send a null command to keep the connection alive</p>","abstract":false,"args":[],"args_string":" : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L774","def":{"name":"keep_alive","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_keepalive(to_unsafe, result)\nreturn result\n"}},{"id":"login:Ftp::Response-instance-method","html_id":"login:Ftp::Response-instance-method","name":"login","doc":"Log in using an anonymous account\n\nLogging in is mandatory after connecting to the server.\nUsers that are not logged in cannot perform any operation.\n\n*Returns:* Server response to the request","summary":"<p>Log in using an anonymous account</p>","abstract":false,"args":[],"args_string":" : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L749","def":{"name":"login","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_login(to_unsafe, result)\nreturn result\n"}},{"id":"login(name:String,password:String):Ftp::Response-instance-method","html_id":"login(name:String,password:String):Ftp::Response-instance-method","name":"login","doc":"Log in using a username and a password\n\nLogging in is mandatory after connecting to the server.\nUsers that are not logged in cannot perform any operation.\n\n* *name* - User name\n* *password* - Password\n\n*Returns:* Server response to the request","summary":"<p>Log in using a username and a password</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"args_string":"(name : String, password : String) : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L763","def":{"name":"login","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_login_zkCzkC(to_unsafe, name.bytesize, name, password.bytesize, password, result)\nreturn result\n"}},{"id":"parent_directory:Ftp::Response-instance-method","html_id":"parent_directory:Ftp::Response-instance-method","name":"parent_directory","doc":"Go to the parent directory of the current one\n\n*Returns:* Server response to the request\n\n*See also:* `working_directory`, `directory_listing`, `change_directory`","summary":"<p>Go to the parent directory of the current one</p>","abstract":false,"args":[],"args_string":" : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L828","def":{"name":"parent_directory","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_parentdirectory(to_unsafe, result)\nreturn result\n"}},{"id":"rename_file(file:String,new_name:String):Ftp::Response-instance-method","html_id":"rename_file(file:String,new_name:String):Ftp::Response-instance-method","name":"rename_file","doc":"Rename an existing file\n\nThe filenames must be relative to the current working\ndirectory.\n\n* *file* - File to rename\n* *new_name* - New name of the file\n\n*Returns:* Server response to the request\n\n*See also:* `delete_file`","summary":"<p>Rename an existing file</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"},{"name":"new_name","doc":null,"default_value":"","external_name":"new_name","restriction":"String"}],"args_string":"(file : String, new_name : String) : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L876","def":{"name":"rename_file","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"},{"name":"new_name","doc":null,"default_value":"","external_name":"new_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_renamefile_zkCzkC(to_unsafe, file.bytesize, file, new_name.bytesize, new_name, result)\nreturn result\n"}},{"id":"send_command(command:String,parameter:String=&quot;&quot;):Ftp::Response-instance-method","html_id":"send_command(command:String,parameter:String=&amp;quot;&amp;quot;):Ftp::Response-instance-method","name":"send_command","doc":"Send a command to the FTP server\n\nWhile the most often used commands are provided as member\nfunctions in the `SF::Ftp` class, this method can be used\nto send any FTP command to the server. If the command\nrequires one or more parameters, they can be specified\nin *parameter.* If the server returns information, you\ncan extract it from the response using Response.message().\n\n* *command* - Command to send\n* *parameter* - Command parameter\n\n*Returns:* Server response to the request","summary":"<p>Send a command to the FTP server</p>","abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"parameter","doc":null,"default_value":"\"\"","external_name":"parameter","restriction":"String"}],"args_string":"(command : String, parameter : String = <span class=\"s\">&quot;&quot;</span>) : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L956","def":{"name":"send_command","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"},{"name":"parameter","doc":null,"default_value":"\"\"","external_name":"parameter","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_sendcommand_zkCzkC(to_unsafe, command.bytesize, command, parameter.bytesize, parameter, result)\nreturn result\n"}},{"id":"upload(local_file:String,remote_path:String,mode:Ftp::TransferMode=Binary,append:Bool=false):Ftp::Response-instance-method","html_id":"upload(local_file:String,remote_path:String,mode:Ftp::TransferMode=Binary,append:Bool=false):Ftp::Response-instance-method","name":"upload","doc":"Upload a file to the server\n\nThe name of the local file is relative to the current\nworking directory of your application, and the\nremote path is relative to the current directory of the\nFTP server.\n\nThe append parameter controls whether the remote file is\nappended to or overwritten if it already exists.\n\n* *local_file* - Path of the local file to upload\n* *remote_path* - The directory in which to put the file on the server\n* *mode* - Transfer mode\n* *append* - Pass true to append to or false to overwrite the remote file if it already exists\n\n*Returns:* Server response to the request\n\n*See also:* `download`","summary":"<p>Upload a file to the server</p>","abstract":false,"args":[{"name":"local_file","doc":null,"default_value":"","external_name":"local_file","restriction":"String"},{"name":"remote_path","doc":null,"default_value":"","external_name":"remote_path","restriction":"String"},{"name":"mode","doc":null,"default_value":"Binary","external_name":"mode","restriction":"Ftp::TransferMode"},{"name":"append","doc":null,"default_value":"false","external_name":"append","restriction":"Bool"}],"args_string":"(local_file : String, remote_path : String, mode : Ftp::TransferMode = <span class=\"t\">Binary</span>, append : Bool = <span class=\"n\">false</span>) : Ftp::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L938","def":{"name":"upload","args":[{"name":"local_file","doc":null,"default_value":"","external_name":"local_file","restriction":"String"},{"name":"remote_path","doc":null,"default_value":"","external_name":"remote_path","restriction":"String"},{"name":"mode","doc":null,"default_value":"Binary","external_name":"mode","restriction":"Ftp::TransferMode"},{"name":"append","doc":null,"default_value":"false","external_name":"append","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response","visibility":"Public","body":"result = Ftp::Response.new\nSFMLExt.sfml_ftp_upload_zkCzkCJP8GZq(to_unsafe, local_file.bytesize, local_file, remote_path.bytesize, remote_path, mode, append, result)\nreturn result\n"}},{"id":"working_directory:Ftp::DirectoryResponse-instance-method","html_id":"working_directory:Ftp::DirectoryResponse-instance-method","name":"working_directory","doc":"Get the current working directory\n\nThe working directory is the root path for subsequent\noperations involving directories and/or filenames.\n\n*Returns:* Server response to the request\n\n*See also:* `directory_listing`, `change_directory`, `parent_directory`","summary":"<p>Get the current working directory</p>","abstract":false,"args":[],"args_string":" : Ftp::DirectoryResponse","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L787","def":{"name":"working_directory","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::DirectoryResponse","visibility":"Public","body":"result = Ftp::DirectoryResponse.new\nSFMLExt.sfml_ftp_getworkingdirectory(to_unsafe, result)\nreturn result\n"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Ftp/DirectoryResponse","path":"SF/Ftp/DirectoryResponse.html","kind":"class","full_name":"SF::Ftp::DirectoryResponse","name":"DirectoryResponse","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Ftp/Response","kind":"class","full_name":"SF::Ftp::Response","name":"Response"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Ftp/Response","kind":"class","full_name":"SF::Ftp::Response","name":"Response"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":595,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Ftp","kind":"class","full_name":"SF::Ftp","name":"Ftp"},"doc":"Specialization of FTP response returning a directory","summary":"<p>Specialization of FTP response returning a directory</p>","class_methods":[],"constructors":[{"id":"new(response:Ftp::Response)-class-method","html_id":"new(response:Ftp::Response)-class-method","name":"new","doc":"Default constructor\n\n* *response* - Source response","summary":"<p>Default constructor</p>","abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Ftp::Response"}],"args_string":"(response : Ftp::Response)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L604","def":{"name":"new","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Ftp::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"directory:String-instance-method","html_id":"directory:String-instance-method","name":"directory","doc":"Get the directory returned in the response\n\n*Returns:* Directory name","summary":"<p>Get the directory returned in the response</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L611","def":{"name":"directory","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"SFMLExt.sfml_ftp_directoryresponse_getdirectory(to_unsafe, out result)\nreturn String.new(result)\n"}},{"id":"dup:DirectoryResponse-instance-method","html_id":"dup:DirectoryResponse-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : DirectoryResponse","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L643","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DirectoryResponse","visibility":"Public","body":"return DirectoryResponse.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L597","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_ftp_directoryresponse_finalize(to_unsafe)\nSFMLExt.sfml_ftp_directoryresponse_free(@this)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Ftp/ListingResponse","path":"SF/Ftp/ListingResponse.html","kind":"class","full_name":"SF::Ftp::ListingResponse","name":"ListingResponse","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Ftp/Response","kind":"class","full_name":"SF::Ftp::Response","name":"Response"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Ftp/Response","kind":"class","full_name":"SF::Ftp::Response","name":"Response"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":649,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Ftp","kind":"class","full_name":"SF::Ftp","name":"Ftp"},"doc":"Specialization of FTP response returning a\nfilename listing","summary":"<p>Specialization of FTP response returning a filename listing</p>","class_methods":[],"constructors":[{"id":"new(response:Ftp::Response,data:String)-class-method","html_id":"new(response:Ftp::Response,data:String)-class-method","name":"new","doc":"Default constructor\n\n* *response* - Source response\n* *data* - Data containing the raw listing","summary":"<p>Default constructor</p>","abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Ftp::Response"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"args_string":"(response : Ftp::Response, data : String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L659","def":{"name":"new","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Ftp::Response"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(response, data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:ListingResponse-instance-method","html_id":"dup:ListingResponse-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : ListingResponse","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L698","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ListingResponse","visibility":"Public","body":"return ListingResponse.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L651","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_ftp_listingresponse_finalize(to_unsafe)\nSFMLExt.sfml_ftp_listingresponse_free(@this)\n"}},{"id":"listing:Array(String)-instance-method","html_id":"listing:Array(String)-instance-method","name":"listing","doc":"Return the array of directory/file names\n\n*Returns:* Array containing the requested listing","summary":"<p>Return the array of directory/file names</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L666","def":{"name":"listing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"SFMLExt.sfml_ftp_listingresponse_getlisting(to_unsafe, out result, out result_size)\nreturn Array.new(result_size.to_i) do |i|\n  String.new(result[i])\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Ftp/Response","path":"SF/Ftp/Response.html","kind":"class","full_name":"SF::Ftp::Response","name":"Response","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":446,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Ftp/DirectoryResponse","kind":"class","full_name":"SF::Ftp::DirectoryResponse","name":"DirectoryResponse"},{"html_id":"github.com/oprypin/crsfml/SF/Ftp/ListingResponse","kind":"class","full_name":"SF::Ftp::ListingResponse","name":"ListingResponse"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Ftp","kind":"class","full_name":"SF::Ftp","name":"Ftp"},"doc":"Define a FTP response","summary":"<p>Define a FTP response</p>","class_methods":[],"constructors":[{"id":"new(code:Ftp::Response::Status=InvalidResponse,message:String=&quot;&quot;)-class-method","html_id":"new(code:Ftp::Response::Status=InvalidResponse,message:String=&amp;quot;&amp;quot;)-class-method","name":"new","doc":"Default constructor\n\nThis constructor is used by the FTP client to build\nthe response.\n\n* *code* - Response status code\n* *message* - Response message","summary":"<p>Default constructor</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"InvalidResponse","external_name":"code","restriction":"Ftp::Response::Status"},{"name":"message","doc":null,"default_value":"\"\"","external_name":"message","restriction":"String"}],"args_string":"(code : Ftp::Response::Status = <span class=\"t\">InvalidResponse</span>, message : String = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L549","def":{"name":"new","args":[{"name":"code","doc":null,"default_value":"InvalidResponse","external_name":"code","restriction":"Ftp::Response::Status"},{"name":"message","doc":null,"default_value":"\"\"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(code, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:Response-instance-method","html_id":"dup:Response-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L590","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Response","visibility":"Public","body":"return Response.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L448","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_ftp_response_finalize(to_unsafe)\nSFMLExt.sfml_ftp_response_free(@this)\n"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":"Get the full message contained in the response\n\n*Returns:* The response message","summary":"<p>Get the full message contained in the response</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L573","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"SFMLExt.sfml_ftp_response_getmessage(to_unsafe, out result)\nreturn String.new(result)\n"}},{"id":"ok?:Bool-instance-method","html_id":"ok?:Bool-instance-method","name":"ok?","doc":"Check if the status code means a success\n\nThis function is defined for convenience, it is\nequivalent to testing if the status code is &lt; 400.\n\n*Returns:* True if the status is a success, false if it is a failure","summary":"<p>Check if the status code means a success</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L559","def":{"name":"ok?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_ftp_response_isok(to_unsafe, out result)\nreturn result\n"}},{"id":"status:Ftp::Response::Status-instance-method","html_id":"status:Ftp::Response::Status-instance-method","name":"status","doc":"Get the status code of the response\n\n*Returns:* Status code","summary":"<p>Get the status code of the response</p>","abstract":false,"args":[],"args_string":" : Ftp::Response::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L566","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ftp::Response::Status","visibility":"Public","body":"SFMLExt.sfml_ftp_response_getstatus(to_unsafe, out result)\nreturn Ftp::Response::Status.new(result)\n"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Ftp/Response/Status","path":"SF/Ftp/Response/Status.html","kind":"enum","full_name":"SF::Ftp::Response::Status","name":"Status","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":453,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"RestartMarkerReply","name":"RestartMarkerReply","value":"110","doc":"Restart marker reply","summary":"<p>Restart marker reply</p>"},{"id":"ServiceReadySoon","name":"ServiceReadySoon","value":"120","doc":"Service ready in N minutes","summary":"<p>Service ready in N minutes</p>"},{"id":"DataConnectionAlreadyOpened","name":"DataConnectionAlreadyOpened","value":"125","doc":"Data connection already opened, transfer starting","summary":"<p>Data connection already opened, transfer starting</p>"},{"id":"OpeningDataConnection","name":"OpeningDataConnection","value":"150","doc":"File status ok, about to open data connection","summary":"<p>File status ok, about to open data connection</p>"},{"id":"Ok","name":"Ok","value":"200","doc":"Command ok","summary":"<p>Command ok</p>"},{"id":"PointlessCommand","name":"PointlessCommand","value":"202","doc":"Command not implemented","summary":"<p>Command not implemented</p>"},{"id":"SystemStatus","name":"SystemStatus","value":"211","doc":"System status, or system help reply","summary":"<p>System status, or system help reply</p>"},{"id":"DirectoryStatus","name":"DirectoryStatus","value":"212","doc":"Directory status","summary":"<p>Directory status</p>"},{"id":"FileStatus","name":"FileStatus","value":"213","doc":"File status","summary":"<p>File status</p>"},{"id":"HelpMessage","name":"HelpMessage","value":"214","doc":"Help message","summary":"<p>Help message</p>"},{"id":"SystemType","name":"SystemType","value":"215","doc":"NAME system type, where NAME is an official system name from the list in the Assigned Numbers document","summary":"<p>NAME system type, where NAME is an official system name from the list in the Assigned Numbers document</p>"},{"id":"ServiceReady","name":"ServiceReady","value":"220","doc":"Service ready for new user","summary":"<p>Service ready for new user</p>"},{"id":"ClosingConnection","name":"ClosingConnection","value":"221","doc":"Service closing control connection","summary":"<p>Service closing control connection</p>"},{"id":"DataConnectionOpened","name":"DataConnectionOpened","value":"225","doc":"Data connection open, no transfer in progress","summary":"<p>Data connection open, no transfer in progress</p>"},{"id":"ClosingDataConnection","name":"ClosingDataConnection","value":"226","doc":"Closing data connection, requested file action successful","summary":"<p>Closing data connection, requested file action successful</p>"},{"id":"EnteringPassiveMode","name":"EnteringPassiveMode","value":"227","doc":"Entering passive mode","summary":"<p>Entering passive mode</p>"},{"id":"LoggedIn","name":"LoggedIn","value":"230","doc":"User logged in, proceed. Logged out if appropriate","summary":"<p>User logged in, proceed.</p>"},{"id":"FileActionOk","name":"FileActionOk","value":"250","doc":"Requested file action ok","summary":"<p>Requested file action ok</p>"},{"id":"DirectoryOk","name":"DirectoryOk","value":"257","doc":"PATHNAME created","summary":"<p>PATHNAME created</p>"},{"id":"NeedPassword","name":"NeedPassword","value":"331","doc":"User name ok, need password","summary":"<p>User name ok, need password</p>"},{"id":"NeedAccountToLogIn","name":"NeedAccountToLogIn","value":"332","doc":"Need account for login","summary":"<p>Need account for login</p>"},{"id":"NeedInformation","name":"NeedInformation","value":"350","doc":"Requested file action pending further information","summary":"<p>Requested file action pending further information</p>"},{"id":"ServiceUnavailable","name":"ServiceUnavailable","value":"421","doc":"Service not available, closing control connection","summary":"<p>Service not available, closing control connection</p>"},{"id":"DataConnectionUnavailable","name":"DataConnectionUnavailable","value":"425","doc":"Can't open data connection","summary":"<p>Can't open data connection</p>"},{"id":"TransferAborted","name":"TransferAborted","value":"426","doc":"Connection closed, transfer aborted","summary":"<p>Connection closed, transfer aborted</p>"},{"id":"FileActionAborted","name":"FileActionAborted","value":"450","doc":"Requested file action not taken","summary":"<p>Requested file action not taken</p>"},{"id":"LocalError","name":"LocalError","value":"451","doc":"Requested action aborted, local error in processing","summary":"<p>Requested action aborted, local error in processing</p>"},{"id":"InsufficientStorageSpace","name":"InsufficientStorageSpace","value":"452","doc":"Requested action not taken; insufficient storage space in system, file unavailable","summary":"<p>Requested action not taken; insufficient storage space in system, file unavailable</p>"},{"id":"CommandUnknown","name":"CommandUnknown","value":"500","doc":"Syntax error, command unrecognized","summary":"<p>Syntax error, command unrecognized</p>"},{"id":"ParametersUnknown","name":"ParametersUnknown","value":"501","doc":"Syntax error in parameters or arguments","summary":"<p>Syntax error in parameters or arguments</p>"},{"id":"CommandNotImplemented","name":"CommandNotImplemented","value":"502","doc":"Command not implemented","summary":"<p>Command not implemented</p>"},{"id":"BadCommandSequence","name":"BadCommandSequence","value":"503","doc":"Bad sequence of commands","summary":"<p>Bad sequence of commands</p>"},{"id":"ParameterNotImplemented","name":"ParameterNotImplemented","value":"504","doc":"Command not implemented for that parameter","summary":"<p>Command not implemented for that parameter</p>"},{"id":"NotLoggedIn","name":"NotLoggedIn","value":"530","doc":"Not logged in","summary":"<p>Not logged in</p>"},{"id":"NeedAccountToStore","name":"NeedAccountToStore","value":"532","doc":"Need account for storing files","summary":"<p>Need account for storing files</p>"},{"id":"FileUnavailable","name":"FileUnavailable","value":"550","doc":"Requested action not taken, file unavailable","summary":"<p>Requested action not taken, file unavailable</p>"},{"id":"PageTypeUnknown","name":"PageTypeUnknown","value":"551","doc":"Requested action aborted, page type unknown","summary":"<p>Requested action aborted, page type unknown</p>"},{"id":"NotEnoughMemory","name":"NotEnoughMemory","value":"552","doc":"Requested file action aborted, exceeded storage allocation","summary":"<p>Requested file action aborted, exceeded storage allocation</p>"},{"id":"FilenameNotAllowed","name":"FilenameNotAllowed","value":"553","doc":"Requested action not taken, file name not allowed","summary":"<p>Requested action not taken, file name not allowed</p>"},{"id":"InvalidResponse","name":"InvalidResponse","value":"1000","doc":"Not part of the FTP standard, generated by SFML when a received response cannot be parsed","summary":"<p>Not part of the FTP standard, generated by SFML when a received response cannot be parsed</p>"},{"id":"ConnectionFailed","name":"ConnectionFailed","value":"1001","doc":"Not part of the FTP standard, generated by SFML when the low-level socket connection with the server fails","summary":"<p>Not part of the FTP standard, generated by SFML when the low-level socket connection with the server fails</p>"},{"id":"ConnectionClosed","name":"ConnectionClosed","value":"1002","doc":"Not part of the FTP standard, generated by SFML when the low-level socket connection is unexpectedly closed","summary":"<p>Not part of the FTP standard, generated by SFML when the low-level socket connection is unexpectedly closed</p>"},{"id":"InvalidFile","name":"InvalidFile","value":"1003","doc":"Not part of the FTP standard, generated by SFML when a local file cannot be read or written","summary":"<p>Not part of the FTP standard, generated by SFML when a local file cannot be read or written</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Ftp/Response","kind":"class","full_name":"SF::Ftp::Response","name":"Response"},"doc":"Status codes possibly returned by a FTP response","summary":"<p>Status codes possibly returned by a FTP response</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"bad_command_sequence?-instance-method","html_id":"bad_command_sequence?-instance-method","name":"bad_command_sequence?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L517","def":{"name":"bad_command_sequence?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == BadCommandSequence"}},{"id":"closing_connection?-instance-method","html_id":"closing_connection?-instance-method","name":"closing_connection?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L479","def":{"name":"closing_connection?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ClosingConnection"}},{"id":"closing_data_connection?-instance-method","html_id":"closing_data_connection?-instance-method","name":"closing_data_connection?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L483","def":{"name":"closing_data_connection?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ClosingDataConnection"}},{"id":"command_not_implemented?-instance-method","html_id":"command_not_implemented?-instance-method","name":"command_not_implemented?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L515","def":{"name":"command_not_implemented?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CommandNotImplemented"}},{"id":"command_unknown?-instance-method","html_id":"command_unknown?-instance-method","name":"command_unknown?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L511","def":{"name":"command_unknown?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CommandUnknown"}},{"id":"connection_closed?-instance-method","html_id":"connection_closed?-instance-method","name":"connection_closed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L537","def":{"name":"connection_closed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ConnectionClosed"}},{"id":"connection_failed?-instance-method","html_id":"connection_failed?-instance-method","name":"connection_failed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L535","def":{"name":"connection_failed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ConnectionFailed"}},{"id":"data_connection_already_opened?-instance-method","html_id":"data_connection_already_opened?-instance-method","name":"data_connection_already_opened?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L459","def":{"name":"data_connection_already_opened?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DataConnectionAlreadyOpened"}},{"id":"data_connection_opened?-instance-method","html_id":"data_connection_opened?-instance-method","name":"data_connection_opened?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L481","def":{"name":"data_connection_opened?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DataConnectionOpened"}},{"id":"data_connection_unavailable?-instance-method","html_id":"data_connection_unavailable?-instance-method","name":"data_connection_unavailable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L501","def":{"name":"data_connection_unavailable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DataConnectionUnavailable"}},{"id":"directory_ok?-instance-method","html_id":"directory_ok?-instance-method","name":"directory_ok?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L491","def":{"name":"directory_ok?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DirectoryOk"}},{"id":"directory_status?-instance-method","html_id":"directory_status?-instance-method","name":"directory_status?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L469","def":{"name":"directory_status?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DirectoryStatus"}},{"id":"entering_passive_mode?-instance-method","html_id":"entering_passive_mode?-instance-method","name":"entering_passive_mode?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L485","def":{"name":"entering_passive_mode?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == EnteringPassiveMode"}},{"id":"file_action_aborted?-instance-method","html_id":"file_action_aborted?-instance-method","name":"file_action_aborted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L505","def":{"name":"file_action_aborted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FileActionAborted"}},{"id":"file_action_ok?-instance-method","html_id":"file_action_ok?-instance-method","name":"file_action_ok?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L489","def":{"name":"file_action_ok?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FileActionOk"}},{"id":"file_status?-instance-method","html_id":"file_status?-instance-method","name":"file_status?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L471","def":{"name":"file_status?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FileStatus"}},{"id":"file_unavailable?-instance-method","html_id":"file_unavailable?-instance-method","name":"file_unavailable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L525","def":{"name":"file_unavailable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FileUnavailable"}},{"id":"filename_not_allowed?-instance-method","html_id":"filename_not_allowed?-instance-method","name":"filename_not_allowed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L531","def":{"name":"filename_not_allowed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FilenameNotAllowed"}},{"id":"help_message?-instance-method","html_id":"help_message?-instance-method","name":"help_message?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L473","def":{"name":"help_message?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == HelpMessage"}},{"id":"insufficient_storage_space?-instance-method","html_id":"insufficient_storage_space?-instance-method","name":"insufficient_storage_space?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L509","def":{"name":"insufficient_storage_space?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InsufficientStorageSpace"}},{"id":"invalid_file?-instance-method","html_id":"invalid_file?-instance-method","name":"invalid_file?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L539","def":{"name":"invalid_file?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidFile"}},{"id":"invalid_response?-instance-method","html_id":"invalid_response?-instance-method","name":"invalid_response?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L533","def":{"name":"invalid_response?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidResponse"}},{"id":"local_error?-instance-method","html_id":"local_error?-instance-method","name":"local_error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L507","def":{"name":"local_error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LocalError"}},{"id":"logged_in?-instance-method","html_id":"logged_in?-instance-method","name":"logged_in?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L487","def":{"name":"logged_in?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LoggedIn"}},{"id":"need_account_to_log_in?-instance-method","html_id":"need_account_to_log_in?-instance-method","name":"need_account_to_log_in?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L495","def":{"name":"need_account_to_log_in?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NeedAccountToLogIn"}},{"id":"need_account_to_store?-instance-method","html_id":"need_account_to_store?-instance-method","name":"need_account_to_store?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L523","def":{"name":"need_account_to_store?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NeedAccountToStore"}},{"id":"need_information?-instance-method","html_id":"need_information?-instance-method","name":"need_information?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L497","def":{"name":"need_information?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NeedInformation"}},{"id":"need_password?-instance-method","html_id":"need_password?-instance-method","name":"need_password?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L493","def":{"name":"need_password?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NeedPassword"}},{"id":"not_enough_memory?-instance-method","html_id":"not_enough_memory?-instance-method","name":"not_enough_memory?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L529","def":{"name":"not_enough_memory?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NotEnoughMemory"}},{"id":"not_logged_in?-instance-method","html_id":"not_logged_in?-instance-method","name":"not_logged_in?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L521","def":{"name":"not_logged_in?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NotLoggedIn"}},{"id":"ok?-instance-method","html_id":"ok?-instance-method","name":"ok?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L463","def":{"name":"ok?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Ok"}},{"id":"opening_data_connection?-instance-method","html_id":"opening_data_connection?-instance-method","name":"opening_data_connection?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L461","def":{"name":"opening_data_connection?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == OpeningDataConnection"}},{"id":"page_type_unknown?-instance-method","html_id":"page_type_unknown?-instance-method","name":"page_type_unknown?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L527","def":{"name":"page_type_unknown?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PageTypeUnknown"}},{"id":"parameter_not_implemented?-instance-method","html_id":"parameter_not_implemented?-instance-method","name":"parameter_not_implemented?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L519","def":{"name":"parameter_not_implemented?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ParameterNotImplemented"}},{"id":"parameters_unknown?-instance-method","html_id":"parameters_unknown?-instance-method","name":"parameters_unknown?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L513","def":{"name":"parameters_unknown?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ParametersUnknown"}},{"id":"pointless_command?-instance-method","html_id":"pointless_command?-instance-method","name":"pointless_command?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L465","def":{"name":"pointless_command?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PointlessCommand"}},{"id":"restart_marker_reply?-instance-method","html_id":"restart_marker_reply?-instance-method","name":"restart_marker_reply?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L455","def":{"name":"restart_marker_reply?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RestartMarkerReply"}},{"id":"service_ready?-instance-method","html_id":"service_ready?-instance-method","name":"service_ready?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L477","def":{"name":"service_ready?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ServiceReady"}},{"id":"service_ready_soon?-instance-method","html_id":"service_ready_soon?-instance-method","name":"service_ready_soon?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L457","def":{"name":"service_ready_soon?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ServiceReadySoon"}},{"id":"service_unavailable?-instance-method","html_id":"service_unavailable?-instance-method","name":"service_unavailable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L499","def":{"name":"service_unavailable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ServiceUnavailable"}},{"id":"system_status?-instance-method","html_id":"system_status?-instance-method","name":"system_status?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L467","def":{"name":"system_status?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SystemStatus"}},{"id":"system_type?-instance-method","html_id":"system_type?-instance-method","name":"system_type?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L475","def":{"name":"system_type?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SystemType"}},{"id":"transfer_aborted?-instance-method","html_id":"transfer_aborted?-instance-method","name":"transfer_aborted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L503","def":{"name":"transfer_aborted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TransferAborted"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/Ftp/TransferMode","path":"SF/Ftp/TransferMode.html","kind":"enum","full_name":"SF::Ftp::TransferMode","name":"TransferMode","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":436,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Binary","name":"Binary","value":"0","doc":"Binary mode (file is transfered as a sequence of bytes)","summary":"<p>Binary mode (file is transfered as a sequence of bytes)</p>"},{"id":"Ascii","name":"Ascii","value":"1","doc":"Text mode using ASCII encoding","summary":"<p>Text mode using ASCII encoding</p>"},{"id":"Ebcdic","name":"Ebcdic","value":"2","doc":"Text mode using EBCDIC encoding","summary":"<p>Text mode using EBCDIC encoding</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Ftp","kind":"class","full_name":"SF::Ftp","name":"Ftp"},"doc":"Enumeration of transfer modes","summary":"<p>Enumeration of transfer modes</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"ascii?-instance-method","html_id":"ascii?-instance-method","name":"ascii?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L440","def":{"name":"ascii?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Ascii"}},{"id":"binary?-instance-method","html_id":"binary?-instance-method","name":"binary?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L438","def":{"name":"binary?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Binary"}},{"id":"ebcdic?-instance-method","html_id":"ebcdic?-instance-method","name":"ebcdic?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L442","def":{"name":"ebcdic?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Ebcdic"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/GlResource","path":"SF/GlResource.html","kind":"module","full_name":"SF::GlResource","name":"GlResource","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"window/obj.cr","line_number":70,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/oprypin/crsfml/SF/Context","kind":"class","full_name":"SF::Context","name":"Context"},{"html_id":"github.com/oprypin/crsfml/SF/Shader","kind":"class","full_name":"SF::Shader","name":"Shader"},{"html_id":"github.com/oprypin/crsfml/SF/Texture","kind":"class","full_name":"SF::Texture","name":"Texture"},{"html_id":"github.com/oprypin/crsfml/SF/VertexBuffer","kind":"class","full_name":"SF::VertexBuffer","name":"VertexBuffer"},{"html_id":"github.com/oprypin/crsfml/SF/Window","kind":"class","full_name":"SF::Window","name":"Window"}],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Empty module that indicates the class requires an OpenGL context","summary":"<p>Empty module that indicates the class requires an OpenGL context</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Glyph","path":"SF/Glyph.html","kind":"struct","full_name":"SF::Glyph","name":"Glyph","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":2624,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Structure describing a glyph\n\nA glyph is the visual representation of a character.\n\nThe `SF::Glyph` structure provides the information needed\nto handle the glyph:\n* its coordinates in the font's texture\n* its bounding rectangle\n* the offset to apply to get the starting position of the next glyph\n\n*See also:* `SF::Font`","summary":"<p>Structure describing a glyph</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2629","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"advance:Float32-instance-method","html_id":"advance:Float32-instance-method","name":"advance","doc":"Offset to move horizontally to the next character","summary":"<p>Offset to move horizontally to the next character</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2637","def":{"name":"advance","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"@advance"}},{"id":"advance=(advance:Number)-instance-method","html_id":"advance=(advance:Number)-instance-method","name":"advance=","doc":null,"summary":null,"abstract":false,"args":[{"name":"advance","doc":null,"default_value":"","external_name":"advance","restriction":"Number"}],"args_string":"(advance : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2640","def":{"name":"advance=","args":[{"name":"advance","doc":null,"default_value":"","external_name":"advance","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@advance = LibC::Float.new(advance)"}},{"id":"bounds:FloatRect-instance-method","html_id":"bounds:FloatRect-instance-method","name":"bounds","doc":"Bounding rectangle of the glyph, in coordinates relative to the baseline","summary":"<p>Bounding rectangle of the glyph, in coordinates relative to the baseline</p>","abstract":false,"args":[],"args_string":" : FloatRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2645","def":{"name":"bounds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FloatRect","visibility":"Public","body":"@bounds"}},{"id":"bounds=(bounds:FloatRect)-instance-method","html_id":"bounds=(bounds:FloatRect)-instance-method","name":"bounds=","doc":null,"summary":null,"abstract":false,"args":[{"name":"bounds","doc":null,"default_value":"","external_name":"bounds","restriction":"FloatRect"}],"args_string":"(bounds : FloatRect)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2648","def":{"name":"bounds=","args":[{"name":"bounds","doc":null,"default_value":"","external_name":"bounds","restriction":"FloatRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bounds = bounds"}},{"id":"dup:Glyph-instance-method","html_id":"dup:Glyph-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Glyph","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2670","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Glyph","visibility":"Public","body":"return Glyph.new(self)"}},{"id":"texture_rect:IntRect-instance-method","html_id":"texture_rect:IntRect-instance-method","name":"texture_rect","doc":"Texture coordinates of the glyph inside the font's texture","summary":"<p>Texture coordinates of the glyph inside the font's texture</p>","abstract":false,"args":[],"args_string":" : IntRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2653","def":{"name":"texture_rect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IntRect","visibility":"Public","body":"@texture_rect"}},{"id":"texture_rect=(texture_rect:IntRect)-instance-method","html_id":"texture_rect=(texture_rect:IntRect)-instance-method","name":"texture_rect=","doc":null,"summary":null,"abstract":false,"args":[{"name":"texture_rect","doc":null,"default_value":"","external_name":"texture_rect","restriction":"IntRect"}],"args_string":"(texture_rect : IntRect)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2656","def":{"name":"texture_rect=","args":[{"name":"texture_rect","doc":null,"default_value":"","external_name":"texture_rect","restriction":"IntRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@texture_rect = texture_rect"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Http","path":"SF/Http.html","kind":"class","full_name":"SF::Http","name":"Http","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":1253,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"A HTTP client\n\n`SF::Http` is a very simple HTTP client that allows you\nto communicate with a web server. You can retrieve\nweb pages, send data to an interactive resource,\ndownload a remote file, etc. The HTTPS protocol is\nnot supported.\n\nThe HTTP client is split into 3 classes:\n* `SF::Http::Request`\n* `SF::Http::Response`\n* `SF::Http`\n\n`SF::Http::Request` builds the request that will be\nsent to the server. A request is made of:\n* a method (what you want to do)\n* a target URI (usually the name of the web page or file)\n* one or more header fields (options that you can pass to the server)\n* an optional body (for POST requests)\n\n`SF::Http::Response` parse the response from the web server\nand provides getters to read them. The response contains:\n* a status code\n* header fields (that may be answers to the ones that you requested)\n* a body, which contains the contents of the requested resource\n\n`SF::Http` provides a simple function, SendRequest, to send a\n`SF::Http::Request` and return the corresponding `SF::Http::Response`\nfrom the server.\n\nUsage example:\n```\n# Create a new HTTP client\nhttp = SF::Http.new(\"http://www.sfml-dev.org\")\n\n# Prepare a request to get the 'features.php' page\nrequest = SF::Http::Request.new(\"features.php\")\n\n# Send the request\nresponse = http.send_request request\n\n# Check the status code and display the result\nSF::Http::Response::Status status = response.getStatus()\nif response.status == SF::Http::Response::Ok\n    puts response.body\nelse\n    puts \"Error #{response.status}\"\nend\n```","summary":"<p>A HTTP client</p>","class_methods":[],"constructors":[{"id":"new(host:String,port:Int=0)-class-method","html_id":"new(host:String,port:Int=0)-class-method","name":"new","doc":"Construct the HTTP client with the target host\n\nThis is equivalent to calling host=(host, port).\nThe port has a default value of 0, which means that the\nHTTP client will use the right port according to the\nprotocol used (80 for HTTP). You should leave it like\nthis unless you really need a port other than the\nstandard one, or use an unknown protocol.\n\n* *host* - Web server to connect to\n* *port* - Port to use for connection","summary":"<p>Construct the HTTP client with the target host</p>","abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"0","external_name":"port","restriction":"Int"}],"args_string":"(host : String, port : Int = <span class=\"n\">0</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1514","def":{"name":"new","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"0","external_name":"port","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(host, port)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1499","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1255","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_http_finalize(to_unsafe)\nSFMLExt.sfml_http_free(@this)\n"}},{"id":"send_request(request:Http::Request,timeout:Time=Time::Zero):Http::Response-instance-method","html_id":"send_request(request:Http::Request,timeout:Time=Time::Zero):Http::Response-instance-method","name":"send_request","doc":"Send a HTTP request and return the server's response.\n\nYou must have a valid host before sending a request (see host=).\nAny missing mandatory header field in the request will be added\nwith an appropriate value.\nWarning: this function waits for the server's response and may\nnot return instantly; use a thread if you don't want to block your\napplication, or use a timeout to limit the time to wait. A value\nof Time::Zero means that the client will use the system default timeout\n(which is usually pretty long).\n\n* *request* - Request to send\n* *timeout* - Maximum time to wait\n\n*Returns:* Server's response","summary":"<p>Send a HTTP request and return the server's response.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Http::Request"},{"name":"timeout","doc":null,"default_value":"Time::Zero","external_name":"timeout","restriction":"Time"}],"args_string":"(request : Http::Request, timeout : Time = <span class=\"t\">Time</span><span class=\"t\">::</span><span class=\"t\">Zero</span>) : Http::Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1548","def":{"name":"send_request","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Http::Request"},{"name":"timeout","doc":null,"default_value":"Time::Zero","external_name":"timeout","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Http::Response","visibility":"Public","body":"result = Http::Response.new\nSFMLExt.sfml_http_sendrequest_Jatf4T(to_unsafe, request, timeout, result)\nreturn result\n"}},{"id":"set_host(host:String,port:Int=0)-instance-method","html_id":"set_host(host:String,port:Int=0)-instance-method","name":"set_host","doc":"Set the target host\n\nThis function just stores the host address and port, it\ndoesn't actually connect to it until you send a request.\nThe port has a default value of 0, which means that the\nHTTP client will use the right port according to the\nprotocol used (80 for HTTP). You should leave it like\nthis unless you really need a port other than the\nstandard one, or use an unknown protocol.\n\n* *host* - Web server to connect to\n* *port* - Port to use for connection","summary":"<p>Set the target host</p>","abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"0","external_name":"port","restriction":"Int"}],"args_string":"(host : String, port : Int = <span class=\"n\">0</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1530","def":{"name":"set_host","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"0","external_name":"port","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_http_sethost_zkCbxi(to_unsafe, host.bytesize, host, LibC::UShort.new(port))"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Http/Request","path":"SF/Http/Request.html","kind":"class","full_name":"SF::Http::Request","name":"Request","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":1260,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Http","kind":"class","full_name":"SF::Http","name":"Http"},"doc":"Define a HTTP request","summary":"<p>Define a HTTP request</p>","class_methods":[],"constructors":[{"id":"new(uri:String=&quot;/&quot;,method:Http::Request::Method=Get,body:String=&quot;&quot;)-class-method","html_id":"new(uri:String=&amp;quot;/&amp;quot;,method:Http::Request::Method=Get,body:String=&amp;quot;&amp;quot;)-class-method","name":"new","doc":"Default constructor\n\nThis constructor creates a GET request, with the root\nURI (\"/\") and an empty body.\n\n* *uri* - Target URI\n* *method* - Method to use for the request\n* *body* - Content of the request's body","summary":"<p>Default constructor</p>","abstract":false,"args":[{"name":"uri","doc":null,"default_value":"\"/\"","external_name":"uri","restriction":"String"},{"name":"method","doc":null,"default_value":"Get","external_name":"method","restriction":"Http::Request::Method"},{"name":"body","doc":null,"default_value":"\"\"","external_name":"body","restriction":"String"}],"args_string":"(uri : String = <span class=\"s\">&quot;/&quot;</span>, method : Http::Request::Method = <span class=\"t\">Get</span>, body : String = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1288","def":{"name":"new","args":[{"name":"uri","doc":null,"default_value":"\"/\"","external_name":"uri","restriction":"String"},{"name":"method","doc":null,"default_value":"Get","external_name":"method","restriction":"Http::Request::Method"},{"name":"body","doc":null,"default_value":"\"\"","external_name":"body","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(uri, method, body)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"body=(body:String)-instance-method","html_id":"body=(body:String)-instance-method","name":"body=","doc":"Set the body of the request\n\nThe body of a request is optional and only makes sense\nfor POST requests. It is ignored for all other methods.\nThe body is empty by default.\n\n* *body* - Content of the body","summary":"<p>Set the body of the request</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"String"}],"args_string":"(body : String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1341","def":{"name":"body=","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_http_request_setbody_zkC(to_unsafe, body.bytesize, body)"}},{"id":"dup:Request-instance-method","html_id":"dup:Request-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Request","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1357","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Request","visibility":"Public","body":"return Request.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1262","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_http_request_finalize(to_unsafe)\nSFMLExt.sfml_http_request_free(@this)\n"}},{"id":"method=(method:Http::Request::Method)-instance-method","html_id":"method=(method:Http::Request::Method)-instance-method","name":"method=","doc":"Set the request method\n\nSee the Method enumeration for a complete list of all\nthe availale methods.\nThe method is Http::Request::Get by default.\n\n* *method* - Method to use for the request","summary":"<p>Set the request method</p>","abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"Http::Request::Method"}],"args_string":"(method : Http::Request::Method)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1312","def":{"name":"method=","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"Http::Request::Method"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_http_request_setmethod_1ct(to_unsafe, method)"}},{"id":"set_field(field:String,value:String)-instance-method","html_id":"set_field(field:String,value:String)-instance-method","name":"set_field","doc":"Set the value of a field\n\nThe field is created if it doesn't exist. The name of\nthe field is case-insensitive.\nBy default, a request doesn't contain any field (but the\nmandatory fields are added later by the HTTP client when\nsending the request).\n\n* *field* - Name of the field to set\n* *value* - Value of the field","summary":"<p>Set the value of a field</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(field : String, value : String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1302","def":{"name":"set_field","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_http_request_setfield_zkCzkC(to_unsafe, field.bytesize, field, value.bytesize, value)"}},{"id":"set_http_version(major:Int,minor:Int)-instance-method","html_id":"set_http_version(major:Int,minor:Int)-instance-method","name":"set_http_version","doc":"Set the HTTP version for the request\n\nThe HTTP version is 1.0 by default.\n\n* *major* - Major HTTP version number\n* *minor* - Minor HTTP version number","summary":"<p>Set the HTTP version for the request</p>","abstract":false,"args":[{"name":"major","doc":null,"default_value":"","external_name":"major","restriction":"Int"},{"name":"minor","doc":null,"default_value":"","external_name":"minor","restriction":"Int"}],"args_string":"(major : Int, minor : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1331","def":{"name":"set_http_version","args":[{"name":"major","doc":null,"default_value":"","external_name":"major","restriction":"Int"},{"name":"minor","doc":null,"default_value":"","external_name":"minor","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_http_request_sethttpversion_emSemS(to_unsafe, LibC::UInt.new(major), LibC::UInt.new(minor))"}},{"id":"uri=(uri:String)-instance-method","html_id":"uri=(uri:String)-instance-method","name":"uri=","doc":"Set the requested URI\n\nThe URI is the resource (usually a web page or a file)\nthat you want to get or post.\nThe URI is \"/\" (the root page) by default.\n\n* *uri* - URI to request, relative to the host","summary":"<p>Set the requested URI</p>","abstract":false,"args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"String"}],"args_string":"(uri : String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1322","def":{"name":"uri=","args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_http_request_seturi_zkC(to_unsafe, uri.bytesize, uri)"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Http/Request/Method","path":"SF/Http/Request/Method.html","kind":"enum","full_name":"SF::Http::Request::Method","name":"Method","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":1267,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Get","name":"Get","value":"0","doc":"Request in get mode, standard method to retrieve a page","summary":"<p>Request in get mode, standard method to retrieve a page</p>"},{"id":"Post","name":"Post","value":"1","doc":"Request in post mode, usually to send data to a page","summary":"<p>Request in post mode, usually to send data to a page</p>"},{"id":"Head","name":"Head","value":"2","doc":"Request a page's header only","summary":"<p>Request a page's header only</p>"},{"id":"Put","name":"Put","value":"3","doc":"Request in put mode, useful for a REST API","summary":"<p>Request in put mode, useful for a REST API</p>"},{"id":"Delete","name":"Delete","value":"4","doc":"Request in delete mode, useful for a REST API","summary":"<p>Request in delete mode, useful for a REST API</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Http/Request","kind":"class","full_name":"SF::Http::Request","name":"Request"},"doc":"Enumerate the available HTTP methods for a request","summary":"<p>Enumerate the available HTTP methods for a request</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"delete?-instance-method","html_id":"delete?-instance-method","name":"delete?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1277","def":{"name":"delete?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Delete"}},{"id":"get?-instance-method","html_id":"get?-instance-method","name":"get?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1269","def":{"name":"get?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Get"}},{"id":"head?-instance-method","html_id":"head?-instance-method","name":"head?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1273","def":{"name":"head?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Head"}},{"id":"post?-instance-method","html_id":"post?-instance-method","name":"post?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1271","def":{"name":"post?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Post"}},{"id":"put?-instance-method","html_id":"put?-instance-method","name":"put?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1275","def":{"name":"put?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Put"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/Http/Response","path":"SF/Http/Response.html","kind":"class","full_name":"SF::Http::Response","name":"Response","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":1362,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Http","kind":"class","full_name":"SF::Http","name":"Http"},"doc":"Define a HTTP response","summary":"<p>Define a HTTP response</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nConstructs an empty response.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1421","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"body:String-instance-method","html_id":"body:String-instance-method","name":"body","doc":"Get the body of the response\n\nThe body of a response may contain:\n* the requested page (for GET requests)\n* a response from the server (for POST requests)\n* nothing (for HEAD requests)\n* an error message (in case of an error)\n\n*Returns:* The response body","summary":"<p>Get the body of the response</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1477","def":{"name":"body","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"SFMLExt.sfml_http_response_getbody(to_unsafe, out result)\nreturn String.new(result)\n"}},{"id":"dup:Response-instance-method","html_id":"dup:Response-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Response","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1494","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Response","visibility":"Public","body":"return Response.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1364","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_http_response_finalize(to_unsafe)\nSFMLExt.sfml_http_response_free(@this)\n"}},{"id":"get_field(field:String):String-instance-method","html_id":"get_field(field:String):String-instance-method","name":"get_field","doc":"Get the value of a field\n\nIf the field *field* is not found in the response header,\nthe empty string is returned. This function uses\ncase-insensitive comparisons.\n\n* *field* - Name of the field to get\n\n*Returns:* Value of the field, or empty string if not found","summary":"<p>Get the value of a field</p>","abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"}],"args_string":"(field : String) : String","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1434","def":{"name":"get_field","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"SFMLExt.sfml_http_response_getfield_zkC(to_unsafe, field.bytesize, field, out result)\nreturn String.new(result)\n"}},{"id":"major_http_version:Int32-instance-method","html_id":"major_http_version:Int32-instance-method","name":"major_http_version","doc":"Get the major HTTP version number of the response\n\n*Returns:* Major HTTP version number\n\n*See also:* `minor_http_version`","summary":"<p>Get the major HTTP version number of the response</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1455","def":{"name":"major_http_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_http_response_getmajorhttpversion(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"minor_http_version:Int32-instance-method","html_id":"minor_http_version:Int32-instance-method","name":"minor_http_version","doc":"Get the minor HTTP version number of the response\n\n*Returns:* Minor HTTP version number\n\n*See also:* `major_http_version`","summary":"<p>Get the minor HTTP version number of the response</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1464","def":{"name":"minor_http_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_http_response_getminorhttpversion(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"status:Http::Response::Status-instance-method","html_id":"status:Http::Response::Status-instance-method","name":"status","doc":"Get the response status code\n\nThe status code should be the first thing to be checked\nafter receiving a response, it defines whether it is a\nsuccess, a failure or anything else (see the Status\nenumeration).\n\n*Returns:* Status code of the response","summary":"<p>Get the response status code</p>","abstract":false,"args":[],"args_string":" : Http::Response::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1446","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Http::Response::Status","visibility":"Public","body":"SFMLExt.sfml_http_response_getstatus(to_unsafe, out result)\nreturn Http::Response::Status.new(result)\n"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Http/Response/Status","path":"SF/Http/Response/Status.html","kind":"enum","full_name":"SF::Http::Response::Status","name":"Status","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":1369,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Ok","name":"Ok","value":"200","doc":"Most common code returned when operation was successful","summary":"<p>Most common code returned when operation was successful</p>"},{"id":"Created","name":"Created","value":"201","doc":"The resource has successfully been created","summary":"<p>The resource has successfully been created</p>"},{"id":"Accepted","name":"Accepted","value":"202","doc":"The request has been accepted, but will be processed later by the server","summary":"<p>The request has been accepted, but will be processed later by the server</p>"},{"id":"NoContent","name":"NoContent","value":"204","doc":"The server didn't send any data in return","summary":"<p>The server didn't send any data in return</p>"},{"id":"ResetContent","name":"ResetContent","value":"205","doc":"The server informs the client that it should clear the view (form) that caused the request to be sent","summary":"<p>The server informs the client that it should clear the view (form) that caused the request to be sent</p>"},{"id":"PartialContent","name":"PartialContent","value":"206","doc":"The server has sent a part of the resource, as a response to a partial GET request","summary":"<p>The server has sent a part of the resource, as a response to a partial GET request</p>"},{"id":"MultipleChoices","name":"MultipleChoices","value":"300","doc":"The requested page can be accessed from several locations","summary":"<p>The requested page can be accessed from several locations</p>"},{"id":"MovedPermanently","name":"MovedPermanently","value":"301","doc":"The requested page has permanently moved to a new location","summary":"<p>The requested page has permanently moved to a new location</p>"},{"id":"MovedTemporarily","name":"MovedTemporarily","value":"302","doc":"The requested page has temporarily moved to a new location","summary":"<p>The requested page has temporarily moved to a new location</p>"},{"id":"NotModified","name":"NotModified","value":"304","doc":"For conditional requests, means the requested page hasn't changed and doesn't need to be refreshed","summary":"<p>For conditional requests, means the requested page hasn't changed and doesn't need to be refreshed</p>"},{"id":"BadRequest","name":"BadRequest","value":"400","doc":"The server couldn't understand the request (syntax error)","summary":"<p>The server couldn't understand the request (syntax error)</p>"},{"id":"Unauthorized","name":"Unauthorized","value":"401","doc":"The requested page needs an authentication to be accessed","summary":"<p>The requested page needs an authentication to be accessed</p>"},{"id":"Forbidden","name":"Forbidden","value":"403","doc":"The requested page cannot be accessed at all, even with authentication","summary":"<p>The requested page cannot be accessed at all, even with authentication</p>"},{"id":"NotFound","name":"NotFound","value":"404","doc":"The requested page doesn't exist","summary":"<p>The requested page doesn't exist</p>"},{"id":"RangeNotSatisfiable","name":"RangeNotSatisfiable","value":"407","doc":"The server can't satisfy the partial GET request (with a \"Range\" header field)","summary":"<p>The server can't satisfy the partial GET request (with a \"Range\" header field)</p>"},{"id":"InternalServerError","name":"InternalServerError","value":"500","doc":"The server encountered an unexpected error","summary":"<p>The server encountered an unexpected error</p>"},{"id":"NotImplemented","name":"NotImplemented","value":"501","doc":"The server doesn't implement a requested feature","summary":"<p>The server doesn't implement a requested feature</p>"},{"id":"BadGateway","name":"BadGateway","value":"502","doc":"The gateway server has received an error from the source server","summary":"<p>The gateway server has received an error from the source server</p>"},{"id":"ServiceNotAvailable","name":"ServiceNotAvailable","value":"503","doc":"The server is temporarily unavailable (overloaded, in maintenance, ...)","summary":"<p>The server is temporarily unavailable (overloaded, in maintenance, ...)</p>"},{"id":"GatewayTimeout","name":"GatewayTimeout","value":"504","doc":"The gateway server couldn't receive a response from the source server","summary":"<p>The gateway server couldn't receive a response from the source server</p>"},{"id":"VersionNotSupported","name":"VersionNotSupported","value":"505","doc":"The server doesn't support the requested HTTP version","summary":"<p>The server doesn't support the requested HTTP version</p>"},{"id":"InvalidResponse","name":"InvalidResponse","value":"1000","doc":"Response is not a valid HTTP one","summary":"<p>Response is not a valid HTTP one</p>"},{"id":"ConnectionFailed","name":"ConnectionFailed","value":"1001","doc":"Connection with server failed","summary":"<p>Connection with server failed</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Http/Response","kind":"class","full_name":"SF::Http::Response","name":"Response"},"doc":"Enumerate all the valid status codes for a response","summary":"<p>Enumerate all the valid status codes for a response</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"accepted?-instance-method","html_id":"accepted?-instance-method","name":"accepted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1375","def":{"name":"accepted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Accepted"}},{"id":"bad_gateway?-instance-method","html_id":"bad_gateway?-instance-method","name":"bad_gateway?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1405","def":{"name":"bad_gateway?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == BadGateway"}},{"id":"bad_request?-instance-method","html_id":"bad_request?-instance-method","name":"bad_request?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1391","def":{"name":"bad_request?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == BadRequest"}},{"id":"connection_failed?-instance-method","html_id":"connection_failed?-instance-method","name":"connection_failed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1415","def":{"name":"connection_failed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ConnectionFailed"}},{"id":"created?-instance-method","html_id":"created?-instance-method","name":"created?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1373","def":{"name":"created?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Created"}},{"id":"forbidden?-instance-method","html_id":"forbidden?-instance-method","name":"forbidden?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1395","def":{"name":"forbidden?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Forbidden"}},{"id":"gateway_timeout?-instance-method","html_id":"gateway_timeout?-instance-method","name":"gateway_timeout?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1409","def":{"name":"gateway_timeout?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GatewayTimeout"}},{"id":"internal_server_error?-instance-method","html_id":"internal_server_error?-instance-method","name":"internal_server_error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1401","def":{"name":"internal_server_error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InternalServerError"}},{"id":"invalid_response?-instance-method","html_id":"invalid_response?-instance-method","name":"invalid_response?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1413","def":{"name":"invalid_response?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidResponse"}},{"id":"moved_permanently?-instance-method","html_id":"moved_permanently?-instance-method","name":"moved_permanently?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1385","def":{"name":"moved_permanently?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MovedPermanently"}},{"id":"moved_temporarily?-instance-method","html_id":"moved_temporarily?-instance-method","name":"moved_temporarily?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1387","def":{"name":"moved_temporarily?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MovedTemporarily"}},{"id":"multiple_choices?-instance-method","html_id":"multiple_choices?-instance-method","name":"multiple_choices?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1383","def":{"name":"multiple_choices?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MultipleChoices"}},{"id":"no_content?-instance-method","html_id":"no_content?-instance-method","name":"no_content?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1377","def":{"name":"no_content?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NoContent"}},{"id":"not_found?-instance-method","html_id":"not_found?-instance-method","name":"not_found?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1397","def":{"name":"not_found?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NotFound"}},{"id":"not_implemented?-instance-method","html_id":"not_implemented?-instance-method","name":"not_implemented?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1403","def":{"name":"not_implemented?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NotImplemented"}},{"id":"not_modified?-instance-method","html_id":"not_modified?-instance-method","name":"not_modified?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1389","def":{"name":"not_modified?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NotModified"}},{"id":"ok?-instance-method","html_id":"ok?-instance-method","name":"ok?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1371","def":{"name":"ok?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Ok"}},{"id":"partial_content?-instance-method","html_id":"partial_content?-instance-method","name":"partial_content?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1381","def":{"name":"partial_content?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PartialContent"}},{"id":"range_not_satisfiable?-instance-method","html_id":"range_not_satisfiable?-instance-method","name":"range_not_satisfiable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1399","def":{"name":"range_not_satisfiable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RangeNotSatisfiable"}},{"id":"reset_content?-instance-method","html_id":"reset_content?-instance-method","name":"reset_content?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1379","def":{"name":"reset_content?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ResetContent"}},{"id":"service_not_available?-instance-method","html_id":"service_not_available?-instance-method","name":"service_not_available?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1407","def":{"name":"service_not_available?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ServiceNotAvailable"}},{"id":"unauthorized?-instance-method","html_id":"unauthorized?-instance-method","name":"unauthorized?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1393","def":{"name":"unauthorized?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Unauthorized"}},{"id":"version_not_supported?-instance-method","html_id":"version_not_supported?-instance-method","name":"version_not_supported?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1411","def":{"name":"version_not_supported?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == VersionNotSupported"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/oprypin/crsfml/SF/Image","path":"SF/Image.html","kind":"class","full_name":"SF::Image","name":"Image","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":2715,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Class for loading, manipulating and saving images\n\n`SF::Image` is an abstraction to manipulate images\nas bidimensional arrays of pixels. The class provides\nfunctions to load, read, write and save pixels, as well\nas many other useful functions.\n\n`SF::Image` can handle a unique internal representation of\npixels, which is RGBA 32 bits. This means that a pixel\nmust be composed of 8 bits red, green, blue and alpha\nchannels -- just like a `SF::Color`.\nAll the functions that return an array of pixels follow\nthis rule, and all parameters that you pass to `SF::Image`\nfunctions (such as load_from_memory) must use this\nrepresentation as well.\n\nA `SF::Image` can be copied, but it is a heavy resource and\nif possible you should always use [const] references to\npass or return them to avoid useless copies.\n\nUsage example:\n```\n# Load an image file from a file\nbackground = SF::Image.from_file(\"background.jpg\")\n\n# Create a 20x20 image filled with black color\nimage = SF::Image.new(20, 20, SF::Color::Black)\n\n# Copy image1 on image2 at position (10, 10)\nimage.copy(background, 10, 10)\n\n# Make the top-left pixel transparent\ncolor = image.get_pixel(0, 0)\ncolor.a = 128\nimage.set_pixel(0, 0, color)\n\n# Save the image to a file\nimage.save_to_file(\"result.png\") || error\n```\n\n*See also:* `SF::Texture`","summary":"<p>Class for loading, manipulating and saving images</p>","class_methods":[],"constructors":[{"id":"from_file(*args,**kwargs):self-class-method","html_id":"from_file(*args,**kwargs):self-class-method","name":"from_file","doc":"Shorthand for `image = Image.new; image.load_from_file(...); image`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>image = <a href=\"../SF/Image.html#new-class-method\">Image.new</a>; image<a href=\"../SF/Image.html#load_from_file(filename:String):Bool-instance-method\">.load_from_file(...)</a>; image</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2781","def":{"name":"from_file","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_file(*args, **kwargs))\n  raise(InitError.new(\"Image.load_from_file failed\"))\nend\nobj\n"}},{"id":"from_memory(*args,**kwargs):self-class-method","html_id":"from_memory(*args,**kwargs):self-class-method","name":"from_memory","doc":"Shorthand for `image = Image.new; image.load_from_memory(...); image`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>image = <a href=\"../SF/Image.html#new-class-method\">Image.new</a>; image<a href=\"../SF/Image.html#load_from_memory(data:Slice):Bool-instance-method\">.load_from_memory(...)</a>; image</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2807","def":{"name":"from_memory","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_memory(*args, **kwargs))\n  raise(InitError.new(\"Image.load_from_memory failed\"))\nend\nobj\n"}},{"id":"from_stream(*args,**kwargs):self-class-method","html_id":"from_stream(*args,**kwargs):self-class-method","name":"from_stream","doc":"Shorthand for `image = Image.new; image.load_from_stream(...); image`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>image = <a href=\"../SF/Image.html#new-class-method\">Image.new</a>; image<a href=\"../SF/Image.html#load_from_stream(stream:InputStream):Bool-instance-method\">.load_from_stream(...)</a>; image</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2833","def":{"name":"from_stream","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_stream(*args, **kwargs))\n  raise(InitError.new(\"Image.load_from_stream failed\"))\nend\nobj\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nCreates an empty image.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2720","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*args,**kwargs):self-class-method","html_id":"new(*args,**kwargs):self-class-method","name":"new","doc":"Shorthand for `image = Image.new; image.create(...); image`","summary":"<p>Shorthand for <code>image = <a href=\"../SF/Image.html#new-class-method\">Image.new</a>; image.create(...); image</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2757","def":{"name":"new","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nobj.create(*args, **kwargs)\nobj\n"}}],"instance_methods":[{"id":"copy(source:Image,dest_x:Int,dest_y:Int,source_rect:IntRect=IntRect.new(0,0,0,0),apply_alpha:Bool=false)-instance-method","html_id":"copy(source:Image,dest_x:Int,dest_y:Int,source_rect:IntRect=IntRect.new(0,0,0,0),apply_alpha:Bool=false)-instance-method","name":"copy","doc":"Copy pixels from another image onto this one\n\nThis function does a slow pixel copy and should not be\nused intensively. It can be used to prepare a complex\nstatic image from several others, but if you need this\nkind of feature in real-time you'd better use `SF::RenderTexture`.\n\nIf *source_rect* is empty, the whole image is copied.\nIf *apply_alpha* is set to true, the transparency of\nsource pixels is applied. If it is false, the pixels are\ncopied unchanged with their alpha value.\n\n* *source* - Source image to copy\n* *dest_x* - X coordinate of the destination position\n* *dest_y* - Y coordinate of the destination position\n* *source_rect* - Sub-rectangle of the source image to copy\n* *apply_alpha* - Should the copy take into account the source transparency?","summary":"<p>Copy pixels from another image onto this one</p>","abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Image"},{"name":"dest_x","doc":null,"default_value":"","external_name":"dest_x","restriction":"Int"},{"name":"dest_y","doc":null,"default_value":"","external_name":"dest_y","restriction":"Int"},{"name":"source_rect","doc":null,"default_value":"IntRect.new(0, 0, 0, 0)","external_name":"source_rect","restriction":"IntRect"},{"name":"apply_alpha","doc":null,"default_value":"false","external_name":"apply_alpha","restriction":"Bool"}],"args_string":"(source : Image, dest_x : Int, dest_y : Int, source_rect : IntRect = <span class=\"t\">IntRect</span>.<span class=\"k\">new</span>(<span class=\"n\">0</span>, <span class=\"n\">0</span>, <span class=\"n\">0</span>, <span class=\"n\">0</span>), apply_alpha : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2892","def":{"name":"copy","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Image"},{"name":"dest_x","doc":null,"default_value":"","external_name":"dest_x","restriction":"Int"},{"name":"dest_y","doc":null,"default_value":"","external_name":"dest_y","restriction":"Int"},{"name":"source_rect","doc":null,"default_value":"IntRect.new(0, 0, 0, 0)","external_name":"source_rect","restriction":"IntRect"},{"name":"apply_alpha","doc":null,"default_value":"false","external_name":"apply_alpha","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_image_copy_dptemSemS2k1GZq(to_unsafe, source, LibC::UInt.new(dest_x), LibC::UInt.new(dest_y), source_rect, apply_alpha)"}},{"id":"create(width:Int,height:Int,color:Color=Color.new(0,0,0))-instance-method","html_id":"create(width:Int,height:Int,color:Color=Color.new(0,0,0))-instance-method","name":"create","doc":"Create the image and fill it with a unique color\n\n* *width* - Width of the image\n* *height* - Height of the image\n* *color* - Fill color","summary":"<p>Create the image and fill it with a unique color</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"color","doc":null,"default_value":"Color.new(0, 0, 0)","external_name":"color","restriction":"Color"}],"args_string":"(width : Int, height : Int, color : Color = <span class=\"t\">Color</span>.<span class=\"k\">new</span>(<span class=\"n\">0</span>, <span class=\"n\">0</span>, <span class=\"n\">0</span>))","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2734","def":{"name":"create","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"color","doc":null,"default_value":"Color.new(0, 0, 0)","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_image_create_emSemSQVe(to_unsafe, LibC::UInt.new(width), LibC::UInt.new(height), color)"}},{"id":"create(width:Int,height:Int,pixels:::Pointer(UInt8))-instance-method","html_id":"create(width:Int,height:Int,pixels:::Pointer(UInt8))-instance-method","name":"create","doc":"Create the image from an array of pixels\n\nThe *pixel* array is assumed to contain 32-bits RGBA pixels,\nand have the given *width* and *height.* If not, this is\nan undefined behavior.\nIf *pixels* is null, an empty image is created.\n\n* *width* - Width of the image\n* *height* - Height of the image\n* *pixels* - Array of pixels to copy to the image","summary":"<p>Create the image from an array of pixels</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"pixels","doc":null,"default_value":"","external_name":"pixels","restriction":"::Pointer(UInt8)"}],"args_string":"(width : Int, height : Int, pixels : ::Pointer(UInt8))","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2753","def":{"name":"create","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"pixels","doc":null,"default_value":"","external_name":"pixels","restriction":"::Pointer(UInt8)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_image_create_emSemS843(to_unsafe, LibC::UInt.new(width), LibC::UInt.new(height), pixels)"}},{"id":"create_mask_from_color(color:Color,alpha:Int=0)-instance-method","html_id":"create_mask_from_color(color:Color,alpha:Int=0)-instance-method","name":"create_mask_from_color","doc":"Create a transparency mask from a specified color-key\n\nThis function sets the alpha value of every pixel matching\nthe given color to *alpha* (0 by default), so that they\nbecome transparent.\n\n* *color* - Color to make transparent\n* *alpha* - Alpha value to assign to transparent pixels","summary":"<p>Create a transparency mask from a specified color-key</p>","abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"},{"name":"alpha","doc":null,"default_value":"0","external_name":"alpha","restriction":"Int"}],"args_string":"(color : Color, alpha : Int = <span class=\"n\">0</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2872","def":{"name":"create_mask_from_color","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"},{"name":"alpha","doc":null,"default_value":"0","external_name":"alpha","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_image_createmaskfromcolor_QVe9yU(to_unsafe, color, UInt8.new(alpha))"}},{"id":"dup:Image-instance-method","html_id":"dup:Image-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Image","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2961","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Image","visibility":"Public","body":"return Image.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2725","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_image_finalize(to_unsafe)\nSFMLExt.sfml_image_free(@this)\n"}},{"id":"flip_horizontally-instance-method","html_id":"flip_horizontally-instance-method","name":"flip_horizontally","doc":"Flip the image horizontally (left &lt;-&gt; right)","summary":"<p>Flip the image horizontally (left &lt;-&gt; right)</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2941","def":{"name":"flip_horizontally","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_image_fliphorizontally(to_unsafe)"}},{"id":"flip_vertically-instance-method","html_id":"flip_vertically-instance-method","name":"flip_vertically","doc":"Flip the image vertically (top &lt;-&gt; bottom)","summary":"<p>Flip the image vertically (top &lt;-&gt; bottom)</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2945","def":{"name":"flip_vertically","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_image_flipvertically(to_unsafe)"}},{"id":"get_pixel(x:Int,y:Int):Color-instance-method","html_id":"get_pixel(x:Int,y:Int):Color-instance-method","name":"get_pixel","doc":"Get the color of a pixel\n\nThis function doesn't check the validity of the pixel\ncoordinates, using out-of-range values will result in\nan undefined behavior.\n\n* *x* - X coordinate of pixel to get\n* *y* - Y coordinate of pixel to get\n\n*Returns:* Color of the pixel at coordinates (x, y)\n\n*See also:* `pixel=`","summary":"<p>Get the color of a pixel</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(x : Int, y : Int) : Color","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2921","def":{"name":"get_pixel","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"result = Color.allocate\nSFMLExt.sfml_image_getpixel_emSemS(to_unsafe, LibC::UInt.new(x), LibC::UInt.new(y), result)\nreturn result\n"}},{"id":"load_from_file(filename:String):Bool-instance-method","html_id":"load_from_file(filename:String):Bool-instance-method","name":"load_from_file","doc":"Load the image from a file on disk\n\nThe supported image formats are bmp, png, tga, jpg, gif,\npsd, hdr and pic. Some format options are not supported,\nlike progressive jpeg.\nIf this function fails, the image is left unchanged.\n\n* *filename* - Path of the image file to load\n\n*Returns:* True if loading was successful\n\n*See also:* `load_from_memory`, `load_from_stream`, `save_to_file`","summary":"<p>Load the image from a file on disk</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2774","def":{"name":"load_from_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_image_loadfromfile_zkC(to_unsafe, filename.bytesize, filename, out result)\nreturn result\n"}},{"id":"load_from_memory(data:Slice):Bool-instance-method","html_id":"load_from_memory(data:Slice):Bool-instance-method","name":"load_from_memory","doc":"Load the image from a file in memory\n\nThe supported image formats are bmp, png, tga, jpg, gif,\npsd, hdr and pic. Some format options are not supported,\nlike progressive jpeg.\nIf this function fails, the image is left unchanged.\n\n* *data* - Slice containing the file data in memory\n\n*Returns:* True if loading was successful\n\n*See also:* `load_from_file`, `load_from_stream`","summary":"<p>Load the image from a file in memory</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2800","def":{"name":"load_from_memory","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_image_loadfrommemory_5h8vgv(to_unsafe, data, data.bytesize, out result)\nreturn result\n"}},{"id":"load_from_stream(stream:InputStream):Bool-instance-method","html_id":"load_from_stream(stream:InputStream):Bool-instance-method","name":"load_from_stream","doc":"Load the image from a custom stream\n\nThe supported image formats are bmp, png, tga, jpg, gif,\npsd, hdr and pic. Some format options are not supported,\nlike progressive jpeg.\nIf this function fails, the image is left unchanged.\n\n* *stream* - Source stream to read from\n\n*Returns:* True if loading was successful\n\n*See also:* `load_from_file`, `load_from_memory`","summary":"<p>Load the image from a custom stream</p>","abstract":false,"args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"InputStream"}],"args_string":"(stream : InputStream) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2826","def":{"name":"load_from_stream","args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"InputStream"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_image_loadfromstream_PO0(to_unsafe, stream, out result)\nreturn result\n"}},{"id":"pixels_ptr:::Pointer(UInt8)-instance-method","html_id":"pixels_ptr:::Pointer(UInt8)-instance-method","name":"pixels_ptr","doc":"Get a read-only pointer to the array of pixels\n\nThe returned value points to an array of RGBA pixels made of\n8 bits integers components. The size of the array is\nwidth * height * 4 (size().x * size().y * 4).\nWarning: the returned pointer may become invalid if you\nmodify the image, so you should never store it for too long.\nIf the image is empty, a null pointer is returned.\n\n*Returns:* Read-only pointer to the array of pixels","summary":"<p>Get a read-only pointer to the array of pixels</p>","abstract":false,"args":[],"args_string":" : ::Pointer(UInt8)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2936","def":{"name":"pixels_ptr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(UInt8)","visibility":"Public","body":"SFMLExt.sfml_image_getpixelsptr(to_unsafe, out result)\nreturn result\n"}},{"id":"save_to_file(filename:String):Bool-instance-method","html_id":"save_to_file(filename:String):Bool-instance-method","name":"save_to_file","doc":"Save the image to a file on disk\n\nThe format of the image is automatically deduced from\nthe extension. The supported image formats are bmp, png,\ntga and jpg. The destination file is overwritten\nif it already exists. This function fails if the image is empty.\n\n* *filename* - Path of the file to save\n\n*Returns:* True if saving was successful\n\n*See also:* `create`, `load_from_file`, `load_from_memory`","summary":"<p>Save the image to a file on disk</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2852","def":{"name":"save_to_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_image_savetofile_zkC(to_unsafe, filename.bytesize, filename, out result)\nreturn result\n"}},{"id":"set_pixel(x:Int,y:Int,color:Color)-instance-method","html_id":"set_pixel(x:Int,y:Int,color:Color)-instance-method","name":"set_pixel","doc":"Change the color of a pixel\n\nThis function doesn't check the validity of the pixel\ncoordinates, using out-of-range values will result in\nan undefined behavior.\n\n* *x* - X coordinate of pixel to change\n* *y* - Y coordinate of pixel to change\n* *color* - New color of the pixel\n\n*See also:* `pixel`","summary":"<p>Change the color of a pixel</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"args_string":"(x : Int, y : Int, color : Color)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2906","def":{"name":"set_pixel","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_image_setpixel_emSemSQVe(to_unsafe, LibC::UInt.new(x), LibC::UInt.new(y), color)"}},{"id":"size:Vector2u-instance-method","html_id":"size:Vector2u-instance-method","name":"size","doc":"Return the size (width and height) of the image\n\n*Returns:* Size of the image, in pixels","summary":"<p>Return the size (width and height) of the image</p>","abstract":false,"args":[],"args_string":" : Vector2u","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L2859","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2u","visibility":"Public","body":"result = Vector2u.allocate\nSFMLExt.sfml_image_getsize(to_unsafe, result)\nreturn result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/InitError","path":"SF/InitError.html","kind":"class","full_name":"SF::InitError","name":"InitError","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"common.cr","line_number":5,"url":"https://github.com/oprypin/crsfml/blob/master/src/common.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Raised in shorthand class methods if initialization or resource loading fails","summary":"<p>Raised in shorthand class methods if initialization or resource loading fails</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/InputStream","path":"SF/InputStream.html","kind":"class","full_name":"SF::InputStream","name":"InputStream","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"system/obj.cr","line_number":425,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/FileInputStream","kind":"class","full_name":"SF::FileInputStream","name":"FileInputStream"},{"html_id":"github.com/oprypin/crsfml/SF/MemoryInputStream","kind":"class","full_name":"SF::MemoryInputStream","name":"MemoryInputStream"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Abstract class for custom file input streams\n\nThis class allows users to define their own file input sources\nfrom which SFML can load resources.\n\nSFML resource classes like `SF::Texture` and\n`SF::SoundBuffer` provide load_from_file and load_from_memory functions,\nwhich read data from conventional sources. However, if you\nhave data coming from a different source (over a network,\nembedded, encrypted, compressed, etc) you can derive your\nown class from `SF::InputStream` and load SFML resources with\ntheir load_from_stream function.\n\nUsage example:\n```\n# custom stream class that reads from inside a zip file\nclass ZipStream < SF::InputStream\n    def initialize(archive : String)\n\n    def open(filename : String)\n\n    def read(data : Slice) : Int64\n\n    def seek(position : Int) : Int64\n\n    def tell() : Int64\n\n    def size() : Int64\n\n    ...\nend\n\n# now you can load textures...\nstream = ZipStream.new(\"resources.zip\")\nstream.open(\"images/img.png\")\ntexture = SF::Texture.from_stream(stream)\n\n# musics...\nstream = ZipStream.new(\"resources.zip\")\nstream.open(\"musics/msc.ogg\")\nmusic = SF::Music.from_stream(stream)\n\n# etc.\n```","summary":"<p>Abstract class for custom file input streams</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L427","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L432","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_inputstream_finalize(to_unsafe)\nSFMLExt.sfml_inputstream_free(@this)\n"}},{"id":"read(data:Slice):Int64-instance-method","html_id":"read(data:Slice):Int64-instance-method","name":"read","doc":"Read data from the stream\n\nAfter reading, the stream's reading position must be\nadvanced by the amount of bytes read.\n\n* *data* - Buffer where to copy the read data\n\n*Returns:* The number of bytes actually read, or -1 on error","summary":"<p>Read data from the stream</p>","abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice) : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L444","def":{"name":"read","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":""}},{"id":"seek(position:Int):Int64-instance-method","html_id":"seek(position:Int):Int64-instance-method","name":"seek","doc":"Change the current reading position\n\n* *position* - The position to seek to, from the beginning\n\n*Returns:* The position actually sought to, or -1 on error","summary":"<p>Change the current reading position</p>","abstract":true,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"args_string":"(position : Int) : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L450","def":{"name":"seek","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":""}},{"id":"size:Int64-instance-method","html_id":"size:Int64-instance-method","name":"size","doc":"Return the size of the stream\n\n*Returns:* The total number of bytes available in the stream, or -1 on error","summary":"<p>Return the size of the stream</p>","abstract":true,"args":[],"args_string":" : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L458","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":""}},{"id":"tell:Int64-instance-method","html_id":"tell:Int64-instance-method","name":"tell","doc":"Get the current reading position in the stream\n\n*Returns:* The current position, or -1 on error.","summary":"<p>Get the current reading position in the stream</p>","abstract":true,"args":[],"args_string":" : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L454","def":{"name":"tell","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/IntRect","path":"SF/IntRect.html","kind":"alias","full_name":"SF::IntRect","name":"IntRect","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"graphics/graphics.cr","line_number":115,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":true,"aliased":"SF::Rect(Int32)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/IpAddress","path":"SF/IpAddress.html","kind":"struct","full_name":"SF::IpAddress","name":"IpAddress","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":994,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"},{"filename":"network/network.cr","line_number":4,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/network.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Any","name":"Any","value":"new(0, 0, 0, 0)","doc":"Value representing any address (0.0.0.0)","summary":"<p>Value representing any address (0.0.0.0)</p>"},{"id":"Broadcast","name":"Broadcast","value":"new(255, 255, 255, 255)","doc":"The \"broadcast\" address (for sending UDP messages to everyone on a local network)","summary":"<p>The \"broadcast\" address (for sending UDP messages to everyone on a local network)</p>"},{"id":"LocalHost","name":"LocalHost","value":"new(127, 0, 0, 1)","doc":"The \"localhost\" address (for connecting a computer to itself locally)","summary":"<p>The \"localhost\" address (for connecting a computer to itself locally)</p>"},{"id":"None","name":"None","value":"new","doc":"Value representing an empty/invalid address","summary":"<p>Value representing an empty/invalid address</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Encapsulate an IPv4 network address\n\n`SF::IpAddress` is a utility class for manipulating network\naddresses. It provides a set a implicit constructors and\nconversion functions to easily build or transform an IP\naddress from/to various representations.\n\nUsage example:\n```\na0 = SF::IpAddress.new                    # an invalid address\na1 = SF::IpAddress::None                  # an invalid address (same as a0)\na2 = SF::IpAddress.new(\"127.0.0.1\")       # the local host address\na3 = SF::IpAddress::Broadcast             # the broadcast address\na4 = SF::IpAddress.new(192, 168, 1, 56)   # a local address\na5 = SF::IpAddress.new(\"my_computer\")     # a local address created from a network name\na6 = SF::IpAddress.new(\"89.54.1.169\")     # a distant address\na7 = SF::IpAddress.new(\"www.google.com\")  # a distant address created from a network name\na8 = SF::IpAddress.local_address          # my address on the local network\na9 = SF::IpAddress.get_public_address()   # my address on the internet\n```\n\nNote that `SF::IpAddress` currently doesn't support IPv6\nnor other types of network addresses.","summary":"<p>Encapsulate an IPv4 network address</p>","class_methods":[],"constructors":[{"id":"get_public_address(timeout:Time=Time::Zero):IpAddress-class-method","html_id":"get_public_address(timeout:Time=Time::Zero):IpAddress-class-method","name":"get_public_address","doc":"Get the computer's public address\n\nThe public address is the address of the computer from the\ninternet point of view, i.e. something like 89.54.1.169.\nIt is necessary for communications over the world wide web.\nThe only way to get a public address is to ask it to a\ndistant website; as a consequence, this function depends on\nboth your network connection and the server, and may be\nvery slow. You should use it as few as possible. Because\nthis function depends on the network connection and on a distant\nserver, you may use a time limit if you don't want your program\nto be possibly stuck waiting in case there is a problem; this\nlimit is deactivated by default.\n\n* *timeout* - Maximum time to wait\n\n*Returns:* Public IP address of the computer\n\n*See also:* `local_address`","summary":"<p>Get the computer's public address</p>","abstract":false,"args":[{"name":"timeout","doc":null,"default_value":"Time::Zero","external_name":"timeout","restriction":"Time"}],"args_string":"(timeout : Time = <span class=\"t\">Time</span><span class=\"t\">::</span><span class=\"t\">Zero</span>) : IpAddress","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1123","def":{"name":"get_public_address","args":[{"name":"timeout","doc":null,"default_value":"Time::Zero","external_name":"timeout","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IpAddress","visibility":"Public","body":"result = IpAddress.allocate\nSFMLExt.sfml_ipaddress_getpublicaddress_f4T(timeout, result)\nreturn result\n"}},{"id":"local_address:IpAddress-class-method","html_id":"local_address:IpAddress-class-method","name":"local_address","doc":"Get the computer's local address\n\nThe local address is the address of the computer from the\nLAN point of view, i.e. something like 192.168.1.56. It is\nmeaningful only for communications over the local network.\nUnlike public_address, this function is fast and may be\nused safely anywhere.\n\n*Returns:* Local IP address of the computer\n\n*See also:* `public_address`","summary":"<p>Get the computer's local address</p>","abstract":false,"args":[],"args_string":" : IpAddress","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1099","def":{"name":"local_address","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IpAddress","visibility":"Public","body":"result = IpAddress.allocate\nSFMLExt.sfml_ipaddress_getlocaladdress(result)\nreturn result\n"}},{"id":"new(byte0:Int,byte1:Int,byte2:Int,byte3:Int)-class-method","html_id":"new(byte0:Int,byte1:Int,byte2:Int,byte3:Int)-class-method","name":"new","doc":"Construct the address from 4 bytes\n\nCalling IpAddress(a, b, c, d) is equivalent to calling\nIpAddress(\"a.b.c.d\"), but safer as it doesn't have to\nparse a string to get the address components.\n\n* *byte0* - First byte of the address\n* *byte1* - Second byte of the address\n* *byte2* - Third byte of the address\n* *byte3* - Fourth byte of the address","summary":"<p>Construct the address from 4 bytes</p>","abstract":false,"args":[{"name":"byte0","doc":null,"default_value":"","external_name":"byte0","restriction":"Int"},{"name":"byte1","doc":null,"default_value":"","external_name":"byte1","restriction":"Int"},{"name":"byte2","doc":null,"default_value":"","external_name":"byte2","restriction":"Int"},{"name":"byte3","doc":null,"default_value":"","external_name":"byte3","restriction":"Int"}],"args_string":"(byte0 : Int, byte1 : Int, byte2 : Int, byte3 : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1040","def":{"name":"new","args":[{"name":"byte0","doc":null,"default_value":"","external_name":"byte0","restriction":"Int"},{"name":"byte1","doc":null,"default_value":"","external_name":"byte1","restriction":"Int"},{"name":"byte2","doc":null,"default_value":"","external_name":"byte2","restriction":"Int"},{"name":"byte3","doc":null,"default_value":"","external_name":"byte3","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(byte0, byte1, byte2, byte3)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(address:String)-class-method","html_id":"new(address:String)-class-method","name":"new","doc":"Construct the address from a string\n\nHere *address* can be either a decimal address\n(ex: \"192.168.1.56\") or a network name (ex: \"localhost\").\nThis is equivalent to the constructor taking a std::string\nparameter, it is defined for convenience so that the\nimplicit conversions from literal strings to IpAddress work.\n\n* *address* - IP address or network name","summary":"<p>Construct the address from a string</p>","abstract":false,"args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"String"}],"args_string":"(address : String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1025","def":{"name":"new","args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(address)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(address:Int)-class-method","html_id":"new(address:Int)-class-method","name":"new","doc":"Construct the address from a 32-bits integer\n\nThis constructor uses the internal representation of\nthe address directly. It should be used for optimization\npurposes, and only if you got that representation from\nIpAddress.to_integer().\n\n* *address* - 4 bytes of the address packed into a 32-bits integer\n\n*See also:* `to_integer`","summary":"<p>Construct the address from a 32-bits integer</p>","abstract":false,"args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"Int"}],"args_string":"(address : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1055","def":{"name":"new","args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(address)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nThis constructor creates an empty (invalid) address","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1000","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"!=(right:IpAddress):Bool-instance-method","html_id":"!=(right:IpAddress):Bool-instance-method","name":"!=","doc":"Overload of != operator to compare two IP addresses\n\n* *left* - Left operand (a IP address)\n* *right* - Right operand (a IP address)\n\n*Returns:* True if both addresses are different","summary":"<p>Overload of != operator to compare two IP addresses</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"IpAddress"}],"args_string":"(right : IpAddress) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1146","def":{"name":"!=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"IpAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_ne_BfEBfE(to_unsafe, right, out result)\nreturn result\n"}},{"id":"<(right:IpAddress):Bool-instance-method","html_id":"&lt;(right:IpAddress):Bool-instance-method","name":"<","doc":"Overload of &lt; operator to compare two IP addresses\n\n* *left* - Left operand (a IP address)\n* *right* - Right operand (a IP address)\n\n*Returns:* True if *left* is lesser than *right*","summary":"<p>Overload of &lt; operator to compare two IP addresses</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"IpAddress"}],"args_string":"(right : IpAddress) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1156","def":{"name":"<","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"IpAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_lt_BfEBfE(to_unsafe, right, out result)\nreturn result\n"}},{"id":"<=(right:IpAddress):Bool-instance-method","html_id":"&lt;=(right:IpAddress):Bool-instance-method","name":"<=","doc":"Overload of &lt;= operator to compare two IP addresses\n\n* *left* - Left operand (a IP address)\n* *right* - Right operand (a IP address)\n\n*Returns:* True if *left* is lesser or equal than *right*","summary":"<p>Overload of &lt;= operator to compare two IP addresses</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"IpAddress"}],"args_string":"(right : IpAddress) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1176","def":{"name":"<=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"IpAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_le_BfEBfE(to_unsafe, right, out result)\nreturn result\n"}},{"id":"==(right:IpAddress):Bool-instance-method","html_id":"==(right:IpAddress):Bool-instance-method","name":"==","doc":"Overload of == operator to compare two IP addresses\n\n* *left* - Left operand (a IP address)\n* *right* - Right operand (a IP address)\n\n*Returns:* True if both addresses are equal","summary":"<p>Overload of == operator to compare two IP addresses</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"IpAddress"}],"args_string":"(right : IpAddress) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1136","def":{"name":"==","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"IpAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_eq_BfEBfE(to_unsafe, right, out result)\nreturn result\n"}},{"id":">(right:IpAddress):Bool-instance-method","html_id":"&gt;(right:IpAddress):Bool-instance-method","name":">","doc":"Overload of &gt; operator to compare two IP addresses\n\n* *left* - Left operand (a IP address)\n* *right* - Right operand (a IP address)\n\n*Returns:* True if *left* is greater than *right*","summary":"<p>Overload of &gt; operator to compare two IP addresses</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"IpAddress"}],"args_string":"(right : IpAddress) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1166","def":{"name":">","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"IpAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_gt_BfEBfE(to_unsafe, right, out result)\nreturn result\n"}},{"id":">=(right:IpAddress):Bool-instance-method","html_id":"&gt;=(right:IpAddress):Bool-instance-method","name":">=","doc":"Overload of &gt;= operator to compare two IP addresses\n\n* *left* - Left operand (a IP address)\n* *right* - Right operand (a IP address)\n\n*Returns:* True if *left* is greater or equal than *right*","summary":"<p>Overload of &gt;= operator to compare two IP addresses</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"IpAddress"}],"args_string":"(right : IpAddress) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1186","def":{"name":">=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"IpAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_ge_BfEBfE(to_unsafe, right, out result)\nreturn result\n"}},{"id":"dup:IpAddress-instance-method","html_id":"dup:IpAddress-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : IpAddress","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1200","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IpAddress","visibility":"Public","body":"return IpAddress.new(self)"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/network.cr#L14","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(((io << ({{ @type.name }})) << \"(\\\"\") << to_s) << \"\\\")\""}},{"id":"to_integer:UInt32-instance-method","html_id":"to_integer:UInt32-instance-method","name":"to_integer","doc":"Get an integer representation of the address\n\nThe returned number is the internal representation of the\naddress, and should be used for optimization purposes only\n(like sending the address through a socket).\nThe integer produced by this function can then be converted\nback to a `SF::IpAddress` with the proper constructor.\n\n*Returns:* 32-bits unsigned integer representation of the address\n\n*See also:* `to_s`","summary":"<p>Get an integer representation of the address</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1084","def":{"name":"to_integer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"SFMLExt.sfml_ipaddress_tointeger(to_unsafe, out result)\nreturn result\n"}},{"id":"to_s:String-instance-method","html_id":"to_s:String-instance-method","name":"to_s","doc":"Get a string representation of the address\n\nThe returned string is the decimal representation of the\nIP address (like \"192.168.1.56\"), even if it was constructed\nfrom a host name.\n\n*Returns:* String representation of the address\n\n*See also:* `to_integer`","summary":"<p>Get a string representation of the address</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1069","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"SFMLExt.sfml_ipaddress_tostring(to_unsafe, out result)\nreturn String.new(result)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Joystick","path":"SF/Joystick.html","kind":"module","full_name":"SF::Joystick","name":"Joystick","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"window/obj.cr","line_number":590,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"AxisCount","name":"AxisCount","value":"8","doc":"Maximum number of supported axes","summary":"<p>Maximum number of supported axes</p>"},{"id":"ButtonCount","name":"ButtonCount","value":"32","doc":"Maximum number of supported buttons","summary":"<p>Maximum number of supported buttons</p>"},{"id":"Count","name":"Count","value":"8","doc":"Maximum number of supported joysticks","summary":"<p>Maximum number of supported joysticks</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Give access to the real-time state of the joysticks\n\n`SF::Joystick` provides an interface to the state of the\njoysticks. It only contains static functions, so it's not\nmeant to be instantiated. Instead, each joystick is identified\nby an index that is passed to the functions of this module.\n\nThis module allows users to query the state of joysticks at any\ntime and directly, without having to deal with a window and\nits events. Compared to the `JoystickMoved`, `JoystickButtonPressed`\nand `JoystickButtonReleased` events, `SF::Joystick` can retrieve the\nstate of axes and buttons of joysticks at any time\n(you don't need to store and update a boolean on your side\nin order to know if a button is pressed or released), and you\nalways get the real state of joysticks, even if they are\nmoved, pressed or released when your window is out of focus\nand no event is triggered.\n\nSFML supports:\n* 8 joysticks (`SF::Joystick::Count`)\n* 32 buttons per joystick (`SF::Joystick::ButtonCount`)\n* 8 axes per joystick (`SF::Joystick::AxisCount`)\n\nUnlike the keyboard or mouse, the state of joysticks is sometimes\nnot directly available (depending on the OS), therefore an update()\nfunction must be called in order to update the current state of\njoysticks. When you have a window with event handling, this is done\nautomatically, you don't need to call anything. But if you have no\nwindow, or if you want to check joysticks state before creating one,\nyou must call `SF::Joystick.update` explicitly.\n\nUsage example:\n```\n# Is joystick #0 connected?\nconnected = SF::Joystick.connected?(0)\n\n# How many buttons does joystick #0 support?\nbuttons = SF::Joystick.get_button_count(0)\n\n# Does joystick #0 define a X axis?\nhas_x = SF::Joystick.axis?(0, SF::Joystick::X)\n\n# Is button #2 pressed on joystick #0?\npressed = SF::Joystick.button_pressed?(0, 2)\n\n# What's the current position of the Y axis on joystick #0?\nposition = SF::Joystick.get_axis_position(0, SF::Joystick::Y)\n```\n\n*See also:* `SF::Keyboard`, `SF::Mouse`","summary":"<p>Give access to the real-time state of the joysticks</p>","class_methods":[{"id":"axis?(joystick:Int,axis:Joystick::Axis):Bool-class-method","html_id":"axis?(joystick:Int,axis:Joystick::Axis):Bool-class-method","name":"axis?","doc":"Check if a joystick supports a given axis\n\nIf the joystick is not connected, this function returns false.\n\n* *joystick* - Index of the joystick\n* *axis* - Axis to check\n\n*Returns:* True if the joystick supports the axis, false otherwise","summary":"<p>Check if a joystick supports a given axis</p>","abstract":false,"args":[{"name":"joystick","doc":null,"default_value":"","external_name":"joystick","restriction":"Int"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Joystick::Axis"}],"args_string":"(joystick : Int, axis : Joystick::Axis) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L697","def":{"name":"axis?","args":[{"name":"joystick","doc":null,"default_value":"","external_name":"joystick","restriction":"Int"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Joystick::Axis"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_joystick_hasaxis_emSHdj(LibC::UInt.new(joystick), axis, out result)\nreturn result\n"}},{"id":"button_pressed?(joystick:Int,button:Int):Bool-class-method","html_id":"button_pressed?(joystick:Int,button:Int):Bool-class-method","name":"button_pressed?","doc":"Check if a joystick button is pressed\n\nIf the joystick is not connected, this function returns false.\n\n* *joystick* - Index of the joystick\n* *button* - Button to check\n\n*Returns:* True if the button is pressed, false otherwise","summary":"<p>Check if a joystick button is pressed</p>","abstract":false,"args":[{"name":"joystick","doc":null,"default_value":"","external_name":"joystick","restriction":"Int"},{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"Int"}],"args_string":"(joystick : Int, button : Int) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L709","def":{"name":"button_pressed?","args":[{"name":"joystick","doc":null,"default_value":"","external_name":"joystick","restriction":"Int"},{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_joystick_isbuttonpressed_emSemS(LibC::UInt.new(joystick), LibC::UInt.new(button), out result)\nreturn result\n"}},{"id":"connected?(joystick:Int):Bool-class-method","html_id":"connected?(joystick:Int):Bool-class-method","name":"connected?","doc":"Check if a joystick is connected\n\n* *joystick* - Index of the joystick to check\n\n*Returns:* True if the joystick is connected, false otherwise","summary":"<p>Check if a joystick is connected</p>","abstract":false,"args":[{"name":"joystick","doc":null,"default_value":"","external_name":"joystick","restriction":"Int"}],"args_string":"(joystick : Int) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L674","def":{"name":"connected?","args":[{"name":"joystick","doc":null,"default_value":"","external_name":"joystick","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_joystick_isconnected_emS(LibC::UInt.new(joystick), out result)\nreturn result\n"}},{"id":"get_axis_position(joystick:Int,axis:Joystick::Axis):Float32-class-method","html_id":"get_axis_position(joystick:Int,axis:Joystick::Axis):Float32-class-method","name":"get_axis_position","doc":"Get the current position of a joystick axis\n\nIf the joystick is not connected, this function returns 0.\n\n* *joystick* - Index of the joystick\n* *axis* - Axis to check\n\n*Returns:* Current position of the axis, in range `-100 .. 100`","summary":"<p>Get the current position of a joystick axis</p>","abstract":false,"args":[{"name":"joystick","doc":null,"default_value":"","external_name":"joystick","restriction":"Int"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Joystick::Axis"}],"args_string":"(joystick : Int, axis : Joystick::Axis) : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L721","def":{"name":"get_axis_position","args":[{"name":"joystick","doc":null,"default_value":"","external_name":"joystick","restriction":"Int"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Joystick::Axis"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_joystick_getaxisposition_emSHdj(LibC::UInt.new(joystick), axis, out result)\nreturn result\n"}},{"id":"get_button_count(joystick:Int):Int32-class-method","html_id":"get_button_count(joystick:Int):Int32-class-method","name":"get_button_count","doc":"Return the number of buttons supported by a joystick\n\nIf the joystick is not connected, this function returns 0.\n\n* *joystick* - Index of the joystick\n\n*Returns:* Number of buttons supported by the joystick","summary":"<p>Return the number of buttons supported by a joystick</p>","abstract":false,"args":[{"name":"joystick","doc":null,"default_value":"","external_name":"joystick","restriction":"Int"}],"args_string":"(joystick : Int) : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L685","def":{"name":"get_button_count","args":[{"name":"joystick","doc":null,"default_value":"","external_name":"joystick","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_joystick_getbuttoncount_emS(LibC::UInt.new(joystick), out result)\nreturn result.to_i\n"}},{"id":"get_identification(joystick:Int):Joystick::Identification-class-method","html_id":"get_identification(joystick:Int):Joystick::Identification-class-method","name":"get_identification","doc":"Get the joystick information\n\n* *joystick* - Index of the joystick\n\n*Returns:* Structure containing joystick information.","summary":"<p>Get the joystick information</p>","abstract":false,"args":[{"name":"joystick","doc":null,"default_value":"","external_name":"joystick","restriction":"Int"}],"args_string":"(joystick : Int) : Joystick::Identification","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L730","def":{"name":"get_identification","args":[{"name":"joystick","doc":null,"default_value":"","external_name":"joystick","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Joystick::Identification","visibility":"Public","body":"result = Joystick::Identification.new\nSFMLExt.sfml_joystick_getidentification_emS(LibC::UInt.new(joystick), result)\nreturn result\n"}},{"id":"update-class-method","html_id":"update-class-method","name":"update","doc":"Update the states of all joysticks\n\nThis function is used internally by SFML, so you normally\ndon't have to call it explicitly. However, you may need to\ncall it if you have no window yet (or no window at all):\nin this case the joystick states are not updated automatically.","summary":"<p>Update the states of all joysticks</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L741","def":{"name":"update","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_joystick_update"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Joystick/Axis","path":"SF/Joystick/Axis.html","kind":"enum","full_name":"SF::Joystick::Axis","name":"Axis","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":598,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"X","name":"X","value":"0","doc":"The X axis","summary":"<p>The X axis</p>"},{"id":"Y","name":"Y","value":"1","doc":"The Y axis","summary":"<p>The Y axis</p>"},{"id":"Z","name":"Z","value":"2","doc":"The Z axis","summary":"<p>The Z axis</p>"},{"id":"R","name":"R","value":"3","doc":"The R axis","summary":"<p>The R axis</p>"},{"id":"U","name":"U","value":"4","doc":"The U axis","summary":"<p>The U axis</p>"},{"id":"V","name":"V","value":"5","doc":"The V axis","summary":"<p>The V axis</p>"},{"id":"PovX","name":"PovX","value":"6","doc":"The X axis of the point-of-view hat","summary":"<p>The X axis of the point-of-view hat</p>"},{"id":"PovY","name":"PovY","value":"7","doc":"The Y axis of the point-of-view hat","summary":"<p>The Y axis of the point-of-view hat</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Joystick","kind":"module","full_name":"SF::Joystick","name":"Joystick"},"doc":"Axes supported by SFML joysticks","summary":"<p>Axes supported by SFML joysticks</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"pov_x?-instance-method","html_id":"pov_x?-instance-method","name":"pov_x?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L612","def":{"name":"pov_x?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PovX"}},{"id":"pov_y?-instance-method","html_id":"pov_y?-instance-method","name":"pov_y?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L614","def":{"name":"pov_y?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PovY"}},{"id":"r?-instance-method","html_id":"r?-instance-method","name":"r?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L606","def":{"name":"r?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == R"}},{"id":"u?-instance-method","html_id":"u?-instance-method","name":"u?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L608","def":{"name":"u?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == U"}},{"id":"v?-instance-method","html_id":"v?-instance-method","name":"v?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L610","def":{"name":"v?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == V"}},{"id":"x?-instance-method","html_id":"x?-instance-method","name":"x?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L600","def":{"name":"x?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == X"}},{"id":"y?-instance-method","html_id":"y?-instance-method","name":"y?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L602","def":{"name":"y?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Y"}},{"id":"z?-instance-method","html_id":"z?-instance-method","name":"z?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L604","def":{"name":"z?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Z"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Joystick/Identification","path":"SF/Joystick/Identification.html","kind":"class","full_name":"SF::Joystick::Identification","name":"Identification","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":618,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Joystick","kind":"module","full_name":"SF::Joystick","name":"Joystick"},"doc":"Structure holding a joystick's identification","summary":"<p>Structure holding a joystick's identification</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L624","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:Identification-instance-method","html_id":"dup:Identification-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Identification","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L665","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Identification","visibility":"Public","body":"return Identification.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L620","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_joystick_identification_finalize(to_unsafe)\nSFMLExt.sfml_joystick_identification_free(@this)\n"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Name of the joystick","summary":"<p>Name of the joystick</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L629","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"SFMLExt.sfml_joystick_identification_getname(to_unsafe, out result)\nreturn String.build do |io|\n  while (v = result.value) != '\\u{0}'\n    io << v\n    result = result + 1\n  end\nend\n"}},{"id":"name=(name:String)-instance-method","html_id":"name=(name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L633","def":{"name":"name=","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_joystick_identification_setname_Lnu(to_unsafe, name.size, name.chars)"}},{"id":"product_id:Int32-instance-method","html_id":"product_id:Int32-instance-method","name":"product_id","doc":"Product identifier","summary":"<p>Product identifier</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L645","def":{"name":"product_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_joystick_identification_getproductid(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"product_id=(product_id:Int)-instance-method","html_id":"product_id=(product_id:Int)-instance-method","name":"product_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"product_id","doc":null,"default_value":"","external_name":"product_id","restriction":"Int"}],"args_string":"(product_id : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L649","def":{"name":"product_id=","args":[{"name":"product_id","doc":null,"default_value":"","external_name":"product_id","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_joystick_identification_setproductid_emS(to_unsafe, LibC::UInt.new(product_id))"}},{"id":"vendor_id:Int32-instance-method","html_id":"vendor_id:Int32-instance-method","name":"vendor_id","doc":"Manufacturer identifier","summary":"<p>Manufacturer identifier</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L637","def":{"name":"vendor_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_joystick_identification_getvendorid(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"vendor_id=(vendor_id:Int)-instance-method","html_id":"vendor_id=(vendor_id:Int)-instance-method","name":"vendor_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"vendor_id","doc":null,"default_value":"","external_name":"vendor_id","restriction":"Int"}],"args_string":"(vendor_id : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L641","def":{"name":"vendor_id=","args":[{"name":"vendor_id","doc":null,"default_value":"","external_name":"vendor_id","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_joystick_identification_setvendorid_emS(to_unsafe, LibC::UInt.new(vendor_id))"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/Keyboard","path":"SF/Keyboard.html","kind":"module","full_name":"SF::Keyboard","name":"Keyboard","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"window/obj.cr","line_number":773,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Give access to the real-time state of the keyboard\n\n`SF::Keyboard` provides an interface to the state of the\nkeyboard. It only contains static functions (a single\nkeyboard is assumed), so it's not meant to be instantiated.\n\nThis module allows users to query the keyboard state at any\ntime and directly, without having to deal with a window and\nits events. Compared to the `KeyPressed` and `KeyReleased` events,\n`SF::Keyboard` can retrieve the state of a key at any time\n(you don't need to store and update a boolean on your side\nin order to know if a key is pressed or released), and you\nalways get the real state of the keyboard, even if keys are\npressed or released when your window is out of focus and no\nevent is triggered.\n\nUsage example:\n```\nif SF::Keyboard.key_pressed?(SF::Keyboard::Left)\n  # move left...\nelsif SF::Keyboard.key_pressed?(SF::Keyboard::Right)\n  # move right...\nelsif SF::Keyboard.key_pressed?(SF::Keyboard::Escape)\n  # quit...\nend\n```\n\n*See also:* `SF::Joystick`, `SF::Mouse`, `SF::Touch`","summary":"<p>Give access to the real-time state of the keyboard</p>","class_methods":[{"id":"key_pressed?(key:Keyboard::Key):Bool-class-method","html_id":"key_pressed?(key:Keyboard::Key):Bool-class-method","name":"key_pressed?","doc":"Check if a key is pressed\n\n* *key* - Key to check\n\n*Returns:* True if the key is pressed, false otherwise","summary":"<p>Check if a key is pressed</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Keyboard::Key"}],"args_string":"(key : Keyboard::Key) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L999","def":{"name":"key_pressed?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Keyboard::Key"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_keyboard_iskeypressed_cKW(key, out result)\nreturn result\n"}},{"id":"virtual_keyboard_visible=(visible:Bool)-class-method","html_id":"virtual_keyboard_visible=(visible:Bool)-class-method","name":"virtual_keyboard_visible=","doc":"Show or hide the virtual keyboard\n\nWarning: the virtual keyboard is not supported on all\nsystems. It will typically be implemented on mobile OSes\n(Android, iOS) but not on desktop OSes (Windows, Linux, ...).\n\nIf the virtual keyboard is not available, this function does\nnothing.\n\n* *visible* - True to show, false to hide","summary":"<p>Show or hide the virtual keyboard</p>","abstract":false,"args":[{"name":"visible","doc":null,"default_value":"","external_name":"visible","restriction":"Bool"}],"args_string":"(visible : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1013","def":{"name":"virtual_keyboard_visible=","args":[{"name":"visible","doc":null,"default_value":"","external_name":"visible","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_keyboard_setvirtualkeyboardvisible_GZq(visible)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Keyboard/Key","path":"SF/Keyboard/Key.html","kind":"enum","full_name":"SF::Keyboard::Key","name":"Key","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":775,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"},{"filename":"window/window.cr","line_number":11,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/window.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Unknown","name":"Unknown","value":"-1","doc":"Unhandled key","summary":"<p>Unhandled key</p>"},{"id":"A","name":"A","value":"0","doc":"The A key","summary":"<p>The A key</p>"},{"id":"B","name":"B","value":"1","doc":"The B key","summary":"<p>The B key</p>"},{"id":"C","name":"C","value":"2","doc":"The C key","summary":"<p>The C key</p>"},{"id":"D","name":"D","value":"3","doc":"The D key","summary":"<p>The D key</p>"},{"id":"E","name":"E","value":"4","doc":"The E key","summary":"<p>The E key</p>"},{"id":"F","name":"F","value":"5","doc":"The F key","summary":"<p>The F key</p>"},{"id":"G","name":"G","value":"6","doc":"The G key","summary":"<p>The G key</p>"},{"id":"H","name":"H","value":"7","doc":"The H key","summary":"<p>The H key</p>"},{"id":"I","name":"I","value":"8","doc":"The I key","summary":"<p>The I key</p>"},{"id":"J","name":"J","value":"9","doc":"The J key","summary":"<p>The J key</p>"},{"id":"K","name":"K","value":"10","doc":"The K key","summary":"<p>The K key</p>"},{"id":"L","name":"L","value":"11","doc":"The L key","summary":"<p>The L key</p>"},{"id":"M","name":"M","value":"12","doc":"The M key","summary":"<p>The M key</p>"},{"id":"N","name":"N","value":"13","doc":"The N key","summary":"<p>The N key</p>"},{"id":"O","name":"O","value":"14","doc":"The O key","summary":"<p>The O key</p>"},{"id":"P","name":"P","value":"15","doc":"The P key","summary":"<p>The P key</p>"},{"id":"Q","name":"Q","value":"16","doc":"The Q key","summary":"<p>The Q key</p>"},{"id":"R","name":"R","value":"17","doc":"The R key","summary":"<p>The R key</p>"},{"id":"S","name":"S","value":"18","doc":"The S key","summary":"<p>The S key</p>"},{"id":"T","name":"T","value":"19","doc":"The T key","summary":"<p>The T key</p>"},{"id":"U","name":"U","value":"20","doc":"The U key","summary":"<p>The U key</p>"},{"id":"V","name":"V","value":"21","doc":"The V key","summary":"<p>The V key</p>"},{"id":"W","name":"W","value":"22","doc":"The W key","summary":"<p>The W key</p>"},{"id":"X","name":"X","value":"23","doc":"The X key","summary":"<p>The X key</p>"},{"id":"Y","name":"Y","value":"24","doc":"The Y key","summary":"<p>The Y key</p>"},{"id":"Z","name":"Z","value":"25","doc":"The Z key","summary":"<p>The Z key</p>"},{"id":"Num0","name":"Num0","value":"26","doc":"The 0 key","summary":"<p>The 0 key</p>"},{"id":"Num1","name":"Num1","value":"27","doc":"The 1 key","summary":"<p>The 1 key</p>"},{"id":"Num2","name":"Num2","value":"28","doc":"The 2 key","summary":"<p>The 2 key</p>"},{"id":"Num3","name":"Num3","value":"29","doc":"The 3 key","summary":"<p>The 3 key</p>"},{"id":"Num4","name":"Num4","value":"30","doc":"The 4 key","summary":"<p>The 4 key</p>"},{"id":"Num5","name":"Num5","value":"31","doc":"The 5 key","summary":"<p>The 5 key</p>"},{"id":"Num6","name":"Num6","value":"32","doc":"The 6 key","summary":"<p>The 6 key</p>"},{"id":"Num7","name":"Num7","value":"33","doc":"The 7 key","summary":"<p>The 7 key</p>"},{"id":"Num8","name":"Num8","value":"34","doc":"The 8 key","summary":"<p>The 8 key</p>"},{"id":"Num9","name":"Num9","value":"35","doc":"The 9 key","summary":"<p>The 9 key</p>"},{"id":"Escape","name":"Escape","value":"36","doc":"The Escape key","summary":"<p>The Escape key</p>"},{"id":"LControl","name":"LControl","value":"37","doc":"The left Control key","summary":"<p>The left Control key</p>"},{"id":"LShift","name":"LShift","value":"38","doc":"The left Shift key","summary":"<p>The left Shift key</p>"},{"id":"LAlt","name":"LAlt","value":"39","doc":"The left Alt key","summary":"<p>The left Alt key</p>"},{"id":"LSystem","name":"LSystem","value":"40","doc":"The left OS specific key: window (Windows and Linux), apple (MacOS X), ...","summary":"<p>The left OS specific key: window (Windows and Linux), apple (MacOS X), ...</p>"},{"id":"RControl","name":"RControl","value":"41","doc":"The right Control key","summary":"<p>The right Control key</p>"},{"id":"RShift","name":"RShift","value":"42","doc":"The right Shift key","summary":"<p>The right Shift key</p>"},{"id":"RAlt","name":"RAlt","value":"43","doc":"The right Alt key","summary":"<p>The right Alt key</p>"},{"id":"RSystem","name":"RSystem","value":"44","doc":"The right OS specific key: window (Windows and Linux), apple (MacOS X), ...","summary":"<p>The right OS specific key: window (Windows and Linux), apple (MacOS X), ...</p>"},{"id":"Menu","name":"Menu","value":"45","doc":"The Menu key","summary":"<p>The Menu key</p>"},{"id":"LBracket","name":"LBracket","value":"46","doc":"The [ key","summary":"<p>The [ key</p>"},{"id":"RBracket","name":"RBracket","value":"47","doc":"The ] key","summary":"<p>The ] key</p>"},{"id":"Semicolon","name":"Semicolon","value":"48","doc":"The ; key","summary":"<p>The ; key</p>"},{"id":"Comma","name":"Comma","value":"49","doc":"The , key","summary":"<p>The , key</p>"},{"id":"Period","name":"Period","value":"50","doc":"The . key","summary":"<p>The .</p>"},{"id":"Quote","name":"Quote","value":"51","doc":"The ' key","summary":"<p>The ' key</p>"},{"id":"Slash","name":"Slash","value":"52","doc":"The / key","summary":"<p>The / key</p>"},{"id":"Backslash","name":"Backslash","value":"53","doc":"The \\ key","summary":"<p>The \\ key</p>"},{"id":"Tilde","name":"Tilde","value":"54","doc":"The ~ key","summary":"<p>The ~ key</p>"},{"id":"Equal","name":"Equal","value":"55","doc":"The = key","summary":"<p>The = key</p>"},{"id":"Hyphen","name":"Hyphen","value":"56","doc":"The - key (hyphen)","summary":"<p>The - key (hyphen)</p>"},{"id":"Space","name":"Space","value":"57","doc":"The Space key","summary":"<p>The Space key</p>"},{"id":"Enter","name":"Enter","value":"58","doc":"The Enter/Return keys","summary":"<p>The Enter/Return keys</p>"},{"id":"Backspace","name":"Backspace","value":"59","doc":"The Backspace key","summary":"<p>The Backspace key</p>"},{"id":"Tab","name":"Tab","value":"60","doc":"The Tabulation key","summary":"<p>The Tabulation key</p>"},{"id":"PageUp","name":"PageUp","value":"61","doc":"The Page up key","summary":"<p>The Page up key</p>"},{"id":"PageDown","name":"PageDown","value":"62","doc":"The Page down key","summary":"<p>The Page down key</p>"},{"id":"End","name":"End","value":"63","doc":"The End key","summary":"<p>The End key</p>"},{"id":"Home","name":"Home","value":"64","doc":"The Home key","summary":"<p>The Home key</p>"},{"id":"Insert","name":"Insert","value":"65","doc":"The Insert key","summary":"<p>The Insert key</p>"},{"id":"Delete","name":"Delete","value":"66","doc":"The Delete key","summary":"<p>The Delete key</p>"},{"id":"Add","name":"Add","value":"67","doc":"The + key","summary":"<p>The + key</p>"},{"id":"Subtract","name":"Subtract","value":"68","doc":"The - key (minus, usually from numpad)","summary":"<p>The - key (minus, usually from numpad)</p>"},{"id":"Multiply","name":"Multiply","value":"69","doc":"The * key","summary":"<p>The * key</p>"},{"id":"Divide","name":"Divide","value":"70","doc":"The / key","summary":"<p>The / key</p>"},{"id":"Left","name":"Left","value":"71","doc":"Left arrow","summary":"<p>Left arrow</p>"},{"id":"Right","name":"Right","value":"72","doc":"Right arrow","summary":"<p>Right arrow</p>"},{"id":"Up","name":"Up","value":"73","doc":"Up arrow","summary":"<p>Up arrow</p>"},{"id":"Down","name":"Down","value":"74","doc":"Down arrow","summary":"<p>Down arrow</p>"},{"id":"Numpad0","name":"Numpad0","value":"75","doc":"The numpad 0 key","summary":"<p>The numpad 0 key</p>"},{"id":"Numpad1","name":"Numpad1","value":"76","doc":"The numpad 1 key","summary":"<p>The numpad 1 key</p>"},{"id":"Numpad2","name":"Numpad2","value":"77","doc":"The numpad 2 key","summary":"<p>The numpad 2 key</p>"},{"id":"Numpad3","name":"Numpad3","value":"78","doc":"The numpad 3 key","summary":"<p>The numpad 3 key</p>"},{"id":"Numpad4","name":"Numpad4","value":"79","doc":"The numpad 4 key","summary":"<p>The numpad 4 key</p>"},{"id":"Numpad5","name":"Numpad5","value":"80","doc":"The numpad 5 key","summary":"<p>The numpad 5 key</p>"},{"id":"Numpad6","name":"Numpad6","value":"81","doc":"The numpad 6 key","summary":"<p>The numpad 6 key</p>"},{"id":"Numpad7","name":"Numpad7","value":"82","doc":"The numpad 7 key","summary":"<p>The numpad 7 key</p>"},{"id":"Numpad8","name":"Numpad8","value":"83","doc":"The numpad 8 key","summary":"<p>The numpad 8 key</p>"},{"id":"Numpad9","name":"Numpad9","value":"84","doc":"The numpad 9 key","summary":"<p>The numpad 9 key</p>"},{"id":"F1","name":"F1","value":"85","doc":"The F1 key","summary":"<p>The F1 key</p>"},{"id":"F2","name":"F2","value":"86","doc":"The F2 key","summary":"<p>The F2 key</p>"},{"id":"F3","name":"F3","value":"87","doc":"The F3 key","summary":"<p>The F3 key</p>"},{"id":"F4","name":"F4","value":"88","doc":"The F4 key","summary":"<p>The F4 key</p>"},{"id":"F5","name":"F5","value":"89","doc":"The F5 key","summary":"<p>The F5 key</p>"},{"id":"F6","name":"F6","value":"90","doc":"The F6 key","summary":"<p>The F6 key</p>"},{"id":"F7","name":"F7","value":"91","doc":"The F7 key","summary":"<p>The F7 key</p>"},{"id":"F8","name":"F8","value":"92","doc":"The F8 key","summary":"<p>The F8 key</p>"},{"id":"F9","name":"F9","value":"93","doc":"The F9 key","summary":"<p>The F9 key</p>"},{"id":"F10","name":"F10","value":"94","doc":"The F10 key","summary":"<p>The F10 key</p>"},{"id":"F11","name":"F11","value":"95","doc":"The F11 key","summary":"<p>The F11 key</p>"},{"id":"F12","name":"F12","value":"96","doc":"The F12 key","summary":"<p>The F12 key</p>"},{"id":"F13","name":"F13","value":"97","doc":"The F13 key","summary":"<p>The F13 key</p>"},{"id":"F14","name":"F14","value":"98","doc":"The F14 key","summary":"<p>The F14 key</p>"},{"id":"F15","name":"F15","value":"99","doc":"The F15 key","summary":"<p>The F15 key</p>"},{"id":"Pause","name":"Pause","value":"100","doc":"The Pause key","summary":"<p>The Pause key</p>"},{"id":"KeyCount","name":"KeyCount","value":"101","doc":"Keep last -- the total number of keyboard keys","summary":"<p>Keep last -- the total number of keyboard keys</p>"},{"id":"Dash","name":"Dash","value":"56","doc":"DEPRECATED: Use Hyphen instead","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use Hyphen instead</p>"},{"id":"BackSpace","name":"BackSpace","value":"59","doc":"DEPRECATED: Use Backspace instead","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use Backspace instead</p>"},{"id":"BackSlash","name":"BackSlash","value":"53","doc":"DEPRECATED: Use Backslash instead","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use Backslash instead</p>"},{"id":"SemiColon","name":"SemiColon","value":"48","doc":"DEPRECATED: Use Semicolon instead","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use Semicolon instead</p>"},{"id":"Return","name":"Return","value":"58","doc":"DEPRECATED: Use Enter instead","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use Enter instead</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Keyboard","kind":"module","full_name":"SF::Keyboard","name":"Keyboard"},"doc":"Key codes","summary":"<p>Key codes</p>","class_methods":[],"constructors":[{"id":"parse?(string):self?-class-method","html_id":"parse?(string):self?-class-method","name":"parse?","doc":"Same as `Enum#parse?` but with a workaround to skip duplicate names","summary":"<p>Same as <code>Enum#parse?</code> but with a workaround to skip duplicate names</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"args_string":"(string) : <span class=\"k\">self</span>?","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/window.cr#L13","def":{"name":"parse?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"{% if true %}\n        {% seen = [] of StringLiteral %}\n        case string.camelcase.downcase\n        {% for member in @type.constants %}\n          {% member_snake = member.stringify.camelcase.downcase %}\n          {% if !(seen.includes?(member_snake)) %}\n            when {{ member_snake }}\n              {{ @type }}::{{ member }}\n            {% seen << member_snake %}\n          {% end %}\n        {% end %}\n        else nil\n        end\n      {% end %}"}}],"instance_methods":[{"id":"a?-instance-method","html_id":"a?-instance-method","name":"a?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L779","def":{"name":"a?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == A"}},{"id":"add?-instance-method","html_id":"add?-instance-method","name":"add?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L913","def":{"name":"add?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Add"}},{"id":"b?-instance-method","html_id":"b?-instance-method","name":"b?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L781","def":{"name":"b?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == B"}},{"id":"back_slash?-instance-method","html_id":"back_slash?-instance-method","name":"back_slash?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L987","def":{"name":"back_slash?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == BackSlash"}},{"id":"back_space?-instance-method","html_id":"back_space?-instance-method","name":"back_space?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L985","def":{"name":"back_space?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == BackSpace"}},{"id":"backslash?-instance-method","html_id":"backslash?-instance-method","name":"backslash?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L885","def":{"name":"backslash?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Backslash"}},{"id":"backspace?-instance-method","html_id":"backspace?-instance-method","name":"backspace?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L897","def":{"name":"backspace?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Backspace"}},{"id":"c?-instance-method","html_id":"c?-instance-method","name":"c?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L783","def":{"name":"c?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == C"}},{"id":"comma?-instance-method","html_id":"comma?-instance-method","name":"comma?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L877","def":{"name":"comma?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Comma"}},{"id":"d?-instance-method","html_id":"d?-instance-method","name":"d?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L785","def":{"name":"d?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == D"}},{"id":"dash?-instance-method","html_id":"dash?-instance-method","name":"dash?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L983","def":{"name":"dash?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Dash"}},{"id":"delete?-instance-method","html_id":"delete?-instance-method","name":"delete?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L911","def":{"name":"delete?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Delete"}},{"id":"divide?-instance-method","html_id":"divide?-instance-method","name":"divide?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L919","def":{"name":"divide?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Divide"}},{"id":"down?-instance-method","html_id":"down?-instance-method","name":"down?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L927","def":{"name":"down?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Down"}},{"id":"e?-instance-method","html_id":"e?-instance-method","name":"e?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L787","def":{"name":"e?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == E"}},{"id":"end?-instance-method","html_id":"end?-instance-method","name":"end?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L905","def":{"name":"end?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == End"}},{"id":"enter?-instance-method","html_id":"enter?-instance-method","name":"enter?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L895","def":{"name":"enter?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Enter"}},{"id":"equal?-instance-method","html_id":"equal?-instance-method","name":"equal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L889","def":{"name":"equal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Equal"}},{"id":"escape?-instance-method","html_id":"escape?-instance-method","name":"escape?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L851","def":{"name":"escape?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Escape"}},{"id":"f10?-instance-method","html_id":"f10?-instance-method","name":"f10?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L967","def":{"name":"f10?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F10"}},{"id":"f11?-instance-method","html_id":"f11?-instance-method","name":"f11?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L969","def":{"name":"f11?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F11"}},{"id":"f12?-instance-method","html_id":"f12?-instance-method","name":"f12?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L971","def":{"name":"f12?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F12"}},{"id":"f13?-instance-method","html_id":"f13?-instance-method","name":"f13?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L973","def":{"name":"f13?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F13"}},{"id":"f14?-instance-method","html_id":"f14?-instance-method","name":"f14?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L975","def":{"name":"f14?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F14"}},{"id":"f15?-instance-method","html_id":"f15?-instance-method","name":"f15?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L977","def":{"name":"f15?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F15"}},{"id":"f1?-instance-method","html_id":"f1?-instance-method","name":"f1?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L949","def":{"name":"f1?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F1"}},{"id":"f2?-instance-method","html_id":"f2?-instance-method","name":"f2?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L951","def":{"name":"f2?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F2"}},{"id":"f3?-instance-method","html_id":"f3?-instance-method","name":"f3?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L953","def":{"name":"f3?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F3"}},{"id":"f4?-instance-method","html_id":"f4?-instance-method","name":"f4?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L955","def":{"name":"f4?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F4"}},{"id":"f5?-instance-method","html_id":"f5?-instance-method","name":"f5?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L957","def":{"name":"f5?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F5"}},{"id":"f6?-instance-method","html_id":"f6?-instance-method","name":"f6?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L959","def":{"name":"f6?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F6"}},{"id":"f7?-instance-method","html_id":"f7?-instance-method","name":"f7?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L961","def":{"name":"f7?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F7"}},{"id":"f8?-instance-method","html_id":"f8?-instance-method","name":"f8?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L963","def":{"name":"f8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F8"}},{"id":"f9?-instance-method","html_id":"f9?-instance-method","name":"f9?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L965","def":{"name":"f9?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F9"}},{"id":"f?-instance-method","html_id":"f?-instance-method","name":"f?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L789","def":{"name":"f?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == F"}},{"id":"g?-instance-method","html_id":"g?-instance-method","name":"g?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L791","def":{"name":"g?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == G"}},{"id":"h?-instance-method","html_id":"h?-instance-method","name":"h?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L793","def":{"name":"h?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == H"}},{"id":"home?-instance-method","html_id":"home?-instance-method","name":"home?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L907","def":{"name":"home?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Home"}},{"id":"hyphen?-instance-method","html_id":"hyphen?-instance-method","name":"hyphen?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L891","def":{"name":"hyphen?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Hyphen"}},{"id":"i?-instance-method","html_id":"i?-instance-method","name":"i?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L795","def":{"name":"i?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == I"}},{"id":"insert?-instance-method","html_id":"insert?-instance-method","name":"insert?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L909","def":{"name":"insert?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Insert"}},{"id":"j?-instance-method","html_id":"j?-instance-method","name":"j?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L797","def":{"name":"j?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == J"}},{"id":"k?-instance-method","html_id":"k?-instance-method","name":"k?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L799","def":{"name":"k?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == K"}},{"id":"key_count?-instance-method","html_id":"key_count?-instance-method","name":"key_count?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L981","def":{"name":"key_count?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == KeyCount"}},{"id":"l?-instance-method","html_id":"l?-instance-method","name":"l?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L801","def":{"name":"l?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == L"}},{"id":"l_alt?-instance-method","html_id":"l_alt?-instance-method","name":"l_alt?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L857","def":{"name":"l_alt?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LAlt"}},{"id":"l_bracket?-instance-method","html_id":"l_bracket?-instance-method","name":"l_bracket?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L871","def":{"name":"l_bracket?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LBracket"}},{"id":"l_control?-instance-method","html_id":"l_control?-instance-method","name":"l_control?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L853","def":{"name":"l_control?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LControl"}},{"id":"l_shift?-instance-method","html_id":"l_shift?-instance-method","name":"l_shift?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L855","def":{"name":"l_shift?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LShift"}},{"id":"l_system?-instance-method","html_id":"l_system?-instance-method","name":"l_system?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L859","def":{"name":"l_system?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LSystem"}},{"id":"left?-instance-method","html_id":"left?-instance-method","name":"left?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L921","def":{"name":"left?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Left"}},{"id":"m?-instance-method","html_id":"m?-instance-method","name":"m?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L803","def":{"name":"m?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == M"}},{"id":"menu?-instance-method","html_id":"menu?-instance-method","name":"menu?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L869","def":{"name":"menu?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Menu"}},{"id":"multiply?-instance-method","html_id":"multiply?-instance-method","name":"multiply?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L917","def":{"name":"multiply?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Multiply"}},{"id":"n?-instance-method","html_id":"n?-instance-method","name":"n?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L805","def":{"name":"n?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == N"}},{"id":"num0?-instance-method","html_id":"num0?-instance-method","name":"num0?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L831","def":{"name":"num0?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Num0"}},{"id":"num1?-instance-method","html_id":"num1?-instance-method","name":"num1?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L833","def":{"name":"num1?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Num1"}},{"id":"num2?-instance-method","html_id":"num2?-instance-method","name":"num2?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L835","def":{"name":"num2?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Num2"}},{"id":"num3?-instance-method","html_id":"num3?-instance-method","name":"num3?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L837","def":{"name":"num3?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Num3"}},{"id":"num4?-instance-method","html_id":"num4?-instance-method","name":"num4?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L839","def":{"name":"num4?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Num4"}},{"id":"num5?-instance-method","html_id":"num5?-instance-method","name":"num5?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L841","def":{"name":"num5?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Num5"}},{"id":"num6?-instance-method","html_id":"num6?-instance-method","name":"num6?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L843","def":{"name":"num6?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Num6"}},{"id":"num7?-instance-method","html_id":"num7?-instance-method","name":"num7?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L845","def":{"name":"num7?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Num7"}},{"id":"num8?-instance-method","html_id":"num8?-instance-method","name":"num8?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L847","def":{"name":"num8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Num8"}},{"id":"num9?-instance-method","html_id":"num9?-instance-method","name":"num9?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L849","def":{"name":"num9?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Num9"}},{"id":"numpad0?-instance-method","html_id":"numpad0?-instance-method","name":"numpad0?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L929","def":{"name":"numpad0?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Numpad0"}},{"id":"numpad1?-instance-method","html_id":"numpad1?-instance-method","name":"numpad1?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L931","def":{"name":"numpad1?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Numpad1"}},{"id":"numpad2?-instance-method","html_id":"numpad2?-instance-method","name":"numpad2?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L933","def":{"name":"numpad2?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Numpad2"}},{"id":"numpad3?-instance-method","html_id":"numpad3?-instance-method","name":"numpad3?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L935","def":{"name":"numpad3?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Numpad3"}},{"id":"numpad4?-instance-method","html_id":"numpad4?-instance-method","name":"numpad4?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L937","def":{"name":"numpad4?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Numpad4"}},{"id":"numpad5?-instance-method","html_id":"numpad5?-instance-method","name":"numpad5?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L939","def":{"name":"numpad5?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Numpad5"}},{"id":"numpad6?-instance-method","html_id":"numpad6?-instance-method","name":"numpad6?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L941","def":{"name":"numpad6?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Numpad6"}},{"id":"numpad7?-instance-method","html_id":"numpad7?-instance-method","name":"numpad7?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L943","def":{"name":"numpad7?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Numpad7"}},{"id":"numpad8?-instance-method","html_id":"numpad8?-instance-method","name":"numpad8?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L945","def":{"name":"numpad8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Numpad8"}},{"id":"numpad9?-instance-method","html_id":"numpad9?-instance-method","name":"numpad9?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L947","def":{"name":"numpad9?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Numpad9"}},{"id":"o?-instance-method","html_id":"o?-instance-method","name":"o?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L807","def":{"name":"o?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == O"}},{"id":"p?-instance-method","html_id":"p?-instance-method","name":"p?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L809","def":{"name":"p?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == P"}},{"id":"page_down?-instance-method","html_id":"page_down?-instance-method","name":"page_down?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L903","def":{"name":"page_down?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PageDown"}},{"id":"page_up?-instance-method","html_id":"page_up?-instance-method","name":"page_up?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L901","def":{"name":"page_up?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PageUp"}},{"id":"pause?-instance-method","html_id":"pause?-instance-method","name":"pause?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L979","def":{"name":"pause?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Pause"}},{"id":"period?-instance-method","html_id":"period?-instance-method","name":"period?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L879","def":{"name":"period?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Period"}},{"id":"q?-instance-method","html_id":"q?-instance-method","name":"q?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L811","def":{"name":"q?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Q"}},{"id":"quote?-instance-method","html_id":"quote?-instance-method","name":"quote?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L881","def":{"name":"quote?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Quote"}},{"id":"r?-instance-method","html_id":"r?-instance-method","name":"r?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L813","def":{"name":"r?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == R"}},{"id":"r_alt?-instance-method","html_id":"r_alt?-instance-method","name":"r_alt?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L865","def":{"name":"r_alt?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RAlt"}},{"id":"r_bracket?-instance-method","html_id":"r_bracket?-instance-method","name":"r_bracket?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L873","def":{"name":"r_bracket?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RBracket"}},{"id":"r_control?-instance-method","html_id":"r_control?-instance-method","name":"r_control?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L861","def":{"name":"r_control?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RControl"}},{"id":"r_shift?-instance-method","html_id":"r_shift?-instance-method","name":"r_shift?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L863","def":{"name":"r_shift?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RShift"}},{"id":"r_system?-instance-method","html_id":"r_system?-instance-method","name":"r_system?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L867","def":{"name":"r_system?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RSystem"}},{"id":"return?-instance-method","html_id":"return?-instance-method","name":"return?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L991","def":{"name":"return?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Return"}},{"id":"right?-instance-method","html_id":"right?-instance-method","name":"right?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L923","def":{"name":"right?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Right"}},{"id":"s?-instance-method","html_id":"s?-instance-method","name":"s?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L815","def":{"name":"s?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == S"}},{"id":"semi_colon?-instance-method","html_id":"semi_colon?-instance-method","name":"semi_colon?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L989","def":{"name":"semi_colon?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SemiColon"}},{"id":"semicolon?-instance-method","html_id":"semicolon?-instance-method","name":"semicolon?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L875","def":{"name":"semicolon?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Semicolon"}},{"id":"slash?-instance-method","html_id":"slash?-instance-method","name":"slash?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L883","def":{"name":"slash?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Slash"}},{"id":"space?-instance-method","html_id":"space?-instance-method","name":"space?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L893","def":{"name":"space?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Space"}},{"id":"subtract?-instance-method","html_id":"subtract?-instance-method","name":"subtract?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L915","def":{"name":"subtract?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Subtract"}},{"id":"t?-instance-method","html_id":"t?-instance-method","name":"t?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L817","def":{"name":"t?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == T"}},{"id":"tab?-instance-method","html_id":"tab?-instance-method","name":"tab?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L899","def":{"name":"tab?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Tab"}},{"id":"tilde?-instance-method","html_id":"tilde?-instance-method","name":"tilde?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L887","def":{"name":"tilde?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Tilde"}},{"id":"u?-instance-method","html_id":"u?-instance-method","name":"u?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L819","def":{"name":"u?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == U"}},{"id":"unknown?-instance-method","html_id":"unknown?-instance-method","name":"unknown?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L777","def":{"name":"unknown?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Unknown"}},{"id":"up?-instance-method","html_id":"up?-instance-method","name":"up?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L925","def":{"name":"up?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Up"}},{"id":"v?-instance-method","html_id":"v?-instance-method","name":"v?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L821","def":{"name":"v?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == V"}},{"id":"w?-instance-method","html_id":"w?-instance-method","name":"w?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L823","def":{"name":"w?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == W"}},{"id":"x?-instance-method","html_id":"x?-instance-method","name":"x?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L825","def":{"name":"x?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == X"}},{"id":"y?-instance-method","html_id":"y?-instance-method","name":"y?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L827","def":{"name":"y?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Y"}},{"id":"z?-instance-method","html_id":"z?-instance-method","name":"z?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L829","def":{"name":"z?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Z"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/Listener","path":"SF/Listener.html","kind":"module","full_name":"SF::Listener","name":"Listener","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"audio/obj.cr","line_number":33,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"The audio listener is the point in the scene\nfrom where all the sounds are heard\n\nThe audio listener defines the global properties of the\naudio environment, it defines where and how sounds and musics\nare heard. If `SF::View` is the eyes of the user, then `SF::Listener`\nis his ears (by the way, they are often linked together --\nsame position, orientation, etc.).\n\n`SF::Listener` is a simple interface, which allows to setup the\nlistener in the 3D audio environment (position, direction and\nup vector), and to adjust the global volume.\n\nBecause the listener is unique in the scene, `SF::Listener` only\ncontains static functions and doesn't have to be instantiated.\n\nUsage example:\n```\n# Move the listener to the position (1, 0, -5)\nSF::Listener.set_position(1, 0, -5)\n\n# Make it face the right axis (1, 0, 0)\nSF::Listener.direction = SF.vector3f(1, 0, 0)\n\n# Reduce the global volume\nSF::Listener.global_volume = 50\n```","summary":"<p>The audio listener is the point in the scene from where all the sounds are heard</p>","class_methods":[{"id":"direction:Vector3f-class-method","html_id":"direction:Vector3f-class-method","name":"direction","doc":"Get the current forward vector of the listener in the scene\n\n*Returns:* Listener's forward vector (not normalized)\n\n*See also:* `direction=`","summary":"<p>Get the current forward vector of the listener in the scene</p>","abstract":false,"args":[],"args_string":" : Vector3f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L124","def":{"name":"direction","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector3f","visibility":"Public","body":"result = Vector3f.allocate\nSFMLExt.sfml_listener_getdirection(result)\nreturn result\n"}},{"id":"direction=(direction:Vector3f)-class-method","html_id":"direction=(direction:Vector3f)-class-method","name":"direction=","doc":"Set the forward vector of the listener in the scene\n\nThe direction (also called \"at vector\") is the vector\npointing forward from the listener's perspective. Together\nwith the up vector, it defines the 3D orientation of the\nlistener in the scene. The direction vector doesn't\nhave to be normalized.\nThe default listener's direction is (0, 0, -1).\n\n* *direction* - New listener's direction\n\n*See also:* `direction`, `up_vector=`, `position=`","summary":"<p>Set the forward vector of the listener in the scene</p>","abstract":false,"args":[{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Vector3f"}],"args_string":"(direction : Vector3f)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L116","def":{"name":"direction=","args":[{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Vector3f"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_listener_setdirection_NzM(direction)"}},{"id":"global_volume:Float32-class-method","html_id":"global_volume:Float32-class-method","name":"global_volume","doc":"Get the current value of the global volume\n\n*Returns:* Current global volume, in the range `0..100`\n\n*See also:* `global_volume=`","summary":"<p>Get the current value of the global volume</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L51","def":{"name":"global_volume","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_listener_getglobalvolume(out result)\nreturn result\n"}},{"id":"global_volume=(volume:Number)-class-method","html_id":"global_volume=(volume:Number)-class-method","name":"global_volume=","doc":"Change the global volume of all the sounds and musics\n\nThe volume is a number between 0 and 100; it is combined with\nthe individual volume of each sound / music.\nThe default value for the volume is 100 (maximum).\n\n* *volume* - New global volume, in the range `0..100`\n\n*See also:* `global_volume`","summary":"<p>Change the global volume of all the sounds and musics</p>","abstract":false,"args":[{"name":"volume","doc":null,"default_value":"","external_name":"volume","restriction":"Number"}],"args_string":"(volume : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L43","def":{"name":"global_volume=","args":[{"name":"volume","doc":null,"default_value":"","external_name":"volume","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_listener_setglobalvolume_Bw9(LibC::Float.new(volume))"}},{"id":"position:Vector3f-class-method","html_id":"position:Vector3f-class-method","name":"position","doc":"Get the current position of the listener in the scene\n\n*Returns:* Listener's position\n\n*See also:* `position=`","summary":"<p>Get the current position of the listener in the scene</p>","abstract":false,"args":[],"args_string":" : Vector3f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L82","def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector3f","visibility":"Public","body":"result = Vector3f.allocate\nSFMLExt.sfml_listener_getposition(result)\nreturn result\n"}},{"id":"position=(position:Vector3f)-class-method","html_id":"position=(position:Vector3f)-class-method","name":"position=","doc":"Set the position of the listener in the scene\n\nThe default listener's position is (0, 0, 0).\n\n* *position* - New listener's position\n\n*See also:* `position`, `direction=`","summary":"<p>Set the position of the listener in the scene</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector3f"}],"args_string":"(position : Vector3f)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L74","def":{"name":"position=","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector3f"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_listener_setposition_NzM(position)"}},{"id":"set_direction(x:Number,y:Number,z:Number)-class-method","html_id":"set_direction(x:Number,y:Number,z:Number)-class-method","name":"set_direction","doc":"Set the forward vector of the listener in the scene\n\nThe direction (also called \"at vector\") is the vector\npointing forward from the listener's perspective. Together\nwith the up vector, it defines the 3D orientation of the\nlistener in the scene. The direction vector doesn't\nhave to be normalized.\nThe default listener's direction is (0, 0, -1).\n\n* *x* - X coordinate of the listener's direction\n* *y* - Y coordinate of the listener's direction\n* *z* - Z coordinate of the listener's direction\n\n*See also:* `direction`, `up_vector=`, `position=`","summary":"<p>Set the forward vector of the listener in the scene</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"args_string":"(x : Number, y : Number, z : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L101","def":{"name":"set_direction","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_listener_setdirection_Bw9Bw9Bw9(LibC::Float.new(x), LibC::Float.new(y), LibC::Float.new(z))"}},{"id":"set_position(x:Number,y:Number,z:Number)-class-method","html_id":"set_position(x:Number,y:Number,z:Number)-class-method","name":"set_position","doc":"Set the position of the listener in the scene\n\nThe default listener's position is (0, 0, 0).\n\n* *x* - X coordinate of the listener's position\n* *y* - Y coordinate of the listener's position\n* *z* - Z coordinate of the listener's position\n\n*See also:* `position`, `direction=`","summary":"<p>Set the position of the listener in the scene</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"args_string":"(x : Number, y : Number, z : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L64","def":{"name":"set_position","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_listener_setposition_Bw9Bw9Bw9(LibC::Float.new(x), LibC::Float.new(y), LibC::Float.new(z))"}},{"id":"set_up_vector(x:Number,y:Number,z:Number)-class-method","html_id":"set_up_vector(x:Number,y:Number,z:Number)-class-method","name":"set_up_vector","doc":"Set the upward vector of the listener in the scene\n\nThe up vector is the vector that points upward from the\nlistener's perspective. Together with the direction, it\ndefines the 3D orientation of the listener in the scene.\nThe up vector doesn't have to be normalized.\nThe default listener's up vector is (0, 1, 0). It is usually\nnot necessary to change it, especially in 2D scenarios.\n\n* *x* - X coordinate of the listener's up vector\n* *y* - Y coordinate of the listener's up vector\n* *z* - Z coordinate of the listener's up vector\n\n*See also:* `up_vector`, `direction=`, `position=`","summary":"<p>Set the upward vector of the listener in the scene</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"args_string":"(x : Number, y : Number, z : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L143","def":{"name":"set_up_vector","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_listener_setupvector_Bw9Bw9Bw9(LibC::Float.new(x), LibC::Float.new(y), LibC::Float.new(z))"}},{"id":"up_vector:Vector3f-class-method","html_id":"up_vector:Vector3f-class-method","name":"up_vector","doc":"Get the current upward vector of the listener in the scene\n\n*Returns:* Listener's upward vector (not normalized)\n\n*See also:* `up_vector=`","summary":"<p>Get the current upward vector of the listener in the scene</p>","abstract":false,"args":[],"args_string":" : Vector3f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L166","def":{"name":"up_vector","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector3f","visibility":"Public","body":"result = Vector3f.allocate\nSFMLExt.sfml_listener_getupvector(result)\nreturn result\n"}},{"id":"up_vector=(up_vector:Vector3f)-class-method","html_id":"up_vector=(up_vector:Vector3f)-class-method","name":"up_vector=","doc":"Set the upward vector of the listener in the scene\n\nThe up vector is the vector that points upward from the\nlistener's perspective. Together with the direction, it\ndefines the 3D orientation of the listener in the scene.\nThe up vector doesn't have to be normalized.\nThe default listener's up vector is (0, 1, 0). It is usually\nnot necessary to change it, especially in 2D scenarios.\n\n* *up_vector* - New listener's up vector\n\n*See also:* `up_vector`, `direction=`, `position=`","summary":"<p>Set the upward vector of the listener in the scene</p>","abstract":false,"args":[{"name":"up_vector","doc":null,"default_value":"","external_name":"up_vector","restriction":"Vector3f"}],"args_string":"(up_vector : Vector3f)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L158","def":{"name":"up_vector=","args":[{"name":"up_vector","doc":null,"default_value":"","external_name":"up_vector","restriction":"Vector3f"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_listener_setupvector_NzM(up_vector)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/MemoryInputStream","path":"SF/MemoryInputStream.html","kind":"class","full_name":"SF::MemoryInputStream","name":"MemoryInputStream","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/InputStream","kind":"class","full_name":"SF::InputStream","name":"InputStream"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/InputStream","kind":"class","full_name":"SF::InputStream","name":"InputStream"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"system/obj.cr","line_number":602,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Implementation of input stream based on a memory chunk\n\nThis class is a specialization of InputStream that\nreads from data in memory.\n\nIt wraps a memory chunk in the common InputStream interface\nand therefore allows to use generic classes or functions\nthat accept such a stream, with content already loaded in memory.\n\nIn addition to the virtual functions inherited from\nInputStream, MemoryInputStream adds a function to\nspecify the pointer and size of the data in memory.\n\nSFML resource classes can usually be loaded directly from\nmemory, so this class shouldn't be useful to you unless\nyou create your own algorithms that operate on an InputStream.\n\nUsage example:\n```\ndef process(stream : InputStream)\nend\n\nstream = SF::MemoryInputStream.open(slice)\nprocess(stream)\n```\n\nInputStream, FileInputStream","summary":"<p>Implementation of input stream based on a memory chunk</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L609","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"open(*args,**kwargs):self-class-method","html_id":"open(*args,**kwargs):self-class-method","name":"open","doc":"Shorthand for `memory_input_stream = MemoryInputStream.new; memory_input_stream.open(...); memory_input_stream`","summary":"<p>Shorthand for <code>memory_input_stream = <a href=\"../SF/MemoryInputStream.html#new-class-method\">MemoryInputStream.new</a>; memory_input_stream<a href=\"../SF/MemoryInputStream.html#open(*args,**kwargs):self-class-method\">.open(...)</a>; memory_input_stream</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L620","def":{"name":"open","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nobj.open(*args, **kwargs)\nobj\n"}}],"instance_methods":[{"id":"dup:MemoryInputStream-instance-method","html_id":"dup:MemoryInputStream-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : MemoryInputStream","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L673","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MemoryInputStream","visibility":"Public","body":"return MemoryInputStream.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L604","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_memoryinputstream_finalize(to_unsafe)\nSFMLExt.sfml_memoryinputstream_free(@this)\n"}},{"id":"open(data:Slice)-instance-method","html_id":"open(data:Slice)-instance-method","name":"open","doc":"Open the stream from its data\n\n* *data* - Pointer to the data in memory","summary":"<p>Open the stream from its data</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L616","def":{"name":"open","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_memoryinputstream_open_5h8vgv(to_unsafe, data, data.bytesize)"}},{"id":"read(data:Slice):Int64-instance-method","html_id":"read(data:Slice):Int64-instance-method","name":"read","doc":"Read data from the stream\n\nAfter reading, the stream's reading position must be\nadvanced by the amount of bytes read.\n\n* *data* - Buffer where to copy the read data\n\n*Returns:* The number of bytes actually read, or -1 on error","summary":"<p>Read data from the stream</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice) : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L633","def":{"name":"read","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"SFMLExt.sfml_memoryinputstream_read_xALG4x(to_unsafe, data, data.bytesize, out result)\nreturn result\n"}},{"id":"seek(position:Int):Int64-instance-method","html_id":"seek(position:Int):Int64-instance-method","name":"seek","doc":"Change the current reading position\n\n* *position* - The position to seek to, from the beginning\n\n*Returns:* The position actually sought to, or -1 on error","summary":"<p>Change the current reading position</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"args_string":"(position : Int) : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L642","def":{"name":"seek","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"SFMLExt.sfml_memoryinputstream_seek_G4x(to_unsafe, Int64.new(position), out result)\nreturn result\n"}},{"id":"size:Int64-instance-method","html_id":"size:Int64-instance-method","name":"size","doc":"Return the size of the stream\n\n*Returns:* The total number of bytes available in the stream, or -1 on error","summary":"<p>Return the size of the stream</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L656","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"SFMLExt.sfml_memoryinputstream_getsize(to_unsafe, out result)\nreturn result\n"}},{"id":"tell:Int64-instance-method","html_id":"tell:Int64-instance-method","name":"tell","doc":"Get the current reading position in the stream\n\n*Returns:* The current position, or -1 on error.","summary":"<p>Get the current reading position in the stream</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L649","def":{"name":"tell","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"SFMLExt.sfml_memoryinputstream_tell(to_unsafe, out result)\nreturn result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Mouse","path":"SF/Mouse.html","kind":"module","full_name":"SF::Mouse","name":"Mouse","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"window/obj.cr","line_number":1054,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Give access to the real-time state of the mouse\n\n`SF::Mouse` provides an interface to the state of the\nmouse. It only contains static functions (a single\nmouse is assumed), so it's not meant to be instantiated.\n\nThis module allows users to query the mouse state at any\ntime and directly, without having to deal with a window and\nits events. Compared to the `MouseMoved`, `MouseButtonPressed`\nand `MouseButtonReleased` events, `SF::Mouse` can retrieve the\nstate of the cursor and the buttons at any time\n(you don't need to store and update a boolean on your side\nin order to know if a button is pressed or released), and you\nalways get the real state of the mouse, even if it is\nmoved, pressed or released when your window is out of focus\nand no event is triggered.\n\nThe position= and position functions can be used to change\nor retrieve the current position of the mouse pointer. There are\ntwo versions: one that operates in global coordinates (relative\nto the desktop) and one that operates in window coordinates\n(relative to a specific window).\n\nUsage example:\n```\nif SF::Mouse.button_pressed?(SF::Mouse::Left)\n  # left click...\nend\n\n# get global mouse position\nposition = SF::Mouse.position\n\n# set mouse position relative to a window\nSF::Mouse.set_position(SF.vector2i(100, 200), window)\n```\n\n*See also:* `SF::Joystick`, `SF::Keyboard`, `SF::Touch`","summary":"<p>Give access to the real-time state of the mouse</p>","class_methods":[{"id":"button_pressed?(button:Mouse::Button):Bool-class-method","html_id":"button_pressed?(button:Mouse::Button):Bool-class-method","name":"button_pressed?","doc":"Check if a mouse button is pressed\n\n* *button* - Button to check\n\n*Returns:* True if the button is pressed, false otherwise","summary":"<p>Check if a mouse button is pressed</p>","abstract":false,"args":[{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"Mouse::Button"}],"args_string":"(button : Mouse::Button) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1084","def":{"name":"button_pressed?","args":[{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"Mouse::Button"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_mouse_isbuttonpressed_Zxg(button, out result)\nreturn result\n"}},{"id":"get_position(relative_to:Window):Vector2i-class-method","html_id":"get_position(relative_to:Window):Vector2i-class-method","name":"get_position","doc":"Get the current position of the mouse in window coordinates\n\nThis function returns the current position of the mouse\ncursor, relative to the given window.\n\n* *relative_to* - Reference window\n\n*Returns:* Current position of the mouse","summary":"<p>Get the current position of the mouse in window coordinates</p>","abstract":false,"args":[{"name":"relative_to","doc":null,"default_value":"","external_name":"relative_to","restriction":"Window"}],"args_string":"(relative_to : Window) : Vector2i","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1107","def":{"name":"get_position","args":[{"name":"relative_to","doc":null,"default_value":"","external_name":"relative_to","restriction":"Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2i","visibility":"Public","body":"result = Vector2i.allocate\nSFMLExt.sfml_mouse_getposition_JRh(relative_to, result)\nreturn result\n"}},{"id":"position:Vector2i-class-method","html_id":"position:Vector2i-class-method","name":"position","doc":"Get the current position of the mouse in desktop coordinates\n\nThis function returns the global position of the mouse\ncursor on the desktop.\n\n*Returns:* Current position of the mouse","summary":"<p>Get the current position of the mouse in desktop coordinates</p>","abstract":false,"args":[],"args_string":" : Vector2i","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1094","def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2i","visibility":"Public","body":"result = Vector2i.allocate\nSFMLExt.sfml_mouse_getposition(result)\nreturn result\n"}},{"id":"position=(position:Vector2|Tuple)-class-method","html_id":"position=(position:Vector2|Tuple)-class-method","name":"position=","doc":"Set the current position of the mouse in desktop coordinates\n\nThis function sets the global position of the mouse\ncursor on the desktop.\n\n* *position* - New position of the mouse","summary":"<p>Set the current position of the mouse in desktop coordinates</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"}],"args_string":"(position : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1118","def":{"name":"position=","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"position = Vector2i.new(position[0].to_i32, position[1].to_i32)\nSFMLExt.sfml_mouse_setposition_ufV(position)\n"}},{"id":"set_position(position:Vector2|Tuple,relative_to:Window)-class-method","html_id":"set_position(position:Vector2|Tuple,relative_to:Window)-class-method","name":"set_position","doc":"Set the current position of the mouse in window coordinates\n\nThis function sets the current position of the mouse\ncursor, relative to the given window.\n\n* *position* - New position of the mouse\n* *relative_to* - Reference window","summary":"<p>Set the current position of the mouse in window coordinates</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"},{"name":"relative_to","doc":null,"default_value":"","external_name":"relative_to","restriction":"Window"}],"args_string":"(position : Vector2 | Tuple, relative_to : Window)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1129","def":{"name":"set_position","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"},{"name":"relative_to","doc":null,"default_value":"","external_name":"relative_to","restriction":"Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"position = Vector2i.new(position[0].to_i32, position[1].to_i32)\nSFMLExt.sfml_mouse_setposition_ufVJRh(position, relative_to)\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Mouse/Button","path":"SF/Mouse/Button.html","kind":"enum","full_name":"SF::Mouse::Button","name":"Button","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1056,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Left","name":"Left","value":"0","doc":"The left mouse button","summary":"<p>The left mouse button</p>"},{"id":"Right","name":"Right","value":"1","doc":"The right mouse button","summary":"<p>The right mouse button</p>"},{"id":"Middle","name":"Middle","value":"2","doc":"The middle (wheel) mouse button","summary":"<p>The middle (wheel) mouse button</p>"},{"id":"XButton1","name":"XButton1","value":"3","doc":"The first extra mouse button","summary":"<p>The first extra mouse button</p>"},{"id":"XButton2","name":"XButton2","value":"4","doc":"The second extra mouse button","summary":"<p>The second extra mouse button</p>"},{"id":"ButtonCount","name":"ButtonCount","value":"5","doc":"Keep last -- the total number of mouse buttons","summary":"<p>Keep last -- the total number of mouse buttons</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Mouse","kind":"module","full_name":"SF::Mouse","name":"Mouse"},"doc":"Mouse buttons","summary":"<p>Mouse buttons</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"button_count?-instance-method","html_id":"button_count?-instance-method","name":"button_count?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1068","def":{"name":"button_count?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ButtonCount"}},{"id":"left?-instance-method","html_id":"left?-instance-method","name":"left?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1058","def":{"name":"left?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Left"}},{"id":"middle?-instance-method","html_id":"middle?-instance-method","name":"middle?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1062","def":{"name":"middle?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Middle"}},{"id":"right?-instance-method","html_id":"right?-instance-method","name":"right?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1060","def":{"name":"right?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Right"}},{"id":"x_button1?-instance-method","html_id":"x_button1?-instance-method","name":"x_button1?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1064","def":{"name":"x_button1?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == XButton1"}},{"id":"x_button2?-instance-method","html_id":"x_button2?-instance-method","name":"x_button2?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1066","def":{"name":"x_button2?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == XButton2"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Mouse/Wheel","path":"SF/Mouse/Wheel.html","kind":"enum","full_name":"SF::Mouse::Wheel","name":"Wheel","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1072,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"VerticalWheel","name":"VerticalWheel","value":"0","doc":"The vertical mouse wheel","summary":"<p>The vertical mouse wheel</p>"},{"id":"HorizontalWheel","name":"HorizontalWheel","value":"1","doc":"The horizontal mouse wheel","summary":"<p>The horizontal mouse wheel</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Mouse","kind":"module","full_name":"SF::Mouse","name":"Mouse"},"doc":"Mouse wheels","summary":"<p>Mouse wheels</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"horizontal_wheel?-instance-method","html_id":"horizontal_wheel?-instance-method","name":"horizontal_wheel?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1076","def":{"name":"horizontal_wheel?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == HorizontalWheel"}},{"id":"vertical_wheel?-instance-method","html_id":"vertical_wheel?-instance-method","name":"vertical_wheel?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1074","def":{"name":"vertical_wheel?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == VerticalWheel"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/Music","path":"SF/Music.html","kind":"class","full_name":"SF::Music","name":"Music","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/SoundStream","kind":"class","full_name":"SF::SoundStream","name":"SoundStream"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/SoundStream","kind":"class","full_name":"SF::SoundStream","name":"SoundStream"},{"html_id":"github.com/oprypin/crsfml/SF/SoundSource","kind":"class","full_name":"SF::SoundSource","name":"SoundSource"},{"html_id":"github.com/oprypin/crsfml/SF/AlResource","kind":"module","full_name":"SF::AlResource","name":"AlResource"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"audio/obj.cr","line_number":762,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr"},{"filename":"audio/audio.cr","line_number":4,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/audio.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Streamed music played from an audio file\n\nMusics are sounds that are streamed rather than completely\nloaded in memory. This is especially useful for compressed\nmusics that usually take hundreds of MB when they are\nuncompressed: by streaming it instead of loading it entirely,\nyou avoid saturating the memory and have almost no loading delay.\nThis implies that the underlying resource (file, stream or\nmemory buffer) must remain valid for the lifetime of the\n`SF::Music` object.\n\nApart from that, a `SF::Music` has almost the same features as\nthe `SF::SoundBuffer` / `SF::Sound` pair: you can play/pause/stop\nit, request its parameters (channels, sample rate), change\nthe way it is played (pitch, volume, 3D position, ...), etc.\n\nAs a sound stream, a music is played in its own thread in order\nnot to block the rest of the program. This means that you can\nleave the music alone after calling play(), it will manage itself\nvery well.\n\nUsage example:\n```\n# Declare a new music\nmusic = SF::Music.new\n\n# Open it from an audio file\nif !music.open_from_file(\"music.ogg\")\n    # error...\nend\n\n# Change some parameters\nmusic.set_position(0, 1, 10) # change its 3D position\nmusic.pitch = 2              # increase the pitch\nmusic.volume = 50            # reduce the volume\nmusic.loop = true            # make it loop\n\n# Play it\nmusic.play()\n```\n\n*See also:* `SF::Sound`, `SF::SoundStream`","summary":"<p>Streamed music played from an audio file</p>","class_methods":[],"constructors":[{"id":"from_file(*args,**kwargs):self-class-method","html_id":"from_file(*args,**kwargs):self-class-method","name":"from_file","doc":"Shorthand for `music = Music.new; music.open_from_file(...); music`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>music = <a href=\"../SF/Music.html#new-class-method\">Music.new</a>; music<a href=\"../SF/Music.html#open_from_file(filename:String):Bool-instance-method\">.open_from_file(...)</a>; music</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L797","def":{"name":"from_file","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.open_from_file(*args, **kwargs))\n  raise(InitError.new(\"Music.open_from_file failed\"))\nend\nobj\n"}},{"id":"from_memory(*args,**kwargs):self-class-method","html_id":"from_memory(*args,**kwargs):self-class-method","name":"from_memory","doc":"Shorthand for `music = Music.new; music.open_from_memory(...); music`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>music = <a href=\"../SF/Music.html#new-class-method\">Music.new</a>; music<a href=\"../SF/Music.html#open_from_memory(data:Slice):Bool-instance-method\">.open_from_memory(...)</a>; music</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L828","def":{"name":"from_memory","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.open_from_memory(*args, **kwargs))\n  raise(InitError.new(\"Music.open_from_memory failed\"))\nend\nobj\n"}},{"id":"from_stream(*args,**kwargs):self-class-method","html_id":"from_stream(*args,**kwargs):self-class-method","name":"from_stream","doc":"Shorthand for `music = Music.new; music.open_from_stream(...); music`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>music = <a href=\"../SF/Music.html#new-class-method\">Music.new</a>; music<a href=\"../SF/Music.html#open_from_stream(stream:InputStream):Bool-instance-method\">.open_from_stream(...)</a>; music</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L858","def":{"name":"from_stream","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.open_from_stream(*args, **kwargs))\n  raise(InitError.new(\"Music.open_from_stream failed\"))\nend\nobj\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L765","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"duration:Time-instance-method","html_id":"duration:Time-instance-method","name":"duration","doc":"Get the total duration of the music\n\n*Returns:* Music duration","summary":"<p>Get the total duration of the music</p>","abstract":false,"args":[],"args_string":" : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L868","def":{"name":"duration","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_music_getduration(to_unsafe, result)\nreturn result\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L770","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_music_finalize(to_unsafe)\nSFMLExt.sfml_music_free(@this)\n"}},{"id":"loop_points:Music::TimeSpan-instance-method","html_id":"loop_points:Music::TimeSpan-instance-method","name":"loop_points","doc":"Get the positions of the of the sound's looping sequence\n\n*Returns:* Loop Time position class.\n\n*Warning:* Since loop_points=() performs some adjustments on the\nprovided values and rounds them to internal samples, a call to\nloop_points() is not guaranteed to return the same times passed\ninto a previous call to loop_points=(). However, it is guaranteed\nto return times that will map to the valid internal samples of\nthis Music if they are later passed to loop_points=().\n\n*See also:* `loop_points=`","summary":"<p>Get the positions of the of the sound's looping sequence</p>","abstract":false,"args":[],"args_string":" : Music::TimeSpan","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L885","def":{"name":"loop_points","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Music::TimeSpan","visibility":"Public","body":"result = Music::TimeSpan.allocate\nSFMLExt.sfml_music_getlooppoints(to_unsafe, result)\nreturn result\n"}},{"id":"loop_points=(time_points:Music::TimeSpan)-instance-method","html_id":"loop_points=(time_points:Music::TimeSpan)-instance-method","name":"loop_points=","doc":"Sets the beginning and end of the sound's looping sequence using `SF::Time`\n\nLoop points allow one to specify a pair of positions such that, when the music\nis enabled for looping, it will seamlessly seek to the beginning whenever it\nencounters the end. Valid ranges for time_points.offset and time_points.length are\n[0, Dur) and (0, Dur-offset] respectively, where Dur is the value returned by duration().\nNote that the EOF \"loop point\" from the end to the beginning of the stream is still honored,\nin case the caller seeks to a point after the end of the loop range. This function can be\nsafely called at any point after a stream is opened, and will be applied to a playing sound\nwithout affecting the current playing offset.\n\n*Warning:* Setting the loop points while the stream's status is Paused\nwill set its status to Stopped. The playing offset will be unaffected.\n\n* *time_points* - The definition of the loop. Can be any time points within the sound's length\n\n*See also:* `loop_points`","summary":"<p>Sets the beginning and end of the sound's looping sequence using <code><a href=\"../SF/Time.html\">SF::Time</a></code></p>","abstract":false,"args":[{"name":"time_points","doc":null,"default_value":"","external_name":"time_points","restriction":"Music::TimeSpan"}],"args_string":"(time_points : Music::TimeSpan)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L907","def":{"name":"loop_points=","args":[{"name":"time_points","doc":null,"default_value":"","external_name":"time_points","restriction":"Music::TimeSpan"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_music_setlooppoints_TU3(to_unsafe, time_points)"}},{"id":"on_get_data:Slice(Int16)?-instance-method","html_id":"on_get_data:Slice(Int16)?-instance-method","name":"on_get_data","doc":"Request a new chunk of audio samples from the stream source\n\nThis function fills the chunk from the next samples\nto read from the audio file.\n\n* *data* - Chunk of data to fill\n\n*Returns:* True to continue playback, false to stop","summary":"<p>Request a new chunk of audio samples from the stream source</p>","abstract":false,"args":[],"args_string":" : Slice(Int16)?","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L918","def":{"name":"on_get_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Slice(Int16) | ::Nil","visibility":"Public","body":"nil"}},{"id":"on_loop:Int64-instance-method","html_id":"on_loop:Int64-instance-method","name":"on_loop","doc":"Change the current playing position in the stream source to the loop offset\n\nThis is called by the underlying SoundStream whenever it needs us to reset\nthe seek position for a loop. We then determine whether we are looping on a\nloop point or the end-of-file, perform the seek, and return the new position.\n\n*Returns:* The seek position after looping (or -1 if there's no loop)","summary":"<p>Change the current playing position in the stream source to the loop offset</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L933","def":{"name":"on_loop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"Int64.zero"}},{"id":"on_seek(time_offset:Time)-instance-method","html_id":"on_seek(time_offset:Time)-instance-method","name":"on_seek","doc":"Change the current playing position in the stream source\n\n* *time_offset* - New playing position, from the beginning of the music","summary":"<p>Change the current playing position in the stream source</p>","abstract":false,"args":[{"name":"time_offset","doc":null,"default_value":"","external_name":"time_offset","restriction":"Time"}],"args_string":"(time_offset : Time)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L924","def":{"name":"on_seek","args":[{"name":"time_offset","doc":null,"default_value":"","external_name":"time_offset","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"open_from_file(filename:String):Bool-instance-method","html_id":"open_from_file(filename:String):Bool-instance-method","name":"open_from_file","doc":"Open a music from an audio file\n\nThis function doesn't start playing the music (call play()\nto do so).\nSee the documentation of `SF::InputSoundFile` for the list\nof supported formats.\n\n*Warning:* Since the music is not loaded at once but rather\nstreamed continuously, the file must remain accessible until\nthe `SF::Music` object loads a new music or is destroyed.\n\n* *filename* - Path of the music file to open\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `open_from_memory`, `open_from_stream`","summary":"<p>Open a music from an audio file</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L790","def":{"name":"open_from_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_music_openfromfile_zkC(to_unsafe, filename.bytesize, filename, out result)\nreturn result\n"}},{"id":"open_from_memory(data:Slice):Bool-instance-method","html_id":"open_from_memory(data:Slice):Bool-instance-method","name":"open_from_memory","doc":"Open a music from an audio file in memory\n\nThis function doesn't start playing the music (call play()\nto do so).\nSee the documentation of `SF::InputSoundFile` for the list\nof supported formats.\n\n*Warning:* Since the music is not loaded at once but rather streamed\ncontinuously, the *data* buffer must remain accessible until\nthe `SF::Music` object loads a new music or is destroyed. That is,\nyou can't deallocate the buffer right after calling this function.\n\n* *data* - Slice containing the file data in memory\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `open_from_file`, `open_from_stream`","summary":"<p>Open a music from an audio file in memory</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L821","def":{"name":"open_from_memory","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_music_openfrommemory_5h8vgv(to_unsafe, data, data.bytesize, out result)\nreturn result\n"}},{"id":"open_from_stream(stream:InputStream):Bool-instance-method","html_id":"open_from_stream(stream:InputStream):Bool-instance-method","name":"open_from_stream","doc":"Open a music from an audio file in a custom stream\n\nThis function doesn't start playing the music (call play()\nto do so).\nSee the documentation of `SF::InputSoundFile` for the list\nof supported formats.\n\n*Warning:* Since the music is not loaded at once but rather\nstreamed continuously, the *stream* must remain accessible\nuntil the `SF::Music` object loads a new music or is destroyed.\n\n* *stream* - Source stream to read from\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `open_from_file`, `open_from_memory`","summary":"<p>Open a music from an audio file in a custom stream</p>","abstract":false,"args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"InputStream"}],"args_string":"(stream : InputStream) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L851","def":{"name":"open_from_stream","args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"InputStream"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_music_openfromstream_PO0(to_unsafe, stream, out result)\nreturn result\n"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Music/Span","path":"SF/Music/Span.html","kind":"struct","full_name":"SF::Music::Span(T)","name":"Span","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"audio/audio.cr","line_number":5,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/audio.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Music","kind":"class","full_name":"SF::Music","name":"Music"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(offset=T.zero,length=T.zero)-class-method","html_id":"new(offset=T.zero,length=T.zero)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"offset","doc":null,"default_value":"T.zero","external_name":"offset","restriction":""},{"name":"length","doc":null,"default_value":"T.zero","external_name":"length","restriction":""}],"args_string":"(offset = <span class=\"t\">T</span>.zero, length = <span class=\"t\">T</span>.zero)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/audio.cr#L11","def":{"name":"new","args":[{"name":"offset","doc":null,"default_value":"T.zero","external_name":"offset","restriction":""},{"name":"length","doc":null,"default_value":"T.zero","external_name":"length","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Span(T).allocate\n_.initialize(offset, length)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"length:T-instance-method","html_id":"length:T-instance-method","name":"length","doc":"The length of the time range","summary":"<p>The length of the time range</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/audio.cr#L9","def":{"name":"length","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@length"}},{"id":"length=(length:T)-instance-method","html_id":"length=(length:T)-instance-method","name":"length=","doc":"The length of the time range","summary":"<p>The length of the time range</p>","abstract":false,"args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"T"}],"args_string":"(length : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/audio.cr#L9","def":{"name":"length=","args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@length = length"}},{"id":"offset:T-instance-method","html_id":"offset:T-instance-method","name":"offset","doc":"The beginning offset of the time range","summary":"<p>The beginning offset of the time range</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/audio.cr#L7","def":{"name":"offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@offset"}},{"id":"offset=(offset:T)-instance-method","html_id":"offset=(offset:T)-instance-method","name":"offset=","doc":"The beginning offset of the time range","summary":"<p>The beginning offset of the time range</p>","abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"T"}],"args_string":"(offset : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/audio.cr#L7","def":{"name":"offset=","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset = offset"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Music/TimeSpan","path":"SF/Music/TimeSpan.html","kind":"alias","full_name":"SF::Music::TimeSpan","name":"TimeSpan","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"audio/audio.cr","line_number":20,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/audio.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":true,"aliased":"SF::Music::Span(SF::Time)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Music","kind":"class","full_name":"SF::Music","name":"Music"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/Mutex","path":"SF/Mutex.html","kind":"class","full_name":"SF::Mutex","name":"Mutex","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"system/system.cr","line_number":266,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr"},{"filename":"system/obj.cr","line_number":722,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Blocks concurrent access to shared resources\nfrom multiple threads\n\nMutex stands for \"MUTual EXclusion\". A mutex is a\nsynchronization object, used when multiple threads are involved.\n\nWhen you want to protect a part of the code from being accessed\nsimultaneously by multiple threads, you typically use a\nmutex. When a thread is locked by a mutex, any other thread\ntrying to lock it will be blocked until the mutex is released\nby the thread that locked it. This way, you can allow only\none thread at a time to access a critical region of your code.\n\nUsage example:\n```\n@database = Database.new # this is a critical resource that needs some protection\n@mutex = SF::Mutex.new\n\ndef thread1()\n  @mutex.lock() # this call will block the thread if the mutex is already locked by thread2\n  @database.write(...)\n  @mutex.unlock() # if thread2 was waiting, it will now be unblocked\nend\n\ndef thread2()\n  @mutex.lock() # this call will block the thread if the mutex is already locked by thread1\n  @database.write(...)\n  @mutex.unlock() # if thread1 was waiting, it will now be unblocked\nend\n```\n\nBe very careful with mutexes. A bad usage can lead to bad problems,\nlike deadlocks (two threads are waiting for each other and the\napplication is globally stuck).\n\nTo make the usage of mutexes more robust, particularly in\nenvironments where exceptions can be thrown, you should\nuse the helper method `synchronize` to lock/unlock mutexes.\n\nSFML mutexes are recursive, which means that you can lock\na mutex multiple times in the same thread without creating\na deadlock. In this case, the first call to lock() behaves\nas usual, and the following ones have no effect.\nHowever, you must call unlock() exactly as many times as you\ncalled lock(). If you don't, the mutex won't be released.","summary":"<p>Blocks concurrent access to shared resources from multiple threads</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L725","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L730","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_mutex_finalize(to_unsafe)\nSFMLExt.sfml_mutex_free(@this)\n"}},{"id":"lock-instance-method","html_id":"lock-instance-method","name":"lock","doc":"Lock the mutex\n\nIf the mutex is already locked in another thread,\nthis call will block the execution until the mutex\nis released.\n\n*See also:* `unlock`","summary":"<p>Lock the mutex</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L741","def":{"name":"lock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_mutex_lock(to_unsafe)"}},{"id":"synchronize(&)-instance-method","html_id":"synchronize(&amp;)-instance-method","name":"synchronize","doc":"Lock the mutex, execute the block, then unlock the mutex\n(even if an exception is raised).","summary":"<p>Lock the mutex, execute the block, then unlock the mutex (even if an exception is raised).</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L269","def":{"name":"synchronize","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"lock\nbegin\n  yield\nensure\n  unlock\nend\n"}},{"id":"unlock-instance-method","html_id":"unlock-instance-method","name":"unlock","doc":"Unlock the mutex\n\n*See also:* `lock`","summary":"<p>Unlock the mutex</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L747","def":{"name":"unlock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_mutex_unlock(to_unsafe)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","path":"SF/NonCopyable.html","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"system/obj.cr","line_number":469,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/oprypin/crsfml/SF/Context","kind":"class","full_name":"SF::Context","name":"Context"},{"html_id":"github.com/oprypin/crsfml/SF/Cursor","kind":"class","full_name":"SF::Cursor","name":"Cursor"},{"html_id":"github.com/oprypin/crsfml/SF/FileInputStream","kind":"class","full_name":"SF::FileInputStream","name":"FileInputStream"},{"html_id":"github.com/oprypin/crsfml/SF/Ftp","kind":"class","full_name":"SF::Ftp","name":"Ftp"},{"html_id":"github.com/oprypin/crsfml/SF/Http","kind":"class","full_name":"SF::Http","name":"Http"},{"html_id":"github.com/oprypin/crsfml/SF/Mutex","kind":"class","full_name":"SF::Mutex","name":"Mutex"},{"html_id":"github.com/oprypin/crsfml/SF/RenderTarget","kind":"module","full_name":"SF::RenderTarget","name":"RenderTarget"},{"html_id":"github.com/oprypin/crsfml/SF/Shader","kind":"class","full_name":"SF::Shader","name":"Shader"},{"html_id":"github.com/oprypin/crsfml/SF/Socket","kind":"class","full_name":"SF::Socket","name":"Socket"},{"html_id":"github.com/oprypin/crsfml/SF/Thread","kind":"class","full_name":"SF::Thread","name":"Thread"},{"html_id":"github.com/oprypin/crsfml/SF/Window","kind":"class","full_name":"SF::Window","name":"Window"}],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Empty module that indicates the objects of the class can't be copied","summary":"<p>Empty module that indicates the objects of the class can't be copied</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Packet","path":"SF/Packet.html","kind":"class","full_name":"SF::Packet","name":"Packet","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":1642,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Utility class to build blocks of data to transfer\nover the network\n\nPackets provide a safe and easy way to serialize data,\nin order to send it over the network using sockets\n(`SF::TcpSocket`, `SF::UdpSocket`).\n\nPackets solve 2 fundamental problems that arise when\ntransferring data over the network:\n* data is interpreted correctly according to the endianness\n* the bounds of the packet are preserved (one send == one receive)\n\nThe `SF::Packet` class provides both input and output, using `read`\nand `write` methods.\n\nIt is recommended to use only fixed-size types (like `Int32`, etc.),\nto avoid possible differences between the sender and the receiver.\n\nUsage example:\n```\nx = 24u32\ns = \"hello\"\nd = 5.89\n\n# Group the variables to send into a packet\npacket = SF::Packet.new\npacket.write x\npacket.write s\npacket.write d\n\n# Send it over the network (socket is a valid SF::TcpSocket)\nsocket.send packet\n\n-----------------------------------------------------------------\n\n# Receive the packet at the other end\npacket = SF::Packet.new\nsocket.receive(packet)\n\n# Extract the variables contained in the packet\nx = packet.read UInt32\ns = packet.read String\nd = packet.read Float64\nif packet.valid?\n  # Data extracted successfully...\nend\n```\n\nPackets have overloads of `read` and `write` methods for standard types:\n\n* Bool\n* Fixed-size integer types (`Int8/16/32/64`, `UInt8/16/32/64`)\n* Floating point numbers (`Float32/64`)\n* `String`\n\nLike standard streams, it is also possible to define your own overloads\nof these methods in order to handle your custom types.\n\n```\nstruct MyStruct\n  number : Float32\n  integer : Int8\n  str : String\nend\n\nclass SF::Packet\n  def write(m : MyStruct)\n    write m.number\n    write m.integer\n    write m.str\n  end\n\n  def read(type : MyStruct.class) : MyStruct\n    MyStruct.new(packet.read(Float32), packet.read(Int8), packet.read(String))\n  end\nend\n```\n\n*See also:* `SF::TcpSocket`, `SF::UdpSocket`","summary":"<p>Utility class to build blocks of data to transfer over the network</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nCreates an empty packet.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1647","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"append(data:Slice)-instance-method","html_id":"append(data:Slice)-instance-method","name":"append","doc":"Append data to the end of the packet\n\n* *data* - Pointer to the sequence of bytes to append\n* *size_in_bytes* - Number of bytes to append\n\n*See also:* `clear`","summary":"<p>Append data to the end of the packet</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1662","def":{"name":"append","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_append_5h8vgv(to_unsafe, data, data.bytesize)"}},{"id":"clear-instance-method","html_id":"clear-instance-method","name":"clear","doc":"Clear the packet\n\nAfter calling Clear, the packet is empty.\n\n*See also:* `append`","summary":"<p>Clear the packet</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1670","def":{"name":"clear","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_clear(to_unsafe)"}},{"id":"data:::Pointer(Void)-instance-method","html_id":"data:::Pointer(Void)-instance-method","name":"data","doc":"Get a pointer to the data contained in the packet\n\nWarning: the returned pointer may become invalid after\nyou append data to the packet, therefore it should never\nbe stored.\nThe return pointer is NULL if the packet is empty.\n\n*Returns:* Pointer to the data\n\n*See also:* `data_size`","summary":"<p>Get a pointer to the data contained in the packet</p>","abstract":false,"args":[],"args_string":" : ::Pointer(Void)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1683","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(Void)","visibility":"Public","body":"SFMLExt.sfml_packet_getdata(to_unsafe, out result)\nreturn result\n"}},{"id":"data_size:Int32-instance-method","html_id":"data_size:Int32-instance-method","name":"data_size","doc":"Get the size of the data contained in the packet\n\nThis function returns the number of bytes pointed to by\nwhat data returns.\n\n*Returns:* Data size, in bytes\n\n*See also:* `data`","summary":"<p>Get the size of the data contained in the packet</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1695","def":{"name":"data_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_packet_getdatasize(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"dup:Packet-instance-method","html_id":"dup:Packet-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Packet","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1871","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Packet","visibility":"Public","body":"return Packet.new(self)"}},{"id":"end_of_packet:Bool-instance-method","html_id":"end_of_packet:Bool-instance-method","name":"end_of_packet","doc":"Tell if the reading position has reached the\nend of the packet\n\nThis function is useful to know if there is some data\nleft to be read, without actually reading it.\n\n*Returns:* True if all data was read, false otherwise\n\n*See also:* `operator` `bool`","summary":"<p>Tell if the reading position has reached the end of the packet</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1708","def":{"name":"end_of_packet","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_packet_endofpacket(to_unsafe, out result)\nreturn result\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Virtual destructor","summary":"<p>Virtual destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1652","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_finalize(to_unsafe)\nSFMLExt.sfml_packet_free(@this)\n"}},{"id":"read(type:Bool.class):Bool-instance-method","html_id":"read(type:Bool.class):Bool-instance-method","name":"read","doc":"Overload of operator &gt;&gt; to read data from the packet","summary":"<p>Overload of operator &gt;&gt; to read data from the packet</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Bool.class"}],"args_string":"(type : <span class=\"t\">Bool</span>.<span class=\"k\">class</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1738","def":{"name":"read","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Bool.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shr_gRY(to_unsafe, out data)\nreturn data\n"}},{"id":"read(type:Float32.class):Float32-instance-method","html_id":"read(type:Float32.class):Float32-instance-method","name":"read","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Float32.class"}],"args_string":"(type : <span class=\"t\">Float32</span>.<span class=\"k\">class</span>) : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1784","def":{"name":"read","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Float32.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shr_ATF(to_unsafe, out data)\nreturn data\n"}},{"id":"read(type:String.class):String-instance-method","html_id":"read(type:String.class):String-instance-method","name":"read","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String.class"}],"args_string":"(type : <span class=\"t\">String</span>.<span class=\"k\">class</span>) : String","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1794","def":{"name":"read","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shr_GHF(to_unsafe, out data)\nreturn String.new(data)\n"}},{"id":"read(type:Float64.class):Float64-instance-method","html_id":"read(type:Float64.class):Float64-instance-method","name":"read","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Float64.class"}],"args_string":"(type : <span class=\"t\">Float64</span>.<span class=\"k\">class</span>) : Float64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1789","def":{"name":"read","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Float64.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shr_nIp(to_unsafe, out data)\nreturn data\n"}},{"id":"read(type:UInt64.class):UInt64-instance-method","html_id":"read(type:UInt64.class):UInt64-instance-method","name":"read","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"UInt64.class"}],"args_string":"(type : <span class=\"t\">UInt64</span>.<span class=\"k\">class</span>) : UInt64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1779","def":{"name":"read","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"UInt64.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shr_7H7(to_unsafe, out data)\nreturn data\n"}},{"id":"read(type:Int64.class):Int64-instance-method","html_id":"read(type:Int64.class):Int64-instance-method","name":"read","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int64.class"}],"args_string":"(type : <span class=\"t\">Int64</span>.<span class=\"k\">class</span>) : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1774","def":{"name":"read","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int64.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shr_BuW(to_unsafe, out data)\nreturn data\n"}},{"id":"read(type:UInt32.class):UInt32-instance-method","html_id":"read(type:UInt32.class):UInt32-instance-method","name":"read","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"UInt32.class"}],"args_string":"(type : <span class=\"t\">UInt32</span>.<span class=\"k\">class</span>) : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1769","def":{"name":"read","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"UInt32.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shr_qTz(to_unsafe, out data)\nreturn data\n"}},{"id":"read(type:Int32.class):Int32-instance-method","html_id":"read(type:Int32.class):Int32-instance-method","name":"read","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32.class"}],"args_string":"(type : <span class=\"t\">Int32</span>.<span class=\"k\">class</span>) : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1764","def":{"name":"read","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shr_NiZ(to_unsafe, out data)\nreturn data\n"}},{"id":"read(type:UInt16.class):UInt16-instance-method","html_id":"read(type:UInt16.class):UInt16-instance-method","name":"read","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"UInt16.class"}],"args_string":"(type : <span class=\"t\">UInt16</span>.<span class=\"k\">class</span>) : UInt16","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1759","def":{"name":"read","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"UInt16.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shr_Xag(to_unsafe, out data)\nreturn data\n"}},{"id":"read(type:Int16.class):Int16-instance-method","html_id":"read(type:Int16.class):Int16-instance-method","name":"read","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int16.class"}],"args_string":"(type : <span class=\"t\">Int16</span>.<span class=\"k\">class</span>) : Int16","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1754","def":{"name":"read","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int16.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shr_4k3(to_unsafe, out data)\nreturn data\n"}},{"id":"read(type:UInt8.class):UInt8-instance-method","html_id":"read(type:UInt8.class):UInt8-instance-method","name":"read","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"UInt8.class"}],"args_string":"(type : <span class=\"t\">UInt8</span>.<span class=\"k\">class</span>) : UInt8","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1749","def":{"name":"read","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"UInt8.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shr_8hc(to_unsafe, out data)\nreturn data\n"}},{"id":"read(type:Int8.class):Int8-instance-method","html_id":"read(type:Int8.class):Int8-instance-method","name":"read","doc":"Read data from the packet. The expected type corresponds to\nwhat was actually sent.","summary":"<p>Read data from the packet.</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int8.class"}],"args_string":"(type : <span class=\"t\">Int8</span>.<span class=\"k\">class</span>) : Int8","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1744","def":{"name":"read","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int8.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int8","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shr_0y9(to_unsafe, out data)\nreturn data\n"}},{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":"Test the validity of the packet, for reading\n\nThis operator allows to test the packet as a boolean\nvariable, to check if a reading operation was successful.\n\nA packet will be in an invalid state if it has no more\ndata to read.\n\nThis behavior is the same as standard C++ streams.\n\nUsage example:\n```\nx = packet.read(Float32)\nif packet.valid?\n   # ok, x was extracted successfully\nend\n```\n\n*Returns:* True if last data extraction from packet was successful\n\n*See also:* `end_of_packet`","summary":"<p>Test the validity of the packet, for reading</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1733","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_packet_operator_bool(to_unsafe, out result)\nreturn result\n"}},{"id":"write(data:String)-instance-method","html_id":"write(data:String)-instance-method","name":"write","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"args_string":"(data : String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1854","def":{"name":"write","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shl_zkC(to_unsafe, data.bytesize, data)\nself\n"}},{"id":"write(data:Float64)-instance-method","html_id":"write(data:Float64)-instance-method","name":"write","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Float64"}],"args_string":"(data : Float64)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1849","def":{"name":"write","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shl_mYt(to_unsafe, data)\nself\n"}},{"id":"write(data:Float32)-instance-method","html_id":"write(data:Float32)-instance-method","name":"write","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Float32"}],"args_string":"(data : Float32)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1844","def":{"name":"write","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shl_Bw9(to_unsafe, data)\nself\n"}},{"id":"write(data:UInt64)-instance-method","html_id":"write(data:UInt64)-instance-method","name":"write","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UInt64"}],"args_string":"(data : UInt64)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1839","def":{"name":"write","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shl_Jvt(to_unsafe, data)\nself\n"}},{"id":"write(data:Int64)-instance-method","html_id":"write(data:Int64)-instance-method","name":"write","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Int64"}],"args_string":"(data : Int64)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1834","def":{"name":"write","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shl_G4x(to_unsafe, data)\nself\n"}},{"id":"write(data:UInt32)-instance-method","html_id":"write(data:UInt32)-instance-method","name":"write","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UInt32"}],"args_string":"(data : UInt32)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1829","def":{"name":"write","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shl_saL(to_unsafe, data)\nself\n"}},{"id":"write(data:Int32)-instance-method","html_id":"write(data:Int32)-instance-method","name":"write","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Int32"}],"args_string":"(data : Int32)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1824","def":{"name":"write","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shl_qe2(to_unsafe, data)\nself\n"}},{"id":"write(data:UInt16)-instance-method","html_id":"write(data:UInt16)-instance-method","name":"write","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UInt16"}],"args_string":"(data : UInt16)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1819","def":{"name":"write","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shl_BtU(to_unsafe, data)\nself\n"}},{"id":"write(data:Int16)-instance-method","html_id":"write(data:Int16)-instance-method","name":"write","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Int16"}],"args_string":"(data : Int16)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1814","def":{"name":"write","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shl_yAA(to_unsafe, data)\nself\n"}},{"id":"write(data:UInt8)-instance-method","html_id":"write(data:UInt8)-instance-method","name":"write","doc":"\\overload","summary":"<p>\\overload</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UInt8"}],"args_string":"(data : UInt8)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1809","def":{"name":"write","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shl_9yU(to_unsafe, data)\nself\n"}},{"id":"write(data:Int8)-instance-method","html_id":"write(data:Int8)-instance-method","name":"write","doc":"Write data into the packet","summary":"<p>Write data into the packet</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Int8"}],"args_string":"(data : Int8)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1804","def":{"name":"write","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Int8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shl_k6g(to_unsafe, data)\nself\n"}},{"id":"write(data:Bool)-instance-method","html_id":"write(data:Bool)-instance-method","name":"write","doc":"Overload of operator &lt;&lt; to write data into the packet","summary":"<p>Overload of operator &lt;&lt; to write data into the packet</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bool"}],"args_string":"(data : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1799","def":{"name":"write","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_packet_operator_shl_GZq(to_unsafe, data)\nself\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/PrimitiveType","path":"SF/PrimitiveType.html","kind":"enum","full_name":"SF::PrimitiveType","name":"PrimitiveType","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":1543,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Points","name":"Points","value":"0","doc":"List of individual points","summary":"<p>List of individual points</p>"},{"id":"Lines","name":"Lines","value":"1","doc":"List of individual lines","summary":"<p>List of individual lines</p>"},{"id":"LineStrip","name":"LineStrip","value":"2","doc":"List of connected lines, a point uses the previous point to form a line","summary":"<p>List of connected lines, a point uses the previous point to form a line</p>"},{"id":"Triangles","name":"Triangles","value":"3","doc":"List of individual triangles","summary":"<p>List of individual triangles</p>"},{"id":"TriangleStrip","name":"TriangleStrip","value":"4","doc":"List of connected triangles, a point uses the two previous points to form a triangle","summary":"<p>List of connected triangles, a point uses the two previous points to form a triangle</p>"},{"id":"TriangleFan","name":"TriangleFan","value":"5","doc":"List of connected triangles, a point uses the common center and the previous point to form a triangle","summary":"<p>List of connected triangles, a point uses the common center and the previous point to form a triangle</p>"},{"id":"Quads","name":"Quads","value":"6","doc":"List of individual quads (deprecated, don't work with OpenGL ES)","summary":"<p>List of individual quads (deprecated, don't work with OpenGL ES)</p>"},{"id":"LinesStrip","name":"LinesStrip","value":"2","doc":"DEPRECATED: Use LineStrip instead","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use LineStrip instead</p>"},{"id":"TrianglesStrip","name":"TrianglesStrip","value":"4","doc":"DEPRECATED: Use TriangleStrip instead","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use TriangleStrip instead</p>"},{"id":"TrianglesFan","name":"TrianglesFan","value":"5","doc":"DEPRECATED: Use TriangleFan instead","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use TriangleFan instead</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Types of primitives that a `SF::VertexArray` can render\n\nPoints and lines have no area, therefore their thickness\nwill always be 1 pixel, regardless the current transform\nand view.","summary":"<p>Types of primitives that a <code><a href=\"../SF/VertexArray.html\">SF::VertexArray</a></code> can render</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"line_strip?-instance-method","html_id":"line_strip?-instance-method","name":"line_strip?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1549","def":{"name":"line_strip?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LineStrip"}},{"id":"lines?-instance-method","html_id":"lines?-instance-method","name":"lines?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1547","def":{"name":"lines?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Lines"}},{"id":"lines_strip?-instance-method","html_id":"lines_strip?-instance-method","name":"lines_strip?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1559","def":{"name":"lines_strip?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LinesStrip"}},{"id":"points?-instance-method","html_id":"points?-instance-method","name":"points?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1545","def":{"name":"points?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Points"}},{"id":"quads?-instance-method","html_id":"quads?-instance-method","name":"quads?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1557","def":{"name":"quads?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Quads"}},{"id":"triangle_fan?-instance-method","html_id":"triangle_fan?-instance-method","name":"triangle_fan?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1555","def":{"name":"triangle_fan?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TriangleFan"}},{"id":"triangle_strip?-instance-method","html_id":"triangle_strip?-instance-method","name":"triangle_strip?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1553","def":{"name":"triangle_strip?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TriangleStrip"}},{"id":"triangles?-instance-method","html_id":"triangles?-instance-method","name":"triangles?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1551","def":{"name":"triangles?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Triangles"}},{"id":"triangles_fan?-instance-method","html_id":"triangles_fan?-instance-method","name":"triangles_fan?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1563","def":{"name":"triangles_fan?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TrianglesFan"}},{"id":"triangles_strip?-instance-method","html_id":"triangles_strip?-instance-method","name":"triangles_strip?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1561","def":{"name":"triangles_strip?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TrianglesStrip"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Rect","path":"SF/Rect.html","kind":"struct","full_name":"SF::Rect(T)","name":"Rect","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/graphics.cr","line_number":48,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Utility struct for manipulating 2D axis aligned rectangles\n\nA rectangle is defined by its top-left corner and its size.\nIt is a very simple struct defined for convenience, so\nits member variables (`left`, `top`, `width` and `height`)\ncan be accessed directly, just like the vector classes\n(`Vector2` and `Vector3`).\n\nTo keep things simple, `SF::Rect` doesn't define\nfunctions to emulate the properties that are not directly\nmembers (such as right, bottom, center, etc.), it rather\nonly provides intersection functions.\n\n`SF::Rect` uses the usual rules for its boundaries:\n* The left and top edges are included in the rectangle's area\n* The right (left + width) and bottom (top + height) edges are excluded from the rectangle's area\n\nThis means that `SF::IntRect.new(0, 0, 1, 1)` and\n`SF::IntRect.new(1, 1, 1, 1)` don't intersect.\n\n`SF::Rect` is a generic and may be used with any numeric type, but\nfor simplicity the instantiations used by SFML are aliased:\n* `SF::Rect(Int32)` is `SF::IntRect`\n* `SF::Rect(Float32)` is `SF::FloatRect`\n\nSo that you don't have to care about the template syntax.\n\nSee also: `SF.int_rect`, `SF.float_rect`.\n\nUsage example:\n```\n# Define a rectangle, located at (0, 0) with a size of 20x5\nr1 = SF.int_rect(0, 0, 20, 5)\n\n# Define another rectangle, located at (4, 2) with a size of 18x10\nposition = SF.vector2i(4, 2)\nsize = SF.vector2i(18, 10)\nr2 = SF::IntRect.new(position, size)\n\n# Test intersections with the point (3, 1)\nr1.contains?(3, 1) #=> true\nr2.contains?(3, 1) #=> false\n\n# Test the intersection between r1 and r2\nr1.intersects?(r2) #=> (4, 2, 16, 3)\n```","summary":"<p>Utility struct for manipulating 2D axis aligned rectangles</p>","class_methods":[],"constructors":[{"id":"new(left:T,top:T,width:T,height:T)-class-method","html_id":"new(left:T,top:T,width:T,height:T)-class-method","name":"new","doc":"Construct the rectangle from its coordinates\n\nBe careful, the last two parameters are the width\nand height, not the right and bottom coordinates!","summary":"<p>Construct the rectangle from its coordinates</p>","abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"T"},{"name":"top","doc":null,"default_value":"","external_name":"top","restriction":"T"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"T"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"T"}],"args_string":"(left : T, top : T, width : T, height : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L66","def":{"name":"new","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"T"},{"name":"top","doc":null,"default_value":"","external_name":"top","restriction":"T"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"T"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Rect(T).allocate\n_.initialize(left, top, width, height)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(position:SF::Vector2(T),size:SF::Vector2(T))-class-method","html_id":"new(position:SF::Vector2(T),size:SF::Vector2(T))-class-method","name":"new","doc":"Construct the rectangle from position and size\n\nBe careful, the last parameter is the size,\nnot the bottom-right corner!","summary":"<p>Construct the rectangle from position and size</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2(T)"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Vector2(T)"}],"args_string":"(position : SF::Vector2(T), size : SF::Vector2(T))","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L72","def":{"name":"new","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2(T)"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Vector2(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Rect(T).allocate\n_.initialize(position, size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor: equivalent to `new(0, 0, 0, 0)`","summary":"<p>Default constructor: equivalent to <code><a href=\"../SF/Rect.html#new(left:T,top:T,width:T,height:T)-class-method\">.new(0, 0, 0, 0)</a></code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L59","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Rect(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self):Bool-instance-method","html_id":"==(other:self):Bool-instance-method","name":"==","doc":"Returns true if all corresponding coordinates of two rects are equal","summary":"<p>Returns true if all corresponding coordinates of two rects are equal</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L103","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(((left == other.left) && (top == other.top)) && (width == other.width)) && (height == other.height)"}},{"id":"contains?(x:Number,y:Number):Bool-instance-method","html_id":"contains?(x:Number,y:Number):Bool-instance-method","name":"contains?","doc":"Returns true if a point is inside the rectangle's area","summary":"<p>Returns true if a point is inside the rectangle's area</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"args_string":"(x : Number, y : Number) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L78","def":{"name":"contains?","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"horz = {left, left + width}\nvert = {top, top + height}\n(horz.min <= x && x < horz.max) && (vert.min <= y && y < vert.max)\n"}},{"id":"contains?(point:Vector2|Tuple):Bool-instance-method","html_id":"contains?(point:Vector2|Tuple):Bool-instance-method","name":"contains?","doc":"Returns true if a point is inside the rectangle's area","summary":"<p>Returns true if a point is inside the rectangle's area</p>","abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"}],"args_string":"(point : Vector2 | Tuple) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L84","def":{"name":"contains?","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"x, y = point\ncontains?(x, y)\n"}},{"id":"height:T-instance-method","html_id":"height:T-instance-method","name":"height","doc":"Height of the rectangle","summary":"<p>Height of the rectangle</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L56","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@height"}},{"id":"height=(height:T)-instance-method","html_id":"height=(height:T)-instance-method","name":"height=","doc":"Height of the rectangle","summary":"<p>Height of the rectangle</p>","abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"T"}],"args_string":"(height : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L56","def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height = height"}},{"id":"intersects?(other:SF::Rect(T)):SF::Rect(T)?-instance-method","html_id":"intersects?(other:SF::Rect(T)):SF::Rect(T)?-instance-method","name":"intersects?","doc":"Check the intersection between two rectangles\n\nReturns the overlapped rectangle or nil if there is no overlap.","summary":"<p>Check the intersection between two rectangles</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Rect(T)"}],"args_string":"(other : SF::Rect(T)) : SF::Rect(T)?","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L92","def":{"name":"intersects?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Rect(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Rect(T) | ::Nil","visibility":"Public","body":"horz1, horz2 = {left, left + width}, {other.left, other.left + other.width}\nvert1, vert2 = {top, top + height}, {other.top, other.top + other.height}\nx1 = {horz1.min, horz2.min}.max\ny1 = {vert1.min, vert2.min}.max\nx2 = {horz1.max, horz2.max}.min\ny2 = {vert1.max, vert2.max}.min\nif x1 < x2 && y1 < y2\n  Rect.new(x1, y1, x2 - x1, y2 - y1)\nend\n"}},{"id":"left:T-instance-method","html_id":"left:T-instance-method","name":"left","doc":"Left coordinate of the rectangle","summary":"<p>Left coordinate of the rectangle</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L50","def":{"name":"left","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@left"}},{"id":"left=(left:T)-instance-method","html_id":"left=(left:T)-instance-method","name":"left=","doc":"Left coordinate of the rectangle","summary":"<p>Left coordinate of the rectangle</p>","abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"T"}],"args_string":"(left : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L50","def":{"name":"left=","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@left = left"}},{"id":"top:T-instance-method","html_id":"top:T-instance-method","name":"top","doc":"Top coordinate of the rectangle","summary":"<p>Top coordinate of the rectangle</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L52","def":{"name":"top","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@top"}},{"id":"top=(top:T)-instance-method","html_id":"top=(top:T)-instance-method","name":"top=","doc":"Top coordinate of the rectangle","summary":"<p>Top coordinate of the rectangle</p>","abstract":false,"args":[{"name":"top","doc":null,"default_value":"","external_name":"top","restriction":"T"}],"args_string":"(top : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L52","def":{"name":"top=","args":[{"name":"top","doc":null,"default_value":"","external_name":"top","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@top = top"}},{"id":"width:T-instance-method","html_id":"width:T-instance-method","name":"width","doc":"Width of the rectangle","summary":"<p>Width of the rectangle</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L54","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@width"}},{"id":"width=(width:T)-instance-method","html_id":"width=(width:T)-instance-method","name":"width=","doc":"Width of the rectangle","summary":"<p>Width of the rectangle</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"T"}],"args_string":"(width : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L54","def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width = width"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/RectangleShape","path":"SF/RectangleShape.html","kind":"class","full_name":"SF::RectangleShape","name":"RectangleShape","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Shape","kind":"class","full_name":"SF::Shape","name":"Shape"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Shape","kind":"class","full_name":"SF::Shape","name":"Shape"},{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"},{"html_id":"github.com/oprypin/crsfml/SF/Transformable","kind":"class","full_name":"SF::Transformable","name":"Transformable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":3949,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Specialized shape representing a rectangle\n\nThis class inherits all the functions of `SF::Transformable`\n(position, rotation, scale, bounds, ...) as well as the\nfunctions of `SF::Shape` (outline, color, texture, ...).\n\nUsage example:\n```\nrectangle = SF::RectangleShape.new\nrectangle.size = SF.vector2f(100, 50)\nrectangle.outline_color = SF::Color::Red\nrectangle.outline_thickness = 5\nrectangle.position = {10, 20}\n...\nwindow.draw rectangle\n```\n\n*See also:* `SF::Shape`, `SF::CircleShape`, `SF::ConvexShape`","summary":"<p>Specialized shape representing a rectangle</p>","class_methods":[],"constructors":[{"id":"new(size:Vector2|Tuple=Vector2.new(0,0))-class-method","html_id":"new(size:Vector2|Tuple=Vector2.new(0,0))-class-method","name":"new","doc":"Default constructor\n\n* *size* - Size of the rectangle","summary":"<p>Default constructor</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"Vector2.new(0, 0)","external_name":"size","restriction":"Vector2 | Tuple"}],"args_string":"(size : Vector2 | Tuple = <span class=\"t\">Vector2</span>.<span class=\"k\">new</span>(<span class=\"n\">0</span>, <span class=\"n\">0</span>))","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3958","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"Vector2.new(0, 0)","external_name":"size","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:RectangleShape-instance-method","html_id":"dup:RectangleShape-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : RectangleShape","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4179","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"RectangleShape","visibility":"Public","body":"return RectangleShape.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Virtual destructor","summary":"<p>Virtual destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3951","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_rectangleshape_finalize(to_unsafe)\nSFMLExt.sfml_rectangleshape_free(@this)\n"}},{"id":"get_point(index:Int):Vector2f-instance-method","html_id":"get_point(index:Int):Vector2f-instance-method","name":"get_point","doc":"Get a point of the rectangle\n\nThe returned point is in local coordinates, that is,\nthe shape's transforms (position, rotation, scale) are\nnot taken into account.\nThe result is undefined if *index* is out of the valid range.\n\n* *index* - Index of the point to get, in range `0..3`\n\n*Returns:* index-th point of the shape","summary":"<p>Get a point of the rectangle</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4000","def":{"name":"get_point","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\nSFMLExt.sfml_rectangleshape_getpoint_vgv(to_unsafe, LibC::SizeT.new(index), result)\nreturn result\n"}},{"id":"point_count:Int32-instance-method","html_id":"point_count:Int32-instance-method","name":"point_count","doc":"Get the number of points defining the shape\n\n*Returns:* Number of points of the shape. For rectangle\nshapes, this number is always 4.","summary":"<p>Get the number of points defining the shape</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3986","def":{"name":"point_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_rectangleshape_getpointcount(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"size:Vector2f-instance-method","html_id":"size:Vector2f-instance-method","name":"size","doc":"Get the size of the rectangle\n\n*Returns:* Size of the rectangle\n\n*See also:* `size=`","summary":"<p>Get the size of the rectangle</p>","abstract":false,"args":[],"args_string":" : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3977","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\nSFMLExt.sfml_rectangleshape_getsize(to_unsafe, result)\nreturn result\n"}},{"id":"size=(size:Vector2|Tuple)-instance-method","html_id":"size=(size:Vector2|Tuple)-instance-method","name":"size=","doc":"Set the size of the rectangle\n\n* *size* - New size of the rectangle\n\n*See also:* `size`","summary":"<p>Set the size of the rectangle</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Vector2 | Tuple"}],"args_string":"(size : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3968","def":{"name":"size=","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"size = Vector2f.new(size[0].to_f32, size[1].to_f32)\nSFMLExt.sfml_rectangleshape_setsize_UU2(to_unsafe, size)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/RenderStates","path":"SF/RenderStates.html","kind":"struct","full_name":"SF::RenderStates","name":"RenderStates","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":681,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":165,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Default","name":"Default","value":"new","doc":"Special instance holding the default render states","summary":"<p>Special instance holding the default render states</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Define the states used for drawing to a RenderTarget\n\nThere are four global states that can be applied to\nthe drawn objects:\n* the blend mode: how pixels of the object are blended with the background\n* the transform: how the object is positioned/rotated/scaled\n* the texture: what image is mapped to the object\n* the shader: what custom effect is applied to the object\n\nHigh-level objects such as sprites or text force some of\nthese states when they are drawn. For example, a sprite\nwill set its own texture, so that you don't have to care\nabout it when drawing the sprite.\n\nThe transform is a special case: sprites, texts and shapes\n(and it's a good idea to do it with your own drawable classes\ntoo) combine their transform with the one that is passed in the\nRenderStates structure. So that you can use a \"global\" transform\non top of each object's transform.\n\nMost objects, especially high-level drawables, can be drawn\ndirectly without defining render states explicitly -- the\ndefault set of states is OK in most cases.\n```\nwindow.draw(sprite)\n```\n\nIf you want to use a single specific render state, for example a\nshader, you can pass it to the constructor of `SF::RenderStates`.\n```\nwindow.draw(sprite, SF::RenderStates.new(shader))\n```\n\nWhen you're inside the Draw function of a drawable\nobject (one that includes `SF::Drawable`), you can\neither pass the render states unmodified, or change\nsome of them.\nFor example, a transformable object will combine the\ncurrent transform with its own transform. A sprite will\nset its texture. Etc.\n\n*See also:* `SF::RenderTarget`, `SF::Drawable`","summary":"<p>Define the states used for drawing to a RenderTarget</p>","class_methods":[],"constructors":[{"id":"new(blend_mode:BlendMode,transform:Transform,texture:Texture?,shader:Shader?)-class-method","html_id":"new(blend_mode:BlendMode,transform:Transform,texture:Texture?,shader:Shader?)-class-method","name":"new","doc":"Construct a set of render states with all its attributes\n\n* *blend_mode* - Blend mode to use\n* *transform* - Transform to use\n* *texture* - Texture to use\n* *shader* - Shader to use","summary":"<p>Construct a set of render states with all its attributes</p>","abstract":false,"args":[{"name":"blend_mode","doc":null,"default_value":"","external_name":"blend_mode","restriction":"BlendMode"},{"name":"transform","doc":null,"default_value":"","external_name":"transform","restriction":"Transform"},{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture | ::Nil"},{"name":"shader","doc":null,"default_value":"","external_name":"shader","restriction":"Shader | ::Nil"}],"args_string":"(blend_mode : BlendMode, transform : Transform, texture : Texture?, shader : Shader?)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L750","def":{"name":"new","args":[{"name":"blend_mode","doc":null,"default_value":"","external_name":"blend_mode","restriction":"BlendMode"},{"name":"transform","doc":null,"default_value":"","external_name":"transform","restriction":"Transform"},{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture | ::Nil"},{"name":"shader","doc":null,"default_value":"","external_name":"shader","restriction":"Shader | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(blend_mode, transform, texture, shader)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(blend_mode:BlendMode)-class-method","html_id":"new(blend_mode:BlendMode)-class-method","name":"new","doc":"Construct a default set of render states with a custom blend mode\n\n* *blend_mode* - Blend mode to use","summary":"<p>Construct a default set of render states with a custom blend mode</p>","abstract":false,"args":[{"name":"blend_mode","doc":null,"default_value":"","external_name":"blend_mode","restriction":"BlendMode"}],"args_string":"(blend_mode : BlendMode)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L705","def":{"name":"new","args":[{"name":"blend_mode","doc":null,"default_value":"","external_name":"blend_mode","restriction":"BlendMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(blend_mode)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(transform:Transform)-class-method","html_id":"new(transform:Transform)-class-method","name":"new","doc":"Construct a default set of render states with a custom transform\n\n* *transform* - Transform to use","summary":"<p>Construct a default set of render states with a custom transform</p>","abstract":false,"args":[{"name":"transform","doc":null,"default_value":"","external_name":"transform","restriction":"Transform"}],"args_string":"(transform : Transform)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L715","def":{"name":"new","args":[{"name":"transform","doc":null,"default_value":"","external_name":"transform","restriction":"Transform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(transform)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(texture:Texture?)-class-method","html_id":"new(texture:Texture?)-class-method","name":"new","doc":"Construct a default set of render states with a custom texture\n\n* *texture* - Texture to use","summary":"<p>Construct a default set of render states with a custom texture</p>","abstract":false,"args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture | ::Nil"}],"args_string":"(texture : Texture?)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L725","def":{"name":"new","args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(texture)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(shader:Shader?)-class-method","html_id":"new(shader:Shader?)-class-method","name":"new","doc":"Construct a default set of render states with a custom shader\n\n* *shader* - Shader to use","summary":"<p>Construct a default set of render states with a custom shader</p>","abstract":false,"args":[{"name":"shader","doc":null,"default_value":"","external_name":"shader","restriction":"Shader | ::Nil"}],"args_string":"(shader : Shader?)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L736","def":{"name":"new","args":[{"name":"shader","doc":null,"default_value":"","external_name":"shader","restriction":"Shader | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(shader)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nConstructing a default set of render states is equivalent\nto using `SF::RenderStates::Default`.\nThe default set defines:\n* the BlendAlpha blend mode\n* the identity transform\n* a null texture\n* a null shader","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L695","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"blend_mode:BlendMode-instance-method","html_id":"blend_mode:BlendMode-instance-method","name":"blend_mode","doc":"Blending mode","summary":"<p>Blending mode</p>","abstract":false,"args":[],"args_string":" : BlendMode","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L761","def":{"name":"blend_mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"BlendMode","visibility":"Public","body":"@blend_mode"}},{"id":"blend_mode=(blend_mode:BlendMode)-instance-method","html_id":"blend_mode=(blend_mode:BlendMode)-instance-method","name":"blend_mode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"blend_mode","doc":null,"default_value":"","external_name":"blend_mode","restriction":"BlendMode"}],"args_string":"(blend_mode : BlendMode)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L764","def":{"name":"blend_mode=","args":[{"name":"blend_mode","doc":null,"default_value":"","external_name":"blend_mode","restriction":"BlendMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@blend_mode = blend_mode"}},{"id":"dup:RenderStates-instance-method","html_id":"dup:RenderStates-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : RenderStates","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L807","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"RenderStates","visibility":"Public","body":"return RenderStates.new(self)"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L169","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(io << ({{ @type.name }})) << \"(@blend_mode=\"\n@blend_mode.inspect(io)\nio << \", @transform=\"\n@transform.inspect(io)\nio << \", texture=\"\n@_renderstates_texture.inspect(io)\nio << \", shader=\"\n@_renderstates_shader.inspect(io)\nio << \")\"\n"}},{"id":"shader:Shader?-instance-method","html_id":"shader:Shader?-instance-method","name":"shader","doc":"Shader","summary":"<p>Shader</p>","abstract":false,"args":[],"args_string":" : Shader?","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L787","def":{"name":"shader","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Shader | ::Nil","visibility":"Public","body":"@_renderstates_shader"}},{"id":"shader=(shader:Shader?)-instance-method","html_id":"shader=(shader:Shader?)-instance-method","name":"shader=","doc":null,"summary":null,"abstract":false,"args":[{"name":"shader","doc":null,"default_value":"","external_name":"shader","restriction":"Shader | ::Nil"}],"args_string":"(shader : Shader?)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L790","def":{"name":"shader=","args":[{"name":"shader","doc":null,"default_value":"","external_name":"shader","restriction":"Shader | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_renderstates_shader = shader\n@shader = shader ? shader.to_unsafe : Pointer(Void).null\n"}},{"id":"texture:Texture?-instance-method","html_id":"texture:Texture?-instance-method","name":"texture","doc":"Texture","summary":"<p>Texture</p>","abstract":false,"args":[],"args_string":" : Texture?","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L777","def":{"name":"texture","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Texture | ::Nil","visibility":"Public","body":"@_renderstates_texture"}},{"id":"texture=(texture:Texture?)-instance-method","html_id":"texture=(texture:Texture?)-instance-method","name":"texture=","doc":null,"summary":null,"abstract":false,"args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture | ::Nil"}],"args_string":"(texture : Texture?)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L780","def":{"name":"texture=","args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_renderstates_texture = texture\n@texture = texture ? texture.to_unsafe : Pointer(Void).null\n"}},{"id":"transform:Transform-instance-method","html_id":"transform:Transform-instance-method","name":"transform","doc":"Transform","summary":"<p>Transform</p>","abstract":false,"args":[],"args_string":" : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L769","def":{"name":"transform","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"@transform"}},{"id":"transform=(transform:Transform)-instance-method","html_id":"transform=(transform:Transform)-instance-method","name":"transform=","doc":null,"summary":null,"abstract":false,"args":[{"name":"transform","doc":null,"default_value":"","external_name":"transform","restriction":"Transform"}],"args_string":"(transform : Transform)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L772","def":{"name":"transform=","args":[{"name":"transform","doc":null,"default_value":"","external_name":"transform","restriction":"Transform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@transform = transform"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/RenderTarget","path":"SF/RenderTarget.html","kind":"module","full_name":"SF::RenderTarget","name":"RenderTarget","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"}],"locations":[{"filename":"graphics/obj.cr","line_number":4478,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":219,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/oprypin/crsfml/SF/RenderTexture","kind":"class","full_name":"SF::RenderTexture","name":"RenderTexture"},{"html_id":"github.com/oprypin/crsfml/SF/RenderWindow","kind":"class","full_name":"SF::RenderWindow","name":"RenderWindow"}],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Base module for all render targets (window, texture, ...)\n\n`SF::RenderTarget` defines the common behavior of all the\n2D render targets usable in the graphics module. It makes\nit possible to draw 2D entities like sprites, shapes, text\nwithout using any OpenGL command directly.\n\nA `SF::RenderTarget` is also able to use views (`SF::View`),\nwhich are a kind of 2D cameras. With views you can globally\nscroll, rotate or zoom everything that is drawn,\nwithout having to transform every single entity. See the\ndocumentation of `SF::View` for more details and sample pieces of\ncode about this module.\n\nOn top of that, render targets are still able to render direct\nOpenGL stuff. It is even possible to mix together OpenGL calls\nand regular SFML drawing commands. When doing so, make sure that\nOpenGL states are not messed up by calling the\npush_gl_states/pop_gl_states functions.\n\n*See also:* `SF::RenderWindow`, `SF::RenderTexture`, `SF::View`","summary":"<p>Base module for all render targets (window, texture, ...)</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"active=(active:Bool=true):Bool-instance-method","html_id":"active=(active:Bool=true):Bool-instance-method","name":"active=","doc":"Activate or deactivate the render target for rendering\n\nThis function makes the render target's context current for\nfuture OpenGL rendering operations (so you shouldn't care\nabout it if you're not doing direct OpenGL stuff).\nA render target's context is active only on the current thread,\nif you want to make it active on another thread you have\nto deactivate it on the previous thread first if it was active.\nOnly one context can be current in a thread, so if you\nwant to draw OpenGL geometry to another render target\ndon't forget to activate it again. Activating a render\ntarget will automatically deactivate the previously active\ncontext (if any).\n\n* *active* - True to activate, false to deactivate\n\n*Returns:* True if operation was successful, false otherwise","summary":"<p>Activate or deactivate the render target for rendering</p>","abstract":false,"args":[{"name":"active","doc":null,"default_value":"true","external_name":"active","restriction":"Bool"}],"args_string":"(active : Bool = <span class=\"n\">true</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4692","def":{"name":"active=","args":[{"name":"active","doc":null,"default_value":"true","external_name":"active","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_rendertarget_setactive_GZq(to_unsafe, active, out result)\nreturn result\n"}},{"id":"clear(color:Color=Color.new(0,0,0,255))-instance-method","html_id":"clear(color:Color=Color.new(0,0,0,255))-instance-method","name":"clear","doc":"Clear the entire target with a single color\n\nThis function is usually called once every frame,\nto clear the previous contents of the target.\n\n* *color* - Fill color to use to clear the render target","summary":"<p>Clear the entire target with a single color</p>","abstract":false,"args":[{"name":"color","doc":null,"default_value":"Color.new(0, 0, 0, 255)","external_name":"color","restriction":"Color"}],"args_string":"(color : Color = <span class=\"t\">Color</span>.<span class=\"k\">new</span>(<span class=\"n\">0</span>, <span class=\"n\">0</span>, <span class=\"n\">0</span>, <span class=\"n\">255</span>))","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4485","def":{"name":"clear","args":[{"name":"color","doc":null,"default_value":"Color.new(0, 0, 0, 255)","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_rendertarget_clear_QVe(to_unsafe, color)"}},{"id":"default_view:View-instance-method","html_id":"default_view:View-instance-method","name":"default_view","doc":"Get the default view of the render target\n\nThe default view has the initial size of the render target,\nand never changes after the target has been created.\n\n*Returns:* The default view of the render target\n\n*See also:* `view=`, `view`","summary":"<p>Get the default view of the render target</p>","abstract":false,"args":[],"args_string":" : View","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4525","def":{"name":"default_view","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"View","visibility":"Public","body":"SFMLExt.sfml_rendertarget_getdefaultview(to_unsafe, out result)\nreturn View::Reference.new(result, self)\n"}},{"id":"draw(drawable:Drawable,states:RenderStates=RenderStates::Default)-instance-method","html_id":"draw(drawable:Drawable,states:RenderStates=RenderStates::Default)-instance-method","name":"draw","doc":"Draw a drawable object to the render target.\n\nShorthand for `Drawable#draw(self, states)`\n\n* *drawable* - Object to draw\n* *states* - Render states to use for drawing","summary":"<p>Draw a drawable object to the render target.</p>","abstract":false,"args":[{"name":"drawable","doc":null,"default_value":"","external_name":"drawable","restriction":"Drawable"},{"name":"states","doc":null,"default_value":"RenderStates::Default","external_name":"states","restriction":"RenderStates"}],"args_string":"(drawable : Drawable, states : RenderStates = <span class=\"t\">RenderStates</span><span class=\"t\">::</span><span class=\"t\">Default</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L226","def":{"name":"draw","args":[{"name":"drawable","doc":null,"default_value":"","external_name":"drawable","restriction":"Drawable"},{"name":"states","doc":null,"default_value":"RenderStates::Default","external_name":"states","restriction":"RenderStates"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"draw(vertex_buffer:VertexBuffer,states:RenderStates=RenderStates::Default)-instance-method","html_id":"draw(vertex_buffer:VertexBuffer,states:RenderStates=RenderStates::Default)-instance-method","name":"draw","doc":"Draw primitives defined by a vertex buffer\n\n* *vertex_buffer* - Vertex buffer\n* *states* - Render states to use for drawing","summary":"<p>Draw primitives defined by a vertex buffer</p>","abstract":false,"args":[{"name":"vertex_buffer","doc":null,"default_value":"","external_name":"vertex_buffer","restriction":"VertexBuffer"},{"name":"states","doc":null,"default_value":"RenderStates::Default","external_name":"states","restriction":"RenderStates"}],"args_string":"(vertex_buffer : VertexBuffer, states : RenderStates = <span class=\"t\">RenderStates</span><span class=\"t\">::</span><span class=\"t\">Default</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4659","def":{"name":"draw","args":[{"name":"vertex_buffer","doc":null,"default_value":"","external_name":"vertex_buffer","restriction":"VertexBuffer"},{"name":"states","doc":null,"default_value":"RenderStates::Default","external_name":"states","restriction":"RenderStates"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_rendertarget_draw_U2Dmi4(to_unsafe, vertex_buffer, states)"}},{"id":"draw(vertex_buffer:VertexBuffer,first_vertex:Int,vertex_count:Int,states:RenderStates=RenderStates::Default)-instance-method","html_id":"draw(vertex_buffer:VertexBuffer,first_vertex:Int,vertex_count:Int,states:RenderStates=RenderStates::Default)-instance-method","name":"draw","doc":"Draw primitives defined by a vertex buffer\n\n* *vertex_buffer* - Vertex buffer\n* *first_vertex* - Index of the first vertex to render\n* *vertex_count* - Number of vertices to render\n* *states* - Render states to use for drawing","summary":"<p>Draw primitives defined by a vertex buffer</p>","abstract":false,"args":[{"name":"vertex_buffer","doc":null,"default_value":"","external_name":"vertex_buffer","restriction":"VertexBuffer"},{"name":"first_vertex","doc":null,"default_value":"","external_name":"first_vertex","restriction":"Int"},{"name":"vertex_count","doc":null,"default_value":"","external_name":"vertex_count","restriction":"Int"},{"name":"states","doc":null,"default_value":"RenderStates::Default","external_name":"states","restriction":"RenderStates"}],"args_string":"(vertex_buffer : VertexBuffer, first_vertex : Int, vertex_count : Int, states : RenderStates = <span class=\"t\">RenderStates</span><span class=\"t\">::</span><span class=\"t\">Default</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4668","def":{"name":"draw","args":[{"name":"vertex_buffer","doc":null,"default_value":"","external_name":"vertex_buffer","restriction":"VertexBuffer"},{"name":"first_vertex","doc":null,"default_value":"","external_name":"first_vertex","restriction":"Int"},{"name":"vertex_count","doc":null,"default_value":"","external_name":"vertex_count","restriction":"Int"},{"name":"states","doc":null,"default_value":"RenderStates::Default","external_name":"states","restriction":"RenderStates"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_rendertarget_draw_U2Dvgvvgvmi4(to_unsafe, vertex_buffer, LibC::SizeT.new(first_vertex), LibC::SizeT.new(vertex_count), states)"}},{"id":"draw(vertices:Array(Vertex)|Slice(Vertex),type:PrimitiveType,states:RenderStates=RenderStates::Default)-instance-method","html_id":"draw(vertices:Array(Vertex)|Slice(Vertex),type:PrimitiveType,states:RenderStates=RenderStates::Default)-instance-method","name":"draw","doc":"Draw primitives defined by an array of vertices\n\n* *vertices* - Pointer to the vertices\n* *vertex_count* - Number of vertices in the array\n* *type* - Type of primitives to draw\n* *states* - Render states to use for drawing","summary":"<p>Draw primitives defined by an array of vertices</p>","abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"","external_name":"vertices","restriction":"Array(Vertex) | Slice(Vertex)"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PrimitiveType"},{"name":"states","doc":null,"default_value":"RenderStates::Default","external_name":"states","restriction":"RenderStates"}],"args_string":"(vertices : Array(Vertex) | Slice(Vertex), type : PrimitiveType, states : RenderStates = <span class=\"t\">RenderStates</span><span class=\"t\">::</span><span class=\"t\">Default</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4652","def":{"name":"draw","args":[{"name":"vertices","doc":null,"default_value":"","external_name":"vertices","restriction":"Array(Vertex) | Slice(Vertex)"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PrimitiveType"},{"name":"states","doc":null,"default_value":"RenderStates::Default","external_name":"states","restriction":"RenderStates"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_rendertarget_draw_46svgvu9wmi4(to_unsafe, vertices, vertices.size, type, states)"}},{"id":"get_viewport(view:View):IntRect-instance-method","html_id":"get_viewport(view:View):IntRect-instance-method","name":"get_viewport","doc":"Get the viewport of a view, applied to this render target\n\nThe viewport is defined in the view as a ratio, this function\nsimply applies this ratio to the current dimensions of the\nrender target to calculate the pixels rectangle that the viewport\nactually covers in the target.\n\n* *view* - The view for which we want to compute the viewport\n\n*Returns:* Viewport rectangle, expressed in pixels","summary":"<p>Get the viewport of a view, applied to this render target</p>","abstract":false,"args":[{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"View"}],"args_string":"(view : View) : IntRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4539","def":{"name":"get_viewport","args":[{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"View"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IntRect","visibility":"Public","body":"result = IntRect.allocate\nSFMLExt.sfml_rendertarget_getviewport_DDi(to_unsafe, view, result)\nreturn result\n"}},{"id":"map_coords_to_pixel(point:Vector2|Tuple,view:View):Vector2i-instance-method","html_id":"map_coords_to_pixel(point:Vector2|Tuple,view:View):Vector2i-instance-method","name":"map_coords_to_pixel","doc":"Convert a point from world coordinates to target coordinates\n\nThis function finds the pixel of the render target that matches\nthe given 2D point. In other words, it goes through the same process\nas the graphics card, to compute the final position of a rendered point.\n\nInitially, both coordinate systems (world units and target pixels)\nmatch perfectly. But if you define a custom view or resize your\nrender target, this assertion is not true anymore, i.e. a point\nlocated at (150, 75) in your 2D world may map to the pixel\n(10, 50) of your render target -- if the view is translated by (140, 25).\n\nThis version uses a custom view for calculations, see the other\noverload of the function if you want to use the current view of the\nrender target.\n\n* *point* - Point to convert\n* *view* - The view to use for converting the point\n\n*Returns:* The converted point, in target coordinates (pixels)\n\n*See also:* `map_pixel_to_coords`","summary":"<p>Convert a point from world coordinates to target coordinates</p>","abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"},{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"View"}],"args_string":"(point : Vector2 | Tuple, view : View) : Vector2i","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4640","def":{"name":"map_coords_to_pixel","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"},{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"View"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2i","visibility":"Public","body":"result = Vector2i.allocate\npoint = Vector2f.new(point[0].to_f32, point[1].to_f32)\nSFMLExt.sfml_rendertarget_mapcoordstopixel_UU2DDi(to_unsafe, point, view, result)\nreturn result\n"}},{"id":"map_coords_to_pixel(point:Vector2|Tuple):Vector2i-instance-method","html_id":"map_coords_to_pixel(point:Vector2|Tuple):Vector2i-instance-method","name":"map_coords_to_pixel","doc":"Convert a point from world coordinates to target\ncoordinates, using the current view\n\nThis function is an overload of the map_coords_to_pixel\nfunction that implicitly uses the current view.\nIt is equivalent to:\n```\ntarget.map_coords_to_pixel(point, target.view)\n```\n\n* *point* - Point to convert\n\n*Returns:* The converted point, in target coordinates (pixels)\n\n*See also:* `map_pixel_to_coords`","summary":"<p>Convert a point from world coordinates to target coordinates, using the current view</p>","abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"}],"args_string":"(point : Vector2 | Tuple) : Vector2i","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4612","def":{"name":"map_coords_to_pixel","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2i","visibility":"Public","body":"result = Vector2i.allocate\npoint = Vector2f.new(point[0].to_f32, point[1].to_f32)\nSFMLExt.sfml_rendertarget_mapcoordstopixel_UU2(to_unsafe, point, result)\nreturn result\n"}},{"id":"map_pixel_to_coords(point:Vector2|Tuple):Vector2f-instance-method","html_id":"map_pixel_to_coords(point:Vector2|Tuple):Vector2f-instance-method","name":"map_pixel_to_coords","doc":"Convert a point from target coordinates to world\ncoordinates, using the current view\n\nThis function is an overload of the map_pixel_to_coords\nfunction that implicitly uses the current view.\nIt is equivalent to:\n```\ntarget.map_pixel_to_coords(point, target.view)\n```\n\n* *point* - Pixel to convert\n\n*Returns:* The converted point, in \"world\" coordinates\n\n*See also:* `map_coords_to_pixel`","summary":"<p>Convert a point from target coordinates to world coordinates, using the current view</p>","abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"}],"args_string":"(point : Vector2 | Tuple) : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4559","def":{"name":"map_pixel_to_coords","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\npoint = Vector2i.new(point[0].to_i32, point[1].to_i32)\nSFMLExt.sfml_rendertarget_mappixeltocoords_ufV(to_unsafe, point, result)\nreturn result\n"}},{"id":"map_pixel_to_coords(point:Vector2|Tuple,view:View):Vector2f-instance-method","html_id":"map_pixel_to_coords(point:Vector2|Tuple,view:View):Vector2f-instance-method","name":"map_pixel_to_coords","doc":"Convert a point from target coordinates to world coordinates\n\nThis function finds the 2D position that matches the\ngiven pixel of the render target. In other words, it does\nthe inverse of what the graphics card does, to find the\ninitial position of a rendered pixel.\n\nInitially, both coordinate systems (world units and target pixels)\nmatch perfectly. But if you define a custom view or resize your\nrender target, this assertion is not true anymore, i.e. a point\nlocated at (10, 50) in your render target may map to the point\n(150, 75) in your 2D world -- if the view is translated by (140, 25).\n\nFor render-windows, this function is typically used to find\nwhich point (or object) is located below the mouse cursor.\n\nThis version uses a custom view for calculations, see the other\noverload of the function if you want to use the current view of the\nrender target.\n\n* *point* - Pixel to convert\n* *view* - The view to use for converting the point\n\n*Returns:* The converted point, in \"world\" units\n\n*See also:* `map_coords_to_pixel`","summary":"<p>Convert a point from target coordinates to world coordinates</p>","abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"},{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"View"}],"args_string":"(point : Vector2 | Tuple, view : View) : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4591","def":{"name":"map_pixel_to_coords","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"},{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"View"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\npoint = Vector2i.new(point[0].to_i32, point[1].to_i32)\nSFMLExt.sfml_rendertarget_mappixeltocoords_ufVDDi(to_unsafe, point, view, result)\nreturn result\n"}},{"id":"pop_gl_states-instance-method","html_id":"pop_gl_states-instance-method","name":"pop_gl_states","doc":"Restore the previously saved OpenGL render states and matrices\n\nSee the description of push_gl_states to get a detailed\ndescription of these functions.\n\n*See also:* `push_gl_states`","summary":"<p>Restore the previously saved OpenGL render states and matrices</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4734","def":{"name":"pop_gl_states","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_rendertarget_popglstates(to_unsafe)"}},{"id":"push_gl_states-instance-method","html_id":"push_gl_states-instance-method","name":"push_gl_states","doc":"Save the current OpenGL render states and matrices\n\nThis function can be used when you mix SFML drawing\nand direct OpenGL rendering. Combined with pop_gl_states,\nit ensures that:\n* SFML's internal states are not messed up by your OpenGL code\n* your OpenGL states are not modified by a call to a SFML function\n\nMore specifically, it must be used around code that\ncalls Draw functions. Example:\n```\n# OpenGL code here...\nwindow.push_gl_states()\nwindow.draw(...)\nwindow.draw(...)\nwindow.pop_gl_states()\n# OpenGL code here...\n```\n\nNote that this function is quite expensive: it saves all the\npossible OpenGL states and matrices, even the ones you\ndon't care about. Therefore it should be used wisely.\nIt is provided for convenience, but the best results will\nbe achieved if you handle OpenGL states yourself (because\nyou know which states have really changed, and need to be\nsaved and restored). Take a look at the reset_gl_states\nfunction if you do so.\n\n*See also:* `pop_gl_states`","summary":"<p>Save the current OpenGL render states and matrices</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4725","def":{"name":"push_gl_states","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_rendertarget_pushglstates(to_unsafe)"}},{"id":"reset_gl_states-instance-method","html_id":"reset_gl_states-instance-method","name":"reset_gl_states","doc":"Reset the internal OpenGL states so that the target is ready for drawing\n\nThis function can be used when you mix SFML drawing\nand direct OpenGL rendering, if you choose not to use\npush_gl_states/pop_gl_states. It makes sure that all OpenGL\nstates needed by SFML are set, so that subsequent draw()\ncalls will work as expected.\n\nExample:\n```\n# OpenGL code here...\nglPushAttrib(...)\nwindow.reset_gl_states()\nwindow.draw(...)\nwindow.draw(...)\nglPopAttrib(...)\n# OpenGL code here...\n```","summary":"<p>Reset the internal OpenGL states so that the target is ready for drawing</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4755","def":{"name":"reset_gl_states","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_rendertarget_resetglstates(to_unsafe)"}},{"id":"size:Vector2u-instance-method","html_id":"size:Vector2u-instance-method","name":"size","doc":"Return the size of the rendering region of the target\n\n*Returns:* Size in pixels","summary":"<p>Return the size of the rendering region of the target</p>","abstract":true,"args":[],"args_string":" : Vector2u","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4674","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2u","visibility":"Public","body":""}},{"id":"view:View-instance-method","html_id":"view:View-instance-method","name":"view","doc":"Get the view currently in use in the render target\n\n*Returns:* The view object that is currently used\n\n*See also:* `view=`, `default_view`","summary":"<p>Get the view currently in use in the render target</p>","abstract":false,"args":[],"args_string":" : View","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4513","def":{"name":"view","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"View","visibility":"Public","body":"SFMLExt.sfml_rendertarget_getview(to_unsafe, out result)\nreturn View::Reference.new(result, self)\n"}},{"id":"view=(view:View)-instance-method","html_id":"view=(view:View)-instance-method","name":"view=","doc":"Change the current active view\n\nThe view is like a 2D camera, it controls which part of\nthe 2D scene is visible, and how it is viewed in the\nrender target.\nThe new view will affect everything that is drawn, until\nanother view is set.\nThe render target keeps its own copy of the view object,\nso it is not necessary to keep the original one alive\nafter calling this function.\nTo restore the original view of the target, you can pass\nthe result of default_view() to this function.\n\n* *view* - New view to use\n\n*See also:* `view`, `default_view`","summary":"<p>Change the current active view</p>","abstract":false,"args":[{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"View"}],"args_string":"(view : View)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4504","def":{"name":"view=","args":[{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"View"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_rendertarget_view = view\nSFMLExt.sfml_rendertarget_setview_DDi(to_unsafe, view)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/RenderTexture","path":"SF/RenderTexture.html","kind":"class","full_name":"SF::RenderTexture","name":"RenderTexture","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/RenderTarget","kind":"module","full_name":"SF::RenderTarget","name":"RenderTarget"},{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":4837,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":235,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/RenderTarget","kind":"module","full_name":"SF::RenderTarget","name":"RenderTarget"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Target for off-screen 2D rendering into a texture\n\n`SF::RenderTexture` is the little brother of `SF::RenderWindow`.\nIt implements the same 2D drawing and OpenGL-related functions\n(see their base class `SF::RenderTarget` for more details),\nthe difference is that the result is stored in an off-screen\ntexture rather than being show in a window.\n\nRendering to a texture can be useful in a variety of situations:\n* precomputing a complex static texture (like a level's background from multiple tiles)\n* applying post-effects to the whole scene with shaders\n* creating a sprite from a 3D object rendered with OpenGL\n* etc.\n\nUsage example:\n\n```\n# Create a new render-window\nwindow = SF::RenderWindow.new(SF::VideoMode.new(800, 600), \"SFML window\")\n\n# Create a new render-texture\ntexture = SF::RenderTexture.new(500, 500)\n\n# The main loop\nwhile window.open?\n  # Event processing\n  # ...\n\n  # Clear the whole texture with red color\n  texture.clear(SF::Color::Red)\n\n  # Draw stuff to the texture\n  texture.draw(sprite)  # sprite is a SF::Sprite\n  texture.draw(shape)   # shape is a SF::Shape\n  texture.draw(text)    # text is a SF::Text\n\n  # We're done drawing to the texture\n  texture.display()\n\n  # Now we start rendering to the window, clear it first\n  window.clear()\n\n  # Draw the texture\n  sprite = SF::Sprite(texture.texture)\n  window.draw(sprite)\n\n  # End the current frame and display its contents on screen\n  window.display()\nend\n```\n\nLike `SF::RenderWindow`, `SF::RenderTexture` is still able to render direct\nOpenGL stuff. It is even possible to mix together OpenGL calls\nand regular SFML drawing commands. If you need a depth buffer for\n3D rendering, don't forget to request it when calling RenderTexture.create.\n\n*See also:* `SF::RenderTarget`, `SF::RenderWindow`, `SF::View`, `SF::Texture`","summary":"<p>Target for off-screen 2D rendering into a texture</p>","class_methods":[{"id":"maximum_antialiasing_level:Int32-class-method","html_id":"maximum_antialiasing_level:Int32-class-method","name":"maximum_antialiasing_level","doc":"Get the maximum anti-aliasing level supported by the system\n\n*Returns:* The maximum anti-aliasing level supported by the system","summary":"<p>Get the maximum anti-aliasing level supported by the system</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4917","def":{"name":"maximum_antialiasing_level","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_rendertexture_getmaximumantialiasinglevel(out result)\nreturn result.to_i\n"}}],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nConstructs an empty, invalid render-texture. You must\ncall create to have a valid render-texture.\n\n*See also:* `create`","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4845","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*args,**kwargs):self-class-method","html_id":"new(*args,**kwargs):self-class-method","name":"new","doc":"Shorthand for `render_texture = RenderTexture.new; render_texture.create(...); render_texture`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>render_texture = <a href=\"../SF/RenderTexture.html#new-class-method\">RenderTexture.new</a>; render_texture.create(...); render_texture</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4907","def":{"name":"new","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.create(*args, **kwargs))\n  raise(InitError.new(\"RenderTexture.create failed\"))\nend\nobj\n"}}],"instance_methods":[{"id":"active=(active:Bool=true):Bool-instance-method","html_id":"active=(active:Bool=true):Bool-instance-method","name":"active=","doc":"Activate or deactivate the render-texture for rendering\n\nThis function makes the render-texture's context current for\nfuture OpenGL rendering operations (so you shouldn't care\nabout it if you're not doing direct OpenGL stuff).\nOnly one context can be current in a thread, so if you\nwant to draw OpenGL geometry to another render target\n(like a RenderWindow) don't forget to activate it again.\n\n* *active* - True to activate, false to deactivate\n\n*Returns:* True if operation was successful, false otherwise","summary":"<p>Activate or deactivate the render-texture for rendering</p>","abstract":false,"args":[{"name":"active","doc":null,"default_value":"true","external_name":"active","restriction":"Bool"}],"args_string":"(active : Bool = <span class=\"n\">true</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4988","def":{"name":"active=","args":[{"name":"active","doc":null,"default_value":"true","external_name":"active","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_rendertexture_setactive_GZq(to_unsafe, active, out result)\nreturn result\n"}},{"id":"create(width:Int,height:Int,depth_buffer:Bool):Bool-instance-method","html_id":"create(width:Int,height:Int,depth_buffer:Bool):Bool-instance-method","name":"create","doc":"Create the render-texture\n\nBefore calling this function, the render-texture is in\nan invalid state, thus it is mandatory to call it before\ndoing anything with the render-texture.\nThe last parameter, *depth_buffer,* is useful if you want\nto use the render-texture for 3D OpenGL rendering that requires\na depth buffer. Otherwise it is unnecessary, and you should\nleave this parameter to false (which is its default value).\n\n* *width* - Width of the render-texture\n* *height* - Height of the render-texture\n* *depth_buffer* - Do you want this render-texture to have a depth buffer?\n\n*Returns:* True if creation has been successful\n\nDEPRECATED: Use create(unsigned int, unsigned int, const ContextSettings&) instead.","summary":"<p>Create the render-texture</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"depth_buffer","doc":null,"default_value":"","external_name":"depth_buffer","restriction":"Bool"}],"args_string":"(width : Int, height : Int, depth_buffer : Bool) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4871","def":{"name":"create","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"depth_buffer","doc":null,"default_value":"","external_name":"depth_buffer","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_rendertexture_create_emSemSGZq(to_unsafe, LibC::UInt.new(width), LibC::UInt.new(height), depth_buffer, out result)\nreturn result\n"}},{"id":"create(width:Int,height:Int,settings:ContextSettings=ContextSettings.new):Bool-instance-method","html_id":"create(width:Int,height:Int,settings:ContextSettings=ContextSettings.new):Bool-instance-method","name":"create","doc":"Create the render-texture\n\nBefore calling this function, the render-texture is in\nan invalid state, thus it is mandatory to call it before\ndoing anything with the render-texture.\nThe last parameter, *settings,* is useful if you want to enable\nmulti-sampling or use the render-texture for OpenGL rendering that\nrequires a depth or stencil buffer. Otherwise it is unnecessary, and\nyou should leave this parameter at its default value.\n\n* *width* - Width of the render-texture\n* *height* - Height of the render-texture\n* *settings* - Additional settings for the underlying OpenGL texture and context\n\n*Returns:* True if creation has been successful","summary":"<p>Create the render-texture</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"args_string":"(width : Int, height : Int, settings : ContextSettings = <span class=\"t\">ContextSettings</span>.<span class=\"k\">new</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4900","def":{"name":"create","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_rendertexture_create_emSemSFw4(to_unsafe, LibC::UInt.new(width), LibC::UInt.new(height), settings, out result)\nreturn result\n"}},{"id":"display-instance-method","html_id":"display-instance-method","name":"display","doc":"Update the contents of the target texture\n\nThis function updates the target texture with what\nhas been drawn so far. Like for windows, calling this\nfunction is mandatory at the end of rendering. Not calling\nit may leave the texture in an undefined state.","summary":"<p>Update the contents of the target texture</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4998","def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_rendertexture_display(to_unsafe)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4850","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_rendertexture_finalize(to_unsafe)\nSFMLExt.sfml_rendertexture_free(@this)\n"}},{"id":"generate_mipmap:Bool-instance-method","html_id":"generate_mipmap:Bool-instance-method","name":"generate_mipmap","doc":"Generate a mipmap using the current texture data\n\nThis function is similar to Texture.generate_mipmap and operates\non the texture used as the target for drawing.\nBe aware that any draw operation may modify the base level image data.\nFor this reason, calling this function only makes sense after all\ndrawing is completed and display has been called. Not calling display\nafter subsequent drawing will lead to undefined behavior if a mipmap\nhad been previously generated.\n\n*Returns:* True if mipmap generation was successful, false if unsuccessful","summary":"<p>Generate a mipmap using the current texture data</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4972","def":{"name":"generate_mipmap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_rendertexture_generatemipmap(to_unsafe, out result)\nreturn result\n"}},{"id":"repeated=(repeated:Bool)-instance-method","html_id":"repeated=(repeated:Bool)-instance-method","name":"repeated=","doc":"Enable or disable texture repeating\n\nThis function is similar to Texture.repeated=.\nThis parameter is disabled by default.\n\n* *repeated* - True to enable repeating, false to disable it\n\n*See also:* `repeated?`","summary":"<p>Enable or disable texture repeating</p>","abstract":false,"args":[{"name":"repeated","doc":null,"default_value":"","external_name":"repeated","restriction":"Bool"}],"args_string":"(repeated : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4949","def":{"name":"repeated=","args":[{"name":"repeated","doc":null,"default_value":"","external_name":"repeated","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_rendertexture_setrepeated_GZq(to_unsafe, repeated)"}},{"id":"repeated?:Bool-instance-method","html_id":"repeated?:Bool-instance-method","name":"repeated?","doc":"Tell whether the texture is repeated or not\n\n*Returns:* True if texture is repeated\n\n*See also:* `repeated=`","summary":"<p>Tell whether the texture is repeated or not</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4957","def":{"name":"repeated?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_rendertexture_isrepeated(to_unsafe, out result)\nreturn result\n"}},{"id":"size:Vector2u-instance-method","html_id":"size:Vector2u-instance-method","name":"size","doc":"Return the size of the rendering region of the texture\n\nThe returned value is the size that you passed to\nthe create function.\n\n*Returns:* Size in pixels","summary":"<p>Return the size of the rendering region of the texture</p>","abstract":false,"args":[],"args_string":" : Vector2u","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5007","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2u","visibility":"Public","body":"result = Vector2u.allocate\nSFMLExt.sfml_rendertexture_getsize(to_unsafe, result)\nreturn result\n"}},{"id":"smooth=(smooth:Bool)-instance-method","html_id":"smooth=(smooth:Bool)-instance-method","name":"smooth=","doc":"Enable or disable texture smoothing\n\nThis function is similar to Texture.smooth=.\nThis parameter is disabled by default.\n\n* *smooth* - True to enable smoothing, false to disable it\n\n*See also:* `smooth?`","summary":"<p>Enable or disable texture smoothing</p>","abstract":false,"args":[{"name":"smooth","doc":null,"default_value":"","external_name":"smooth","restriction":"Bool"}],"args_string":"(smooth : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4929","def":{"name":"smooth=","args":[{"name":"smooth","doc":null,"default_value":"","external_name":"smooth","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_rendertexture_setsmooth_GZq(to_unsafe, smooth)"}},{"id":"smooth?:Bool-instance-method","html_id":"smooth?:Bool-instance-method","name":"smooth?","doc":"Tell whether the smooth filtering is enabled or not\n\n*Returns:* True if texture smoothing is enabled\n\n*See also:* `smooth=`","summary":"<p>Tell whether the smooth filtering is enabled or not</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4937","def":{"name":"smooth?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_rendertexture_issmooth(to_unsafe, out result)\nreturn result\n"}},{"id":"texture:Texture-instance-method","html_id":"texture:Texture-instance-method","name":"texture","doc":"Get a read-only reference to the target texture\n\nAfter drawing to the render-texture and calling Display,\nyou can retrieve the updated texture using this function,\nand draw it using a sprite (for example).\nThe internal `SF::Texture` of a render-texture is always the\nsame instance, so that it is possible to call this function\nonce and keep a reference to the texture even after it is\nmodified.\n\n*Returns:* Const reference to the texture","summary":"<p>Get a read-only reference to the target texture</p>","abstract":false,"args":[],"args_string":" : Texture","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5023","def":{"name":"texture","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Texture","visibility":"Public","body":"SFMLExt.sfml_rendertexture_gettexture(to_unsafe, out result)\nreturn Texture::Reference.new(result, self)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/RenderWindow","path":"SF/RenderWindow.html","kind":"class","full_name":"SF::RenderWindow","name":"RenderWindow","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Window","kind":"class","full_name":"SF::Window","name":"Window"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/RenderTarget","kind":"module","full_name":"SF::RenderTarget","name":"RenderTarget"},{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/SF/Window","kind":"class","full_name":"SF::Window","name":"Window"},{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/SF/GlResource","kind":"module","full_name":"SF::GlResource","name":"GlResource"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":5215,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":229,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/RenderTarget","kind":"module","full_name":"SF::RenderTarget","name":"RenderTarget"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Window that can serve as a target for 2D drawing\n\n`SF::RenderWindow` is the main class of the Graphics module.\nIt defines an OS window that can be painted using the other\nclasses of the graphics module.\n\n`SF::RenderWindow` is derived from `SF::Window`, thus it inherits\nall its features: events, window management, OpenGL rendering,\netc. See the documentation of `SF::Window` for a more complete\ndescription of all these features, as well as code examples.\n\nOn top of that, `SF::RenderWindow` adds more features related to\n2D drawing with the graphics module (see its base module\n`SF::RenderTarget` for more details).\nHere is a typical rendering and event loop with a `SF::RenderWindow:`\n\n```\n# Declare and create a new render-window\nwindow = SF::RenderWindow.new(SF::VideoMode.new(800, 600), \"SFML window\")\n\n# Limit the framerate to 60 frames per second (this step is optional)\nwindow.framerate_limit = 60\n\n# The main loop - ends as soon as the window is closed\nwhile window.open?\n  # Event processing\n  while (event = window.poll_event)\n    # Request for closing the window\n    if event.is_a? SF::Event::Closed\n      window.close()\n    end\n  end\n\n  # Clear the whole window before rendering a new frame\n  window.clear()\n\n  # Draw some graphical entities\n  window.draw sprite\n  window.draw circle\n  window.draw text\n\n  # End the current frame and display its contents on screen\n  window.display()\nend\n```\n\nLike `SF::Window`, `SF::RenderWindow` is still able to render direct\nOpenGL stuff. It is even possible to mix together OpenGL calls\nand regular SFML drawing commands.\n\n```\n# Create the render window\nwindow = SF::RenderWindow.new(SF::VideoMode.new(800, 600), \"SFML OpenGL\")\n\n# Create a sprite and a text to display\nsprite = SF::Sprite.new\ntext = SF::Text.new\n...\n\n# Perform OpenGL initializations\nglMatrixMode(GL_PROJECTION)\n...\n\n# Start the rendering loop\nwhile window.open?\n  # Process events\n  ...\n\n  # Draw a background sprite\n  window.push_gl_states()\n  window.draw sprite\n  window.pop_gl_states()\n\n  # Draw a 3D object using OpenGL\n  glBegin(GL_QUADS)\n    glVertex3f(...)\n    ...\n  glEnd()\n\n  # Draw text on top of the 3D object\n  window.push_gl_states()\n  window.draw text\n  window.pop_gl_states()\n\n  # Finally, display the rendered frame on screen\n  window.display()\nend\n```\n\n*See also:* `SF::Window`, `SF::RenderTarget`, `SF::RenderTexture`, `SF::View`","summary":"<p>Window that can serve as a target for 2D drawing</p>","class_methods":[],"constructors":[{"id":"new(mode:VideoMode,title:String,style:Style=Style::Default,settings:ContextSettings=ContextSettings.new)-class-method","html_id":"new(mode:VideoMode,title:String,style:Style=Style::Default,settings:ContextSettings=ContextSettings.new)-class-method","name":"new","doc":"Construct a new window\n\nThis constructor creates the window with the size and pixel\ndepth defined in *mode.* An optional style can be passed to\ncustomize the look and behavior of the window (borders,\ntitle bar, resizable, closable, ...).\n\nThe fourth parameter is an optional structure specifying\nadvanced OpenGL context settings such as antialiasing,\ndepth-buffer bits, etc. You shouldn't care about these\nparameters for a regular usage of the graphics module.\n\n* *mode* - Video mode to use (defines the width, height and depth of the rendering area of the window)\n* *title* - Title of the window\n* *style* - Window style, a bitwise OR combination of `SF::Style` enumerators\n* *settings* - Additional settings for the underlying OpenGL context","summary":"<p>Construct a new window</p>","abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"VideoMode"},{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"},{"name":"style","doc":null,"default_value":"Style::Default","external_name":"style","restriction":"Style"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"args_string":"(mode : VideoMode, title : String, style : Style = <span class=\"t\">Style</span><span class=\"t\">::</span><span class=\"t\">Default</span>, settings : ContextSettings = <span class=\"t\">ContextSettings</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5241","def":{"name":"new","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"VideoMode"},{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"},{"name":"style","doc":null,"default_value":"Style::Default","external_name":"style","restriction":"Style"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(mode, title, style, settings)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(handle:WindowHandle,settings:ContextSettings=ContextSettings.new)-class-method","html_id":"new(handle:WindowHandle,settings:ContextSettings=ContextSettings.new)-class-method","name":"new","doc":"Construct the window from an existing control\n\nUse this constructor if you want to create an SFML\nrendering area into an already existing control.\n\nThe second parameter is an optional structure specifying\nadvanced OpenGL context settings such as antialiasing,\ndepth-buffer bits, etc. You shouldn't care about these\nparameters for a regular usage of the graphics module.\n\n* *handle* - Platform-specific handle of the control (*hwnd* on\nWindows, *%window* on Linux/FreeBSD, *ns_window* on OS X)\n* *settings* - Additional settings for the underlying OpenGL context","summary":"<p>Construct the window from an existing control</p>","abstract":false,"args":[{"name":"handle","doc":null,"default_value":"","external_name":"handle","restriction":"WindowHandle"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"args_string":"(handle : WindowHandle, settings : ContextSettings = <span class=\"t\">ContextSettings</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5258","def":{"name":"new","args":[{"name":"handle","doc":null,"default_value":"","external_name":"handle","restriction":"WindowHandle"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(handle, settings)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nThis constructor doesn't actually create the window,\nuse the other constructors or call create() to do so.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5221","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*args,**kwargs):self-class-method","html_id":"new(*args,**kwargs):self-class-method","name":"new","doc":"Shorthand for `render_window = RenderWindow.new; render_window.create(...); render_window`","summary":"<p>Shorthand for <code>render_window = <a href=\"../SF/RenderWindow.html#new-class-method\">RenderWindow.new</a>; render_window.create(...); render_window</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5337","def":{"name":"new","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nobj.create(*args, **kwargs)\nobj\n"}}],"instance_methods":[{"id":"active=(active:Bool=true):Bool-instance-method","html_id":"active=(active:Bool=true):Bool-instance-method","name":"active=","doc":"Activate or deactivate the window as the current target\nfor OpenGL rendering\n\nA window is active only on the current thread, if you want to\nmake it active on another thread you have to deactivate it\non the previous thread first if it was active.\nOnly one window can be active on a thread at a time, thus\nthe window previously active (if any) automatically gets deactivated.\nThis is not to be confused with request_focus().\n\n* *active* - True to activate, false to deactivate\n\n*Returns:* True if operation was successful, false otherwise","summary":"<p>Activate or deactivate the window as the current target for OpenGL rendering</p>","abstract":false,"args":[{"name":"active","doc":null,"default_value":"true","external_name":"active","restriction":"Bool"}],"args_string":"(active : Bool = <span class=\"n\">true</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5293","def":{"name":"active=","args":[{"name":"active","doc":null,"default_value":"true","external_name":"active","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_renderwindow_setactive_GZq(to_unsafe, active, out result)\nreturn result\n"}},{"id":"capture:Image-instance-method","html_id":"capture:Image-instance-method","name":"capture","doc":"Copy the current contents of the window to an image\n\nDEPRECATED:\nUse a `SF::Texture` and its `SF::Texture#update(window)`\nmethod and copy its contents into an `SF::Image` instead.\n```\ntexture = SF::Texture.new(window.size.x, window.size.y)\ntexture.update(window)\nscreenshot = texture.copy_to_image()\n```\n\nThis is a slow operation, whose main purpose is to make\nscreenshots of the application. If you want to update an\nimage with the contents of the window and then use it for\ndrawing, you should rather use a `SF::Texture` and its\n`update(window)` method.\nYou can also draw things directly to a texture with the\n`SF::RenderTexture` class.\n\n*Returns:* Image containing the captured contents","summary":"<p>Copy the current contents of the window to an image</p>","abstract":false,"args":[],"args_string":" : Image","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5317","def":{"name":"capture","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Image","visibility":"Public","body":"result = Image.new\nSFMLExt.sfml_renderwindow_capture(to_unsafe, result)\nreturn result\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor\n\nCloses the window and frees all the resources attached to it.","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5265","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_renderwindow_finalize(to_unsafe)\nSFMLExt.sfml_renderwindow_free(@this)\n"}},{"id":"size:Vector2u-instance-method","html_id":"size:Vector2u-instance-method","name":"size","doc":"Get the size of the rendering region of the window\n\nThe size doesn't include the titlebar and borders\nof the window.\n\n*Returns:* Size in pixels","summary":"<p>Get the size of the rendering region of the window</p>","abstract":false,"args":[],"args_string":" : Vector2u","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5275","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2u","visibility":"Public","body":"result = Vector2u.allocate\nSFMLExt.sfml_renderwindow_getsize(to_unsafe, result)\nreturn result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Sensor","path":"SF/Sensor.html","kind":"module","full_name":"SF::Sensor","name":"Sensor","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"window/obj.cr","line_number":1176,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Give access to the real-time state of the sensors\n\n`SF::Sensor` provides an interface to the state of the\nvarious sensors that a device provides. It only contains static\nfunctions, so it's not meant to be instantiated.\n\nThis module allows users to query the sensors values at any\ntime and directly, without having to deal with a window and\nits events. Compared to the `SensorChanged` event, `SF::Sensor`\ncan retrieve the state of a sensor at any time (you don't need to\nstore and update its current value on your side).\n\nDepending on the OS and hardware of the device (phone, tablet, ...),\nsome sensor types may not be available. You should always check\nthe availability of a sensor before trying to read it, with the\n`SF::Sensor.available?` function.\n\nYou may wonder why some sensor types look so similar, for example\nAccelerometer and Gravity / UserAcceleration. The first one\nis the raw measurement of the acceleration, and takes into account\nboth the earth gravity and the user movement. The others are\nmore precise: they provide these components separately, which is\nusually more useful. In fact they are not direct sensors, they\nare computed internally based on the raw acceleration and other sensors.\nThis is exactly the same for Gyroscope vs Orientation.\n\nBecause sensors consume a non-negligible amount of current, they are\nall disabled by default. You must call `SF::Sensor.enabled=` for each\nsensor in which you are interested.\n\nUsage example:\n```\nif SF::Sensor.available?(SF::Sensor::Gravity)\n  # gravity sensor is available\nend\n\n# enable the gravity sensor\nSF::Sensor.set_enabled(SF::Sensor::Gravity, true)\n\n# get the current value of gravity\ngravity = SF::Sensor.get_value(SF::Sensor::Gravity)\n```","summary":"<p>Give access to the real-time state of the sensors</p>","class_methods":[{"id":"available?(sensor:Sensor::Type):Bool-class-method","html_id":"available?(sensor:Sensor::Type):Bool-class-method","name":"available?","doc":"Check if a sensor is available on the underlying platform\n\n* *sensor* - Sensor to check\n\n*Returns:* True if the sensor is available, false otherwise","summary":"<p>Check if a sensor is available on the underlying platform</p>","abstract":false,"args":[{"name":"sensor","doc":null,"default_value":"","external_name":"sensor","restriction":"Sensor::Type"}],"args_string":"(sensor : Sensor::Type) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1200","def":{"name":"available?","args":[{"name":"sensor","doc":null,"default_value":"","external_name":"sensor","restriction":"Sensor::Type"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_sensor_isavailable_jRE(sensor, out result)\nreturn result\n"}},{"id":"get_value(sensor:Sensor::Type):Vector3f-class-method","html_id":"get_value(sensor:Sensor::Type):Vector3f-class-method","name":"get_value","doc":"Get the current sensor value\n\n* *sensor* - Sensor to read\n\n*Returns:* The current sensor value","summary":"<p>Get the current sensor value</p>","abstract":false,"args":[{"name":"sensor","doc":null,"default_value":"","external_name":"sensor","restriction":"Sensor::Type"}],"args_string":"(sensor : Sensor::Type) : Vector3f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1222","def":{"name":"get_value","args":[{"name":"sensor","doc":null,"default_value":"","external_name":"sensor","restriction":"Sensor::Type"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector3f","visibility":"Public","body":"result = Vector3f.allocate\nSFMLExt.sfml_sensor_getvalue_jRE(sensor, result)\nreturn result\n"}},{"id":"set_enabled(sensor:Sensor::Type,enabled:Bool)-class-method","html_id":"set_enabled(sensor:Sensor::Type,enabled:Bool)-class-method","name":"set_enabled","doc":"Enable or disable a sensor\n\nAll sensors are disabled by default, to avoid consuming too\nmuch battery power. Once a sensor is enabled, it starts\nsending events of the corresponding type.\n\nThis function does nothing if the sensor is unavailable.\n\n* *sensor* - Sensor to enable\n* *enabled* - True to enable, false to disable","summary":"<p>Enable or disable a sensor</p>","abstract":false,"args":[{"name":"sensor","doc":null,"default_value":"","external_name":"sensor","restriction":"Sensor::Type"},{"name":"enabled","doc":null,"default_value":"","external_name":"enabled","restriction":"Bool"}],"args_string":"(sensor : Sensor::Type, enabled : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1214","def":{"name":"set_enabled","args":[{"name":"sensor","doc":null,"default_value":"","external_name":"sensor","restriction":"Sensor::Type"},{"name":"enabled","doc":null,"default_value":"","external_name":"enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_sensor_setenabled_jREGZq(sensor, enabled)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Sensor/Type","path":"SF/Sensor/Type.html","kind":"enum","full_name":"SF::Sensor::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":1178,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Accelerometer","name":"Accelerometer","value":"0","doc":"Measures the raw acceleration (m/s^2)","summary":"<p>Measures the raw acceleration (m/s^2)</p>"},{"id":"Gyroscope","name":"Gyroscope","value":"1","doc":"Measures the raw rotation rates (degrees/s)","summary":"<p>Measures the raw rotation rates (degrees/s)</p>"},{"id":"Magnetometer","name":"Magnetometer","value":"2","doc":"Measures the ambient magnetic field (micro-teslas)","summary":"<p>Measures the ambient magnetic field (micro-teslas)</p>"},{"id":"Gravity","name":"Gravity","value":"3","doc":"Measures the direction and intensity of gravity, independent of device acceleration (m/s^2)","summary":"<p>Measures the direction and intensity of gravity, independent of device acceleration (m/s^2)</p>"},{"id":"UserAcceleration","name":"UserAcceleration","value":"4","doc":"Measures the direction and intensity of device acceleration, independent of the gravity (m/s^2)","summary":"<p>Measures the direction and intensity of device acceleration, independent of the gravity (m/s^2)</p>"},{"id":"Orientation","name":"Orientation","value":"5","doc":"Measures the absolute 3D orientation (degrees)","summary":"<p>Measures the absolute 3D orientation (degrees)</p>"},{"id":"Count","name":"Count","value":"6","doc":"Keep last -- the total number of sensor types","summary":"<p>Keep last -- the total number of sensor types</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Sensor","kind":"module","full_name":"SF::Sensor","name":"Sensor"},"doc":"Sensor type","summary":"<p>Sensor type</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"accelerometer?-instance-method","html_id":"accelerometer?-instance-method","name":"accelerometer?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1180","def":{"name":"accelerometer?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Accelerometer"}},{"id":"count?-instance-method","html_id":"count?-instance-method","name":"count?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1192","def":{"name":"count?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Count"}},{"id":"gravity?-instance-method","html_id":"gravity?-instance-method","name":"gravity?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1186","def":{"name":"gravity?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Gravity"}},{"id":"gyroscope?-instance-method","html_id":"gyroscope?-instance-method","name":"gyroscope?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1182","def":{"name":"gyroscope?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Gyroscope"}},{"id":"magnetometer?-instance-method","html_id":"magnetometer?-instance-method","name":"magnetometer?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1184","def":{"name":"magnetometer?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Magnetometer"}},{"id":"orientation?-instance-method","html_id":"orientation?-instance-method","name":"orientation?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1190","def":{"name":"orientation?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Orientation"}},{"id":"user_acceleration?-instance-method","html_id":"user_acceleration?-instance-method","name":"user_acceleration?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1188","def":{"name":"user_acceleration?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == UserAcceleration"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/Shader","path":"SF/Shader.html","kind":"class","full_name":"SF::Shader","name":"Shader","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/SF/GlResource","kind":"module","full_name":"SF::GlResource","name":"GlResource"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":5654,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":182,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CurrentTexture","name":"CurrentTexture","value":"CurrentTextureType.new","doc":"Represents the texture of the object being drawn","summary":"<p>Represents the texture of the object being drawn</p>"}],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/GlResource","kind":"module","full_name":"SF::GlResource","name":"GlResource"},{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Shader class (vertex, geometry and fragment)\n\nShaders are programs written using a specific language,\nexecuted directly by the graphics card and allowing\nto apply real-time operations to the rendered entities.\n\nThere are three kinds of shaders:\n* Vertex shaders, that process vertices\n* Geometry shaders, that process primitives\n* Fragment (pixel) shaders, that process pixels\n\nA `SF::Shader` can be composed of either a vertex shader\nalone, a geometry shader alone, a fragment shader alone,\nor any combination of them. (see the variants of the\nload functions).\n\nShaders are written in GLSL, which is a C-like\nlanguage dedicated to OpenGL shaders. You'll probably\nneed to learn its basics before writing your own shaders\nfor SFML.\n\nLike any C/C++ program, a GLSL shader has its own variables\ncalled *uniforms* that you can set from your C++ application.\n`SF::Shader` handles different types of uniforms:\n* scalars: `float`, `int`, `bool`\n* vectors (2, 3 or 4 components)\n* matrices (3x3 or 4x4)\n* samplers (textures)\n\nSome SFML-specific types can be converted:\n* `SF::Color` as a 4D vector (`vec4`)\n* `SF::Transform` as matrices (`mat3` or `mat4`)\n\nEvery uniform variable in a shader can be set through one of the\n`set_parameter` overloads, or through a shorthand. For example, if you\nhave a shader with the following uniforms:\n```glsl\nuniform float offset;\nuniform vec3 point;\nuniform vec4 color;\nuniform mat4 matrix;\nuniform sampler2D overlay;\nuniform sampler2D current;\n```\nYou can set their values from Crystal code as follows:\n```\nshader.offset 2.0\nshader.point 0.5, 0.8, 0.3\nshader.color color          # color is a SF::Color\nshader.matrix transform     # transform is a SF::Transform\nshader.overlay texture      # texture is a SF::Texture\nshader.current SF::Shader::CurrentTexture\n```\n\nThe special Shader::CurrentTexture argument maps the\ngiven `sampler2d` uniform to the current texture of the\nobject being drawn (which cannot be known in advance).\n\nTo apply a shader to a drawable, you must pass it as an\nadditional parameter to the `Window.draw` function:\n```\nstates = SF::RenderStates.new(shader)\nwindow.draw(sprite, states)\n```\n\nIn the code above we pass a pointer to the shader, because it may\nbe null (which means \"no shader\").\n\nShaders can be used on any drawable, but some combinations are\nnot interesting. For example, using a vertex shader on a `SF::Sprite`\nis limited because there are only 4 vertices, the sprite would\nhave to be subdivided in order to apply wave effects.\nAnother bad example is a fragment shader with `SF::Text:` the texture\nof the text is not the actual text that you see on screen, it is\na big texture containing all the characters of the font in an\narbitrary order; thus, texture lookups on pixels other than the\ncurrent one may not give you the expected result.\n\nShaders can also be used to apply global post-effects to the\ncurrent contents of the target. This can be done in two different ways:\n* draw everything to a `SF::RenderTexture`, then draw it to\nthe main target using the shader\n* draw everything directly to the main target, then use\n`SF::Texture::update(window)` to copy its contents to a texture\nand draw it to the main target using the shader\n\nThe first technique is more optimized because it doesn't involve\nretrieving the target's pixels to system memory, but the\nsecond one doesn't impact the rendering process and can be\neasily inserted anywhere without impacting all the code.\n\nLike `SF::Texture` that can be used as a raw OpenGL texture,\n`SF::Shader` can also be used directly as a raw shader for\ncustom OpenGL geometry.\n```\nSF::Shader.bind shader\n... render OpenGL geometry ...\nSF::Shader.bind nil\n```","summary":"<p>Shader class (vertex, geometry and fragment)</p>","class_methods":[{"id":"available?:Bool-class-method","html_id":"available?:Bool-class-method","name":"available?","doc":"Tell whether or not the system supports shaders\n\nThis function should always be called before using\nthe shader features. If it returns false, then\nany attempt to use `SF::Shader` will fail.\n\n*Returns:* True if shaders are supported, false otherwise","summary":"<p>Tell whether or not the system supports shaders</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6032","def":{"name":"available?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_shader_isavailable(out result)\nreturn result\n"}},{"id":"bind(shader:Shader?)-class-method","html_id":"bind(shader:Shader?)-class-method","name":"bind","doc":"Bind a shader for rendering\n\nThis function is not part of the graphics API, it mustn't be\nused when drawing SFML entities. It must be used only if you\nmix `SF::Shader` with OpenGL code.\n\n```\ns1 = SF::Shader.new\ns2 = SF::Shader.new\n...\nSF::Shader.bind s1\n# draw OpenGL stuff that use s1...\nSF::Shader.bind s2\n# draw OpenGL stuff that use s2...\nSF::Shader.bind nil\n# draw OpenGL stuff that use no shader...\n```\n\n* *shader* - Shader to bind, can be null to use no shader","summary":"<p>Bind a shader for rendering</p>","abstract":false,"args":[{"name":"shader","doc":null,"default_value":"","external_name":"shader","restriction":"Shader | ::Nil"}],"args_string":"(shader : Shader?)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6022","def":{"name":"bind","args":[{"name":"shader","doc":null,"default_value":"","external_name":"shader","restriction":"Shader | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shader_bind_8P6(shader)"}},{"id":"geometry_available?:Bool-class-method","html_id":"geometry_available?:Bool-class-method","name":"geometry_available?","doc":"Tell whether or not the system supports geometry shaders\n\nThis function should always be called before using\nthe geometry shader features. If it returns false, then\nany attempt to use `SF::Shader` geometry shader features will fail.\n\nThis function can only return true if available?() would also\nreturn true, since shaders in general have to be supported in\norder for geometry shaders to be supported as well.\n\nNote: The first call to this function, whether by your\ncode or SFML will result in a context switch.\n\n*Returns:* True if geometry shaders are supported, false otherwise","summary":"<p>Tell whether or not the system supports geometry shaders</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6050","def":{"name":"geometry_available?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_shader_isgeometryavailable(out result)\nreturn result\n"}}],"constructors":[{"id":"from_file(*args,**kwargs):self-class-method","html_id":"from_file(*args,**kwargs):self-class-method","name":"from_file","doc":"Shorthand for `shader = Shader.new; shader.load_from_file(...); shader`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>shader = <a href=\"../SF/Shader.html#new-class-method\">Shader.new</a>; shader.load_from_file(...); shader</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5762","def":{"name":"from_file","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_file(*args, **kwargs))\n  raise(InitError.new(\"Shader.load_from_file failed\"))\nend\nobj\n"}},{"id":"from_memory(*args,**kwargs):self-class-method","html_id":"from_memory(*args,**kwargs):self-class-method","name":"from_memory","doc":"Shorthand for `shader = Shader.new; shader.load_from_memory(...); shader`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>shader = <a href=\"../SF/Shader.html#new-class-method\">Shader.new</a>; shader.load_from_memory(...); shader</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5852","def":{"name":"from_memory","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_memory(*args, **kwargs))\n  raise(InitError.new(\"Shader.load_from_memory failed\"))\nend\nobj\n"}},{"id":"from_stream(*args,**kwargs):self-class-method","html_id":"from_stream(*args,**kwargs):self-class-method","name":"from_stream","doc":"Shorthand for `shader = Shader.new; shader.load_from_stream(...); shader`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>shader = <a href=\"../SF/Shader.html#new-class-method\">Shader.new</a>; shader.load_from_stream(...); shader</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5942","def":{"name":"from_stream","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_stream(*args, **kwargs))\n  raise(InitError.new(\"Shader.load_from_stream failed\"))\nend\nobj\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nThis constructor creates an invalid shader.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5669","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5674","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shader_finalize(to_unsafe)\nSFMLExt.sfml_shader_free(@this)\n"}},{"id":"load_from_file(vertex_shader_filename:String,geometry_shader_filename:String,fragment_shader_filename:String):Bool-instance-method","html_id":"load_from_file(vertex_shader_filename:String,geometry_shader_filename:String,fragment_shader_filename:String):Bool-instance-method","name":"load_from_file","doc":"Load the vertex, geometry and fragment shaders from files\n\nThis function loads the vertex, geometry and fragment\nshaders. If one of them fails to load, the shader is left\nempty (the valid shader is unloaded).\nThe sources must be text files containing valid shaders\nin GLSL language. GLSL is a C-like language dedicated to\nOpenGL shaders; you'll probably need to read a good documentation\nfor it before writing your own shaders.\n\n* *vertex_shader_filename* - Path of the vertex shader file to load\n* *geometry_shader_filename* - Path of the geometry shader file to load\n* *fragment_shader_filename* - Path of the fragment shader file to load\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_memory`, `load_from_stream`","summary":"<p>Load the vertex, geometry and fragment shaders from files</p>","abstract":false,"args":[{"name":"vertex_shader_filename","doc":null,"default_value":"","external_name":"vertex_shader_filename","restriction":"String"},{"name":"geometry_shader_filename","doc":null,"default_value":"","external_name":"geometry_shader_filename","restriction":"String"},{"name":"fragment_shader_filename","doc":null,"default_value":"","external_name":"fragment_shader_filename","restriction":"String"}],"args_string":"(vertex_shader_filename : String, geometry_shader_filename : String, fragment_shader_filename : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5755","def":{"name":"load_from_file","args":[{"name":"vertex_shader_filename","doc":null,"default_value":"","external_name":"vertex_shader_filename","restriction":"String"},{"name":"geometry_shader_filename","doc":null,"default_value":"","external_name":"geometry_shader_filename","restriction":"String"},{"name":"fragment_shader_filename","doc":null,"default_value":"","external_name":"fragment_shader_filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_shader_loadfromfile_zkCzkCzkC(to_unsafe, vertex_shader_filename.bytesize, vertex_shader_filename, geometry_shader_filename.bytesize, geometry_shader_filename, fragment_shader_filename.bytesize, fragment_shader_filename, out result)\nreturn result\n"}},{"id":"load_from_file(filename:String,type:Shader::Type):Bool-instance-method","html_id":"load_from_file(filename:String,type:Shader::Type):Bool-instance-method","name":"load_from_file","doc":"Load the vertex, geometry or fragment shader from a file\n\nThis function loads a single shader, vertex, geometry or\nfragment, identified by the second argument.\nThe source must be a text file containing a valid\nshader in GLSL language. GLSL is a C-like language\ndedicated to OpenGL shaders; you'll probably need to\nread a good documentation for it before writing your\nown shaders.\n\n* *filename* - Path of the vertex, geometry or fragment shader file to load\n* *type* - Type of shader (vertex, geometry or fragment)\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_memory`, `load_from_stream`","summary":"<p>Load the vertex, geometry or fragment shader from a file</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Shader::Type"}],"args_string":"(filename : String, type : Shader::Type) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5694","def":{"name":"load_from_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Shader::Type"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_shader_loadfromfile_zkCqL0(to_unsafe, filename.bytesize, filename, type, out result)\nreturn result\n"}},{"id":"load_from_file(vertex_shader_filename:String,fragment_shader_filename:String):Bool-instance-method","html_id":"load_from_file(vertex_shader_filename:String,fragment_shader_filename:String):Bool-instance-method","name":"load_from_file","doc":"Load both the vertex and fragment shaders from files\n\nThis function loads both the vertex and the fragment\nshaders. If one of them fails to load, the shader is left\nempty (the valid shader is unloaded).\nThe sources must be text files containing valid shaders\nin GLSL language. GLSL is a C-like language dedicated to\nOpenGL shaders; you'll probably need to read a good documentation\nfor it before writing your own shaders.\n\n* *vertex_shader_filename* - Path of the vertex shader file to load\n* *fragment_shader_filename* - Path of the fragment shader file to load\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_memory`, `load_from_stream`","summary":"<p>Load both the vertex and fragment shaders from files</p>","abstract":false,"args":[{"name":"vertex_shader_filename","doc":null,"default_value":"","external_name":"vertex_shader_filename","restriction":"String"},{"name":"fragment_shader_filename","doc":null,"default_value":"","external_name":"fragment_shader_filename","restriction":"String"}],"args_string":"(vertex_shader_filename : String, fragment_shader_filename : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5724","def":{"name":"load_from_file","args":[{"name":"vertex_shader_filename","doc":null,"default_value":"","external_name":"vertex_shader_filename","restriction":"String"},{"name":"fragment_shader_filename","doc":null,"default_value":"","external_name":"fragment_shader_filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_shader_loadfromfile_zkCzkC(to_unsafe, vertex_shader_filename.bytesize, vertex_shader_filename, fragment_shader_filename.bytesize, fragment_shader_filename, out result)\nreturn result\n"}},{"id":"load_from_memory(vertex_shader:String,geometry_shader:String,fragment_shader:String):Bool-instance-method","html_id":"load_from_memory(vertex_shader:String,geometry_shader:String,fragment_shader:String):Bool-instance-method","name":"load_from_memory","doc":"Load the vertex, geometry and fragment shaders from source codes in memory\n\nThis function loads the vertex, geometry and fragment\nshaders. If one of them fails to load, the shader is left\nempty (the valid shader is unloaded).\nThe sources must be valid shaders in GLSL language. GLSL is\na C-like language dedicated to OpenGL shaders; you'll\nprobably need to read a good documentation for it before\nwriting your own shaders.\n\n* *vertex_shader* - String containing the source code of the vertex shader\n* *geometry_shader* - String containing the source code of the geometry shader\n* *fragment_shader* - String containing the source code of the fragment shader\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_file`, `load_from_stream`","summary":"<p>Load the vertex, geometry and fragment shaders from source codes in memory</p>","abstract":false,"args":[{"name":"vertex_shader","doc":null,"default_value":"","external_name":"vertex_shader","restriction":"String"},{"name":"geometry_shader","doc":null,"default_value":"","external_name":"geometry_shader","restriction":"String"},{"name":"fragment_shader","doc":null,"default_value":"","external_name":"fragment_shader","restriction":"String"}],"args_string":"(vertex_shader : String, geometry_shader : String, fragment_shader : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5845","def":{"name":"load_from_memory","args":[{"name":"vertex_shader","doc":null,"default_value":"","external_name":"vertex_shader","restriction":"String"},{"name":"geometry_shader","doc":null,"default_value":"","external_name":"geometry_shader","restriction":"String"},{"name":"fragment_shader","doc":null,"default_value":"","external_name":"fragment_shader","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_shader_loadfrommemory_zkCzkCzkC(to_unsafe, vertex_shader.bytesize, vertex_shader, geometry_shader.bytesize, geometry_shader, fragment_shader.bytesize, fragment_shader, out result)\nreturn result\n"}},{"id":"load_from_memory(shader:String,type:Shader::Type):Bool-instance-method","html_id":"load_from_memory(shader:String,type:Shader::Type):Bool-instance-method","name":"load_from_memory","doc":"Load the vertex, geometry or fragment shader from a source code in memory\n\nThis function loads a single shader, vertex, geometry\nor fragment, identified by the second argument.\nThe source code must be a valid shader in GLSL language.\nGLSL is a C-like language dedicated to OpenGL shaders\nyou'll probably need to read a good documentation for\nit before writing your own shaders.\n\n* *shader* - String containing the source code of the shader\n* *type* - Type of shader (vertex, geometry or fragment)\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_file`, `load_from_stream`","summary":"<p>Load the vertex, geometry or fragment shader from a source code in memory</p>","abstract":false,"args":[{"name":"shader","doc":null,"default_value":"","external_name":"shader","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Shader::Type"}],"args_string":"(shader : String, type : Shader::Type) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5784","def":{"name":"load_from_memory","args":[{"name":"shader","doc":null,"default_value":"","external_name":"shader","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Shader::Type"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_shader_loadfrommemory_zkCqL0(to_unsafe, shader.bytesize, shader, type, out result)\nreturn result\n"}},{"id":"load_from_memory(vertex_shader:String,fragment_shader:String):Bool-instance-method","html_id":"load_from_memory(vertex_shader:String,fragment_shader:String):Bool-instance-method","name":"load_from_memory","doc":"Load both the vertex and fragment shaders from source codes in memory\n\nThis function loads both the vertex and the fragment\nshaders. If one of them fails to load, the shader is left\nempty (the valid shader is unloaded).\nThe sources must be valid shaders in GLSL language. GLSL is\na C-like language dedicated to OpenGL shaders; you'll\nprobably need to read a good documentation for it before\nwriting your own shaders.\n\n* *vertex_shader* - String containing the source code of the vertex shader\n* *fragment_shader* - String containing the source code of the fragment shader\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_file`, `load_from_stream`","summary":"<p>Load both the vertex and fragment shaders from source codes in memory</p>","abstract":false,"args":[{"name":"vertex_shader","doc":null,"default_value":"","external_name":"vertex_shader","restriction":"String"},{"name":"fragment_shader","doc":null,"default_value":"","external_name":"fragment_shader","restriction":"String"}],"args_string":"(vertex_shader : String, fragment_shader : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5814","def":{"name":"load_from_memory","args":[{"name":"vertex_shader","doc":null,"default_value":"","external_name":"vertex_shader","restriction":"String"},{"name":"fragment_shader","doc":null,"default_value":"","external_name":"fragment_shader","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_shader_loadfrommemory_zkCzkC(to_unsafe, vertex_shader.bytesize, vertex_shader, fragment_shader.bytesize, fragment_shader, out result)\nreturn result\n"}},{"id":"load_from_stream(vertex_shader_stream:InputStream,geometry_shader_stream:InputStream,fragment_shader_stream:InputStream):Bool-instance-method","html_id":"load_from_stream(vertex_shader_stream:InputStream,geometry_shader_stream:InputStream,fragment_shader_stream:InputStream):Bool-instance-method","name":"load_from_stream","doc":"Load the vertex, geometry and fragment shaders from custom streams\n\nThis function loads the vertex, geometry and fragment\nshaders. If one of them fails to load, the shader is left\nempty (the valid shader is unloaded).\nThe source codes must be valid shaders in GLSL language.\nGLSL is a C-like language dedicated to OpenGL shaders\nyou'll probably need to read a good documentation for\nit before writing your own shaders.\n\n* *vertex_shader_stream* - Source stream to read the vertex shader from\n* *geometry_shader_stream* - Source stream to read the geometry shader from\n* *fragment_shader_stream* - Source stream to read the fragment shader from\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_file`, `load_from_memory`","summary":"<p>Load the vertex, geometry and fragment shaders from custom streams</p>","abstract":false,"args":[{"name":"vertex_shader_stream","doc":null,"default_value":"","external_name":"vertex_shader_stream","restriction":"InputStream"},{"name":"geometry_shader_stream","doc":null,"default_value":"","external_name":"geometry_shader_stream","restriction":"InputStream"},{"name":"fragment_shader_stream","doc":null,"default_value":"","external_name":"fragment_shader_stream","restriction":"InputStream"}],"args_string":"(vertex_shader_stream : InputStream, geometry_shader_stream : InputStream, fragment_shader_stream : InputStream) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5935","def":{"name":"load_from_stream","args":[{"name":"vertex_shader_stream","doc":null,"default_value":"","external_name":"vertex_shader_stream","restriction":"InputStream"},{"name":"geometry_shader_stream","doc":null,"default_value":"","external_name":"geometry_shader_stream","restriction":"InputStream"},{"name":"fragment_shader_stream","doc":null,"default_value":"","external_name":"fragment_shader_stream","restriction":"InputStream"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_shader_loadfromstream_PO0PO0PO0(to_unsafe, vertex_shader_stream, geometry_shader_stream, fragment_shader_stream, out result)\nreturn result\n"}},{"id":"load_from_stream(stream:InputStream,type:Shader::Type):Bool-instance-method","html_id":"load_from_stream(stream:InputStream,type:Shader::Type):Bool-instance-method","name":"load_from_stream","doc":"Load the vertex, geometry or fragment shader from a custom stream\n\nThis function loads a single shader, vertex, geometry\nor fragment, identified by the second argument.\nThe source code must be a valid shader in GLSL language.\nGLSL is a C-like language dedicated to OpenGL shaders\nyou'll probably need to read a good documentation for it\nbefore writing your own shaders.\n\n* *stream* - Source stream to read from\n* *type* - Type of shader (vertex, geometry or fragment)\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_file`, `load_from_memory`","summary":"<p>Load the vertex, geometry or fragment shader from a custom stream</p>","abstract":false,"args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"InputStream"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Shader::Type"}],"args_string":"(stream : InputStream, type : Shader::Type) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5874","def":{"name":"load_from_stream","args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"InputStream"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Shader::Type"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_shader_loadfromstream_PO0qL0(to_unsafe, stream, type, out result)\nreturn result\n"}},{"id":"load_from_stream(vertex_shader_stream:InputStream,fragment_shader_stream:InputStream):Bool-instance-method","html_id":"load_from_stream(vertex_shader_stream:InputStream,fragment_shader_stream:InputStream):Bool-instance-method","name":"load_from_stream","doc":"Load both the vertex and fragment shaders from custom streams\n\nThis function loads both the vertex and the fragment\nshaders. If one of them fails to load, the shader is left\nempty (the valid shader is unloaded).\nThe source codes must be valid shaders in GLSL language.\nGLSL is a C-like language dedicated to OpenGL shaders\nyou'll probably need to read a good documentation for\nit before writing your own shaders.\n\n* *vertex_shader_stream* - Source stream to read the vertex shader from\n* *fragment_shader_stream* - Source stream to read the fragment shader from\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_file`, `load_from_memory`","summary":"<p>Load both the vertex and fragment shaders from custom streams</p>","abstract":false,"args":[{"name":"vertex_shader_stream","doc":null,"default_value":"","external_name":"vertex_shader_stream","restriction":"InputStream"},{"name":"fragment_shader_stream","doc":null,"default_value":"","external_name":"fragment_shader_stream","restriction":"InputStream"}],"args_string":"(vertex_shader_stream : InputStream, fragment_shader_stream : InputStream) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5904","def":{"name":"load_from_stream","args":[{"name":"vertex_shader_stream","doc":null,"default_value":"","external_name":"vertex_shader_stream","restriction":"InputStream"},{"name":"fragment_shader_stream","doc":null,"default_value":"","external_name":"fragment_shader_stream","restriction":"InputStream"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_shader_loadfromstream_PO0PO0(to_unsafe, vertex_shader_stream, fragment_shader_stream, out result)\nreturn result\n"}},{"id":"native_handle:Int32-instance-method","html_id":"native_handle:Int32-instance-method","name":"native_handle","doc":"Get the underlying OpenGL handle of the shader.\n\nYou shouldn't need to use this function, unless you have\nvery specific stuff to implement that SFML doesn't support,\nor implement a temporary workaround until a bug is fixed.\n\n*Returns:* OpenGL handle of the shader or 0 if not yet loaded","summary":"<p>Get the underlying OpenGL handle of the shader.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5999","def":{"name":"native_handle","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_shader_getnativehandle(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"set_parameter(name:String,x:Number,y:Number,z:Number)-instance-method","html_id":"set_parameter(name:String,x:Number,y:Number,z:Number)-instance-method","name":"set_parameter","doc":"Change a 3-components vector parameter of the shader","summary":"<p>Change a 3-components vector parameter of the shader</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"args_string":"(name : String, x : Number, y : Number, z : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5958","def":{"name":"set_parameter","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shader_setparameter_zkCBw9Bw9Bw9(to_unsafe, name.bytesize, name, LibC::Float.new(x), LibC::Float.new(y), LibC::Float.new(z))"}},{"id":"set_parameter(name:String,x:Number,y:Number)-instance-method","html_id":"set_parameter(name:String,x:Number,y:Number)-instance-method","name":"set_parameter","doc":"Change a 2-components vector parameter of the shader","summary":"<p>Change a 2-components vector parameter of the shader</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"args_string":"(name : String, x : Number, y : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5954","def":{"name":"set_parameter","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shader_setparameter_zkCBw9Bw9(to_unsafe, name.bytesize, name, LibC::Float.new(x), LibC::Float.new(y))"}},{"id":"set_parameter(name:String,x:Number)-instance-method","html_id":"set_parameter(name:String,x:Number)-instance-method","name":"set_parameter","doc":"Change a float parameter of the shader","summary":"<p>Change a float parameter of the shader</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"}],"args_string":"(name : String, x : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5950","def":{"name":"set_parameter","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shader_setparameter_zkCBw9(to_unsafe, name.bytesize, name, LibC::Float.new(x))"}},{"id":"set_parameter(name:String,vector:Vector2|Tuple)-instance-method","html_id":"set_parameter(name:String,vector:Vector2|Tuple)-instance-method","name":"set_parameter","doc":"Change a 2-components vector parameter of the shader\n\nDEPRECATED: Use uniform=(const std::string&, const Glsl::Vec2&) instead.","summary":"<p>Change a 2-components vector parameter of the shader</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"vector","doc":null,"default_value":"","external_name":"vector","restriction":"Vector2 | Tuple"}],"args_string":"(name : String, vector : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5968","def":{"name":"set_parameter","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"vector","doc":null,"default_value":"","external_name":"vector","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"vector = Vector2f.new(vector[0].to_f32, vector[1].to_f32)\nSFMLExt.sfml_shader_setparameter_zkCUU2(to_unsafe, name.bytesize, name, vector)\n"}},{"id":"set_parameter(name:String,vector:Vector3f)-instance-method","html_id":"set_parameter(name:String,vector:Vector3f)-instance-method","name":"set_parameter","doc":"Change a 3-components vector parameter of the shader","summary":"<p>Change a 3-components vector parameter of the shader</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"vector","doc":null,"default_value":"","external_name":"vector","restriction":"Vector3f"}],"args_string":"(name : String, vector : Vector3f)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5973","def":{"name":"set_parameter","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"vector","doc":null,"default_value":"","external_name":"vector","restriction":"Vector3f"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shader_setparameter_zkCNzM(to_unsafe, name.bytesize, name, vector)"}},{"id":"set_parameter(name:String,color:Color)-instance-method","html_id":"set_parameter(name:String,color:Color)-instance-method","name":"set_parameter","doc":"Change a color parameter of the shader","summary":"<p>Change a color parameter of the shader</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"args_string":"(name : String, color : Color)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5977","def":{"name":"set_parameter","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shader_setparameter_zkCQVe(to_unsafe, name.bytesize, name, color)"}},{"id":"set_parameter(name:String,transform:Transform)-instance-method","html_id":"set_parameter(name:String,transform:Transform)-instance-method","name":"set_parameter","doc":"Change a matrix parameter of the shader","summary":"<p>Change a matrix parameter of the shader</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"transform","doc":null,"default_value":"","external_name":"transform","restriction":"Transform"}],"args_string":"(name : String, transform : Transform)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5981","def":{"name":"set_parameter","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"transform","doc":null,"default_value":"","external_name":"transform","restriction":"Transform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shader_setparameter_zkCFPe(to_unsafe, name.bytesize, name, transform)"}},{"id":"set_parameter(name:String,texture:Texture)-instance-method","html_id":"set_parameter(name:String,texture:Texture)-instance-method","name":"set_parameter","doc":"Change a texture parameter of the shader","summary":"<p>Change a texture parameter of the shader</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"}],"args_string":"(name : String, texture : Texture)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5985","def":{"name":"set_parameter","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shader_setparameter_zkCDJb(to_unsafe, name.bytesize, name, texture)"}},{"id":"set_parameter(name:String,p1:CurrentTextureType)-instance-method","html_id":"set_parameter(name:String,p1:CurrentTextureType)-instance-method","name":"set_parameter","doc":"Change a texture parameter of the shader","summary":"<p>Change a texture parameter of the shader</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"p1","doc":null,"default_value":"","external_name":"p1","restriction":"CurrentTextureType"}],"args_string":"(name : String, p1 : CurrentTextureType)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5989","def":{"name":"set_parameter","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"p1","doc":null,"default_value":"","external_name":"p1","restriction":"CurrentTextureType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shader_setparameter_zkCLcV(to_unsafe, name.bytesize, name)"}},{"id":"set_parameter(name:String,x:Number,y:Number,z:Number,w:Number)-instance-method","html_id":"set_parameter(name:String,x:Number,y:Number,z:Number,w:Number)-instance-method","name":"set_parameter","doc":"Change a 4-components vector parameter of the shader","summary":"<p>Change a 4-components vector parameter of the shader</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"},{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"Number"}],"args_string":"(name : String, x : Number, y : Number, z : Number, w : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5962","def":{"name":"set_parameter","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"},{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shader_setparameter_zkCBw9Bw9Bw9Bw9(to_unsafe, name.bytesize, name, LibC::Float.new(x), LibC::Float.new(y), LibC::Float.new(z), LibC::Float.new(w))"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":"Forwards calls like `shader.param(arg1, arg2)` to\n`shader.set_parameter(\"param\", arg1, arg2)`","summary":"<p>Forwards calls like <code>shader.param(arg1, arg2)</code> to <code>shader<a href=\"../SF/Shader.html#set_parameter(name:String,x:Number,y:Number)-instance-method\">.set_parameter(\"param\", arg1, arg2)</a></code></p>","abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L193","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      set_parameter \n{{ call.name.stringify }}\n, \n{{ call.args.splat }}\n\n    \n"}}],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Shader/CurrentTextureType","path":"SF/Shader/CurrentTextureType.html","kind":"struct","full_name":"SF::Shader::CurrentTextureType","name":"CurrentTextureType","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/graphics.cr","line_number":185,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Shader","kind":"class","full_name":"SF::Shader","name":"Shader"},"doc":"Special type that can be passed to `Shader#set_parameter` that\nrepresents the texture of the object being drawn.","summary":"<p>Special type that can be passed to <code><a href=\"../../SF/Shader.html#set_parameter(name:String,x:Number,y:Number,z:Number)-instance-method\">Shader#set_parameter</a></code> that represents the texture of the object being drawn.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L185","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Shader/Type","path":"SF/Shader/Type.html","kind":"enum","full_name":"SF::Shader::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":5657,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Vertex","name":"Vertex","value":"0","doc":"Vertex shader","summary":"<p>Vertex shader</p>"},{"id":"Geometry","name":"Geometry","value":"1","doc":"Geometry shader","summary":"<p>Geometry shader</p>"},{"id":"Fragment","name":"Fragment","value":"2","doc":"Fragment (pixel) shader","summary":"<p>Fragment (pixel) shader</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Shader","kind":"class","full_name":"SF::Shader","name":"Shader"},"doc":"Types of shaders","summary":"<p>Types of shaders</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"fragment?-instance-method","html_id":"fragment?-instance-method","name":"fragment?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5663","def":{"name":"fragment?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Fragment"}},{"id":"geometry?-instance-method","html_id":"geometry?-instance-method","name":"geometry?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5661","def":{"name":"geometry?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Geometry"}},{"id":"vertex?-instance-method","html_id":"vertex?-instance-method","name":"vertex?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L5659","def":{"name":"vertex?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Vertex"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/Shape","path":"SF/Shape.html","kind":"class","full_name":"SF::Shape","name":"Shape","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Transformable","kind":"class","full_name":"SF::Transformable","name":"Transformable"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"},{"html_id":"github.com/oprypin/crsfml/SF/Transformable","kind":"class","full_name":"SF::Transformable","name":"Transformable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":1764,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":265,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/CircleShape","kind":"class","full_name":"SF::CircleShape","name":"CircleShape"},{"html_id":"github.com/oprypin/crsfml/SF/ConvexShape","kind":"class","full_name":"SF::ConvexShape","name":"ConvexShape"},{"html_id":"github.com/oprypin/crsfml/SF/RectangleShape","kind":"class","full_name":"SF::RectangleShape","name":"RectangleShape"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Base class for textured shapes with outline\n\n`SF::Shape` is a drawable class that allows to define and\ndisplay a custom convex shape on a render target.\nIt's only an abstract base, it needs to be specialized for\nconcrete types of shapes (circle, rectangle, convex polygon,\nstar, ...).\n\nIn addition to the attributes provided by the specialized\nshape classes, a shape always has the following attributes:\n* a texture\n* a texture rectangle\n* a fill color\n* an outline color\n* an outline thickness\n\nEach feature is optional, and can be disabled easily:\n* the texture can be null\n* the fill/outline colors can be `SF::Color::Transparent`\n* the outline thickness can be zero\n\nYou can write your own derived shape class, there are only\ntwo virtual functions to override:\n* `point_count` must return the number of points of the shape\n* `get_point` must return the points of the shape\n\n*See also:* `SF::RectangleShape`, `SF::CircleShape`, `SF::ConvexShape`, `SF::Transformable`","summary":"<p>Base class for textured shapes with outline</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"fill_color:Color-instance-method","html_id":"fill_color:Color-instance-method","name":"fill_color","doc":"Get the fill color of the shape\n\n*Returns:* Fill color of the shape\n\n*See also:* `fill_color=`","summary":"<p>Get the fill color of the shape</p>","abstract":false,"args":[],"args_string":" : Color","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1870","def":{"name":"fill_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"result = Color.allocate\nSFMLExt.sfml_shape_getfillcolor(to_unsafe, result)\nreturn result\n"}},{"id":"fill_color=(color:Color)-instance-method","html_id":"fill_color=(color:Color)-instance-method","name":"fill_color=","doc":"Set the fill color of the shape\n\nThis color is modulated (multiplied) with the shape's\ntexture if any. It can be used to colorize the shape,\nor change its global opacity.\nYou can use `SF::Color::Transparent` to make the inside of\nthe shape transparent, and have the outline alone.\nBy default, the shape's fill color is opaque white.\n\n* *color* - New color of the shape\n\n*See also:* `fill_color`, `outline_color=`","summary":"<p>Set the fill color of the shape</p>","abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"args_string":"(color : Color)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1817","def":{"name":"fill_color=","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shape_setfillcolor_QVe(to_unsafe, color)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Virtual destructor","summary":"<p>Virtual destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1767","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shape_finalize(to_unsafe)\nSFMLExt.sfml_shape_free(@this)\n"}},{"id":"get_point(index:Int):Vector2f-instance-method","html_id":"get_point(index:Int):Vector2f-instance-method","name":"get_point","doc":"Get a point of the shape\n\nThe returned point is in local coordinates, that is,\nthe shape's transforms (position, rotation, scale) are\nnot taken into account.\nThe result is undefined if *index* is out of the valid range.\n\n* *index* - Index of the point to get, in range `0 ... point_count`\n\n*Returns:* index-th point of the shape\n\n*See also:* `point_count`","summary":"<p>Get a point of the shape</p>","abstract":true,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1912","def":{"name":"get_point","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":""}},{"id":"global_bounds:FloatRect-instance-method","html_id":"global_bounds:FloatRect-instance-method","name":"global_bounds","doc":"Get the global (non-minimal) bounding rectangle of the entity\n\nThe returned rectangle is in global coordinates, which means\nthat it takes into account the transformations (translation,\nrotation, scale, ...) that are applied to the entity.\nIn other words, this function returns the bounds of the\nshape in the global 2D world's coordinate system.\n\nThis function does not necessarily return the *minimal*\nbounding rectangle. It merely ensures that the returned\nrectangle covers all the vertices (but possibly more).\nThis allows for a fast approximation of the bounds as a\nfirst check; you may want to use more precise checks\non top of that.\n\n*Returns:* Global bounding rectangle of the entity","summary":"<p>Get the global (non-minimal) bounding rectangle of the entity</p>","abstract":false,"args":[],"args_string":" : FloatRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1943","def":{"name":"global_bounds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FloatRect","visibility":"Public","body":"result = FloatRect.allocate\nSFMLExt.sfml_shape_getglobalbounds(to_unsafe, result)\nreturn result\n"}},{"id":"local_bounds:FloatRect-instance-method","html_id":"local_bounds:FloatRect-instance-method","name":"local_bounds","doc":"Get the local bounding rectangle of the entity\n\nThe returned rectangle is in local coordinates, which means\nthat it ignores the transformations (translation, rotation,\nscale, ...) that are applied to the entity.\nIn other words, this function returns the bounds of the\nentity in the entity's coordinate system.\n\n*Returns:* Local bounding rectangle of the entity","summary":"<p>Get the local bounding rectangle of the entity</p>","abstract":false,"args":[],"args_string":" : FloatRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1922","def":{"name":"local_bounds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FloatRect","visibility":"Public","body":"result = FloatRect.allocate\nSFMLExt.sfml_shape_getlocalbounds(to_unsafe, result)\nreturn result\n"}},{"id":"outline_color:Color-instance-method","html_id":"outline_color:Color-instance-method","name":"outline_color","doc":"Get the outline color of the shape\n\n*Returns:* Outline color of the shape\n\n*See also:* `outline_color=`","summary":"<p>Get the outline color of the shape</p>","abstract":false,"args":[],"args_string":" : Color","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1880","def":{"name":"outline_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"result = Color.allocate\nSFMLExt.sfml_shape_getoutlinecolor(to_unsafe, result)\nreturn result\n"}},{"id":"outline_color=(color:Color)-instance-method","html_id":"outline_color=(color:Color)-instance-method","name":"outline_color=","doc":"Set the outline color of the shape\n\nBy default, the shape's outline color is opaque white.\n\n* *color* - New outline color of the shape\n\n*See also:* `outline_color`, `fill_color=`","summary":"<p>Set the outline color of the shape</p>","abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"args_string":"(color : Color)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1827","def":{"name":"outline_color=","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shape_setoutlinecolor_QVe(to_unsafe, color)"}},{"id":"outline_thickness:Float32-instance-method","html_id":"outline_thickness:Float32-instance-method","name":"outline_thickness","doc":"Get the outline thickness of the shape\n\n*Returns:* Outline thickness of the shape\n\n*See also:* `outline_thickness=`","summary":"<p>Get the outline thickness of the shape</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1890","def":{"name":"outline_thickness","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_shape_getoutlinethickness(to_unsafe, out result)\nreturn result\n"}},{"id":"outline_thickness=(thickness:Number)-instance-method","html_id":"outline_thickness=(thickness:Number)-instance-method","name":"outline_thickness=","doc":"Set the thickness of the shape's outline\n\nNote that negative values are allowed (so that the outline\nexpands towards the center of the shape), and using zero\ndisables the outline.\nBy default, the outline thickness is 0.\n\n* *thickness* - New outline thickness\n\n*See also:* `outline_thickness`","summary":"<p>Set the thickness of the shape's outline</p>","abstract":false,"args":[{"name":"thickness","doc":null,"default_value":"","external_name":"thickness","restriction":"Number"}],"args_string":"(thickness : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1840","def":{"name":"outline_thickness=","args":[{"name":"thickness","doc":null,"default_value":"","external_name":"thickness","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shape_setoutlinethickness_Bw9(to_unsafe, LibC::Float.new(thickness))"}},{"id":"point_count:Int32-instance-method","html_id":"point_count:Int32-instance-method","name":"point_count","doc":"Get the total number of points of the shape\n\n*Returns:* Number of points of the shape\n\n*See also:* `point`","summary":"<p>Get the total number of points of the shape</p>","abstract":true,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1899","def":{"name":"point_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"set_texture(texture:Texture?,reset_rect:Bool=false)-instance-method","html_id":"set_texture(texture:Texture?,reset_rect:Bool=false)-instance-method","name":"set_texture","doc":"Change the source texture of the shape\n\nThe *texture* argument refers to a texture that must\nexist as long as the shape uses it. Indeed, the shape\ndoesn't store its own copy of the texture, but rather keeps\na pointer to the one that you passed to this function.\nIf the source texture is destroyed and the shape tries to\nuse it, the behavior is undefined.\n*texture* can be NULL to disable texturing.\nIf *reset_rect* is true, the TextureRect property of\nthe shape is automatically adjusted to the size of the new\ntexture. If it is false, the texture rect is left unchanged.\n\n* *texture* - New texture\n* *reset_rect* - Should the texture rect be reset to the size of the new texture?\n\n*See also:* `texture`, `texture_rect=`","summary":"<p>Change the source texture of the shape</p>","abstract":false,"args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture | ::Nil"},{"name":"reset_rect","doc":null,"default_value":"false","external_name":"reset_rect","restriction":"Bool"}],"args_string":"(texture : Texture?, reset_rect : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1788","def":{"name":"set_texture","args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture | ::Nil"},{"name":"reset_rect","doc":null,"default_value":"false","external_name":"reset_rect","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_shape_texture = texture\nSFMLExt.sfml_shape_settexture_MXdGZq(to_unsafe, texture, reset_rect)\n"}},{"id":"texture=(texture:Texture)-instance-method","html_id":"texture=(texture:Texture)-instance-method","name":"texture=","doc":"Shorthand for `set_texture`","summary":"<p>Shorthand for <code><a href=\"../SF/Shape.html#set_texture(texture:Texture?,reset_rect:Bool=false)-instance-method\">#set_texture</a></code></p>","abstract":false,"args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"}],"args_string":"(texture : Texture)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L267","def":{"name":"texture=","args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set_texture(texture)"}},{"id":"texture_rect:IntRect-instance-method","html_id":"texture_rect:IntRect-instance-method","name":"texture_rect","doc":"Get the sub-rectangle of the texture displayed by the shape\n\n*Returns:* Texture rectangle of the shape\n\n*See also:* `texture_rect=`","summary":"<p>Get the sub-rectangle of the texture displayed by the shape</p>","abstract":false,"args":[],"args_string":" : IntRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1860","def":{"name":"texture_rect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IntRect","visibility":"Public","body":"result = IntRect.allocate\nSFMLExt.sfml_shape_gettexturerect(to_unsafe, result)\nreturn result\n"}},{"id":"texture_rect=(rect:IntRect)-instance-method","html_id":"texture_rect=(rect:IntRect)-instance-method","name":"texture_rect=","doc":"Set the sub-rectangle of the texture that the shape will display\n\nThe texture rect is useful when you don't want to display\nthe whole texture, but rather a part of it.\nBy default, the texture rect covers the entire texture.\n\n* *rect* - Rectangle defining the region of the texture to display\n\n*See also:* `texture_rect`, `texture=`","summary":"<p>Set the sub-rectangle of the texture that the shape will display</p>","abstract":false,"args":[{"name":"rect","doc":null,"default_value":"","external_name":"rect","restriction":"IntRect"}],"args_string":"(rect : IntRect)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1802","def":{"name":"texture_rect=","args":[{"name":"rect","doc":null,"default_value":"","external_name":"rect","restriction":"IntRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shape_settexturerect_2k1(to_unsafe, rect)"}},{"id":"update-instance-method","html_id":"update-instance-method","name":"update","doc":"Recompute the internal geometry of the shape\n\nThis function must be called by the derived class everytime\nthe shape's points change (i.e. the result of either\n`point_count` or `get_point` is different).","summary":"<p>Recompute the internal geometry of the shape</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1959","def":{"name":"update","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_shape_update(to_unsafe)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Socket","path":"SF/Socket.html","kind":"class","full_name":"SF::Socket","name":"Socket","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":35,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"AnyPort","name":"AnyPort","value":"0","doc":"Special value that tells the system to pick any available port","summary":"<p>Special value that tells the system to pick any available port</p>"}],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/TcpListener","kind":"class","full_name":"SF::TcpListener","name":"TcpListener"},{"html_id":"github.com/oprypin/crsfml/SF/TcpSocket","kind":"class","full_name":"SF::TcpSocket","name":"TcpSocket"},{"html_id":"github.com/oprypin/crsfml/SF/UdpSocket","kind":"class","full_name":"SF::UdpSocket","name":"UdpSocket"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Base class for all the socket types\n\nThis class mainly defines internal stuff to be used by\nderived classes.\n\nThe only public features that it defines, and which\nis therefore common to all the socket classes, is the\nblocking state. All sockets can be set as blocking or\nnon-blocking.\n\nIn blocking mode, socket functions will hang until\nthe operation completes, which means that the entire\nprogram (well, in fact the current thread if you use\nmultiple ones) will be stuck waiting for your socket\noperation to complete.\n\nIn non-blocking mode, all the socket functions will\nreturn immediately. If the socket is not ready to complete\nthe requested operation, the function simply returns\nthe proper status code (Socket::NotReady).\n\nThe default mode, which is blocking, is the one that is\ngenerally used, in combination with threads or selectors.\nThe non-blocking mode is rather used in real-time\napplications that run an endless loop that can poll\nthe socket often enough, and cannot afford blocking\nthis loop.\n\n*See also:* `SF::TcpListener`, `SF::TcpSocket`, `SF::UdpSocket`","summary":"<p>Base class for all the socket types</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"blocking=(blocking:Bool)-instance-method","html_id":"blocking=(blocking:Bool)-instance-method","name":"blocking=","doc":"Set the blocking state of the socket\n\nIn blocking mode, calls will not return until they have\ncompleted their task. For example, a call to Receive in\nblocking mode won't return until some data was actually\nreceived.\nIn non-blocking mode, calls will always return immediately,\nusing the return code to signal whether there was data\navailable or not.\nBy default, all sockets are blocking.\n\n* *blocking* - True to set the socket as blocking, false for non-blocking\n\n*See also:* `blocking?`","summary":"<p>Set the blocking state of the socket</p>","abstract":false,"args":[{"name":"blocking","doc":null,"default_value":"","external_name":"blocking","restriction":"Bool"}],"args_string":"(blocking : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L72","def":{"name":"blocking=","args":[{"name":"blocking","doc":null,"default_value":"","external_name":"blocking","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_socket_setblocking_GZq(to_unsafe, blocking)"}},{"id":"blocking?:Bool-instance-method","html_id":"blocking?:Bool-instance-method","name":"blocking?","doc":"Tell whether the socket is in blocking or non-blocking mode\n\n*Returns:* True if the socket is blocking, false otherwise\n\n*See also:* `blocking=`","summary":"<p>Tell whether the socket is in blocking or non-blocking mode</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L80","def":{"name":"blocking?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_socket_isblocking(to_unsafe, out result)\nreturn result\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L54","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_socket_finalize(to_unsafe)\nSFMLExt.sfml_socket_free(@this)\n"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Socket/Status","path":"SF/Socket/Status.html","kind":"enum","full_name":"SF::Socket::Status","name":"Status","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":38,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Done","name":"Done","value":"0","doc":"The socket has sent / received the data","summary":"<p>The socket has sent / received the data</p>"},{"id":"NotReady","name":"NotReady","value":"1","doc":"The socket is not ready to send / receive data yet","summary":"<p>The socket is not ready to send / receive data yet</p>"},{"id":"Partial","name":"Partial","value":"2","doc":"The socket sent a part of the data","summary":"<p>The socket sent a part of the data</p>"},{"id":"Disconnected","name":"Disconnected","value":"3","doc":"The TCP socket has been disconnected","summary":"<p>The TCP socket has been disconnected</p>"},{"id":"Error","name":"Error","value":"4","doc":"An unexpected error happened","summary":"<p>An unexpected error happened</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Socket","kind":"class","full_name":"SF::Socket","name":"Socket"},"doc":"Status codes that may be returned by socket functions","summary":"<p>Status codes that may be returned by socket functions</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"disconnected?-instance-method","html_id":"disconnected?-instance-method","name":"disconnected?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L46","def":{"name":"disconnected?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Disconnected"}},{"id":"done?-instance-method","html_id":"done?-instance-method","name":"done?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L40","def":{"name":"done?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Done"}},{"id":"error?-instance-method","html_id":"error?-instance-method","name":"error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L48","def":{"name":"error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Error"}},{"id":"not_ready?-instance-method","html_id":"not_ready?-instance-method","name":"not_ready?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L42","def":{"name":"not_ready?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NotReady"}},{"id":"partial?-instance-method","html_id":"partial?-instance-method","name":"partial?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L44","def":{"name":"partial?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Partial"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Socket/Type","path":"SF/Socket/Type.html","kind":"enum","full_name":"SF::Socket::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":85,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Tcp","name":"Tcp","value":"0","doc":"TCP protocol","summary":"<p>TCP protocol</p>"},{"id":"Udp","name":"Udp","value":"1","doc":"UDP protocol","summary":"<p>UDP protocol</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Socket","kind":"class","full_name":"SF::Socket","name":"Socket"},"doc":"Types of protocols that the socket can use","summary":"<p>Types of protocols that the socket can use</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"tcp?-instance-method","html_id":"tcp?-instance-method","name":"tcp?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L87","def":{"name":"tcp?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Tcp"}},{"id":"udp?-instance-method","html_id":"udp?-instance-method","name":"udp?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L89","def":{"name":"udp?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Udp"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/SocketSelector","path":"SF/SocketSelector.html","kind":"class","full_name":"SF::SocketSelector","name":"SocketSelector","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":1950,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Multiplexer that allows to read from multiple sockets\n\nSocket selectors provide a way to wait until some data is\navailable on a set of sockets, instead of just one. This\nis convenient when you have multiple sockets that may\npossibly receive data, but you don't know which one will\nbe ready first. In particular, it avoids to use a thread\nfor each socket; with selectors, a single thread can handle\nall the sockets.\n\nAll types of sockets can be used in a selector:\n* `SF::TcpListener`\n* `SF::TcpSocket`\n* `SF::UdpSocket`\n\nA selector doesn't store its own copies of the sockets\n(socket classes are not copyable anyway), it simply keeps\na reference to the original sockets that you pass to the\n\"add\" function. Therefore, you can't use the selector as a\nsocket container, you must store them outside and make sure\nthat they are alive as long as they are used in the selector.\n\nUsing a selector is simple:\n* populate the selector with all the sockets that you want to observe\n* make it wait until there is data available on any of the sockets\n* test each socket to find out which ones are ready\n\nUsage example:\n```\n# Create a socket to listen to new connections\nlistener = SF::TcpListener.new\nlistener.listen(55001)\n\n# Create an array to store the future clients\nclients = [] of SF::TcpSocket\n\n# Create a selector\nselector = SF::SocketSelector.new\n\n# Add the listener to the selector\nselector.add listener\n\n# Endless loop that waits for new connections\nwhile running\n  # Make the selector wait for data on any socket\n  if selector.wait()\n    # Test the listener\n    if selector.ready?(listener)\n      # The listener is ready: there is a pending connection\n      client = SF::TcpSocket.new\n      if listener.accept(client) == SF::Socket::Done\n        # Add the new client to the clients list\n        clients << client\n\n        # Add the new client to the selector so that we will\n        # be notified when he sends something\n        selector.add client\n      end\n    else\n      # The listener socket is not ready, test all other sockets (the clients)\n      clients.each do |client|\n        if selector.ready?(client)\n          # The client has sent some data, we can receive it\n          packet = SF::Packet.new\n          if client.receive(packet) == SF::Socket::Done\n              ...\n          end\n        end\n      end\n    end\n  end\nend\n```\n\n*See also:* `SF::Socket`","summary":"<p>Multiplexer that allows to read from multiple sockets</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1953","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(socket:Socket)-instance-method","html_id":"add(socket:Socket)-instance-method","name":"add","doc":"Add a new socket to the selector\n\nThis function keeps a weak reference to the socket,\nso you have to make sure that the socket is not destroyed\nwhile it is stored in the selector.\nThis function does nothing if the socket is not valid.\n\n* *socket* - Reference to the socket to add\n\n*See also:* `remove`, `clear`","summary":"<p>Add a new socket to the selector</p>","abstract":false,"args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"Socket"}],"args_string":"(socket : Socket)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1972","def":{"name":"add","args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"Socket"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_socketselector_add_JTp(to_unsafe, socket)"}},{"id":"clear-instance-method","html_id":"clear-instance-method","name":"clear","doc":"Remove all the sockets stored in the selector\n\nThis function doesn't destroy any instance, it simply\nremoves all the references that the selector has to\nexternal sockets.\n\n*See also:* `add`, `remove`","summary":"<p>Remove all the sockets stored in the selector</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1993","def":{"name":"clear","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_socketselector_clear(to_unsafe)"}},{"id":"dup:SocketSelector-instance-method","html_id":"dup:SocketSelector-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : SocketSelector","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2044","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SocketSelector","visibility":"Public","body":"return SocketSelector.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1958","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_socketselector_finalize(to_unsafe)\nSFMLExt.sfml_socketselector_free(@this)\n"}},{"id":"ready?(socket:Socket):Bool-instance-method","html_id":"ready?(socket:Socket):Bool-instance-method","name":"ready?","doc":"Test a socket to know if it is ready to receive data\n\nThis function must be used after a call to Wait, to know\nwhich sockets are ready to receive data. If a socket is\nready, a call to receive will never block because we know\nthat there is data available to read.\nNote that if this function returns true for a TcpListener,\nthis means that it is ready to accept a new connection.\n\n* *socket* - Socket to test\n\n*Returns:* True if the socket is ready to read, false otherwise\n\n*See also:* `ready?`","summary":"<p>Test a socket to know if it is ready to receive data</p>","abstract":false,"args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"Socket"}],"args_string":"(socket : Socket) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2027","def":{"name":"ready?","args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"Socket"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_socketselector_isready_JTp(to_unsafe, socket, out result)\nreturn result\n"}},{"id":"remove(socket:Socket)-instance-method","html_id":"remove(socket:Socket)-instance-method","name":"remove","doc":"Remove a socket from the selector\n\nThis function doesn't destroy the socket, it simply\nremoves the reference that the selector has to it.\n\n* *socket* - Reference to the socket to remove\n\n*See also:* `add`, `clear`","summary":"<p>Remove a socket from the selector</p>","abstract":false,"args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"Socket"}],"args_string":"(socket : Socket)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L1983","def":{"name":"remove","args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"Socket"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_socketselector_remove_JTp(to_unsafe, socket)"}},{"id":"wait(timeout:Time=Time::Zero):Bool-instance-method","html_id":"wait(timeout:Time=Time::Zero):Bool-instance-method","name":"wait","doc":"Wait until one or more sockets are ready to receive\n\nThis function returns as soon as at least one socket has\nsome data available to be received. To know which sockets are\nready, use the ready? function.\nIf you use a timeout and no socket is ready before the timeout\nis over, the function returns false.\n\n* *timeout* - Maximum time to wait, (use Time::Zero for infinity)\n\n*Returns:* True if there are sockets ready, false otherwise\n\n*See also:* `ready?`","summary":"<p>Wait until one or more sockets are ready to receive</p>","abstract":false,"args":[{"name":"timeout","doc":null,"default_value":"Time::Zero","external_name":"timeout","restriction":"Time"}],"args_string":"(timeout : Time = <span class=\"t\">Time</span><span class=\"t\">::</span><span class=\"t\">Zero</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2009","def":{"name":"wait","args":[{"name":"timeout","doc":null,"default_value":"Time::Zero","external_name":"timeout","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_socketselector_wait_f4T(to_unsafe, timeout, out result)\nreturn result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Sound","path":"SF/Sound.html","kind":"class","full_name":"SF::Sound","name":"Sound","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/SoundSource","kind":"class","full_name":"SF::SoundSource","name":"SoundSource"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/SoundSource","kind":"class","full_name":"SF::SoundSource","name":"SoundSource"},{"html_id":"github.com/oprypin/crsfml/SF/AlResource","kind":"module","full_name":"SF::AlResource","name":"AlResource"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"audio/obj.cr","line_number":1087,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Regular sound that can be played in the audio environment\n\n`SF::Sound` is the class to use to play sounds.\nIt provides:\n* Control (play, pause, stop)\n* Ability to modify output parameters in real-time (pitch, volume, ...)\n* 3D spatial features (position, attenuation, ...).\n\n`SF::Sound` is perfect for playing short sounds that can\nfit in memory and require no latency, like foot steps or\ngun shots. For longer sounds, like background musics\nor long speeches, rather see `SF::Music` (which is based\non streaming).\n\nIn order to work, a sound must be given a buffer of audio\ndata to play. Audio data (samples) is stored in `SF::SoundBuffer`,\nand attached to a sound with the buffer=() function.\nThe buffer object attached to a sound must remain alive\nas long as the sound uses it. Note that multiple sounds\ncan use the same sound buffer at the same time.\n\nUsage example:\n```\nbuffer = SF::SoundBuffer.from_file(\"sound.wav\")\n\nsound = SF::Sound.new\nsound.buffer = buffer\nsound.play()\n```\n\n*See also:* `SF::SoundBuffer`, `SF::Music`","summary":"<p>Regular sound that can be played in the audio environment</p>","class_methods":[],"constructors":[{"id":"new(buffer:SoundBuffer)-class-method","html_id":"new(buffer:SoundBuffer)-class-method","name":"new","doc":"Construct the sound with a buffer\n\n* *buffer* - Sound buffer containing the audio data to play with the sound","summary":"<p>Construct the sound with a buffer</p>","abstract":false,"args":[{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"SoundBuffer"}],"args_string":"(buffer : SoundBuffer)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1097","def":{"name":"new","args":[{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"SoundBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(buffer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1090","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"buffer=(buffer:SoundBuffer)-instance-method","html_id":"buffer=(buffer:SoundBuffer)-instance-method","name":"buffer=","doc":"Set the source buffer containing the audio data to play\n\nIt is important to note that the sound buffer is not copied,\nthus the `SF::SoundBuffer` instance must remain alive as long\nas it is attached to the sound.\n\n* *buffer* - Sound buffer to attach to the sound\n\n*See also:* `buffer`","summary":"<p>Set the source buffer containing the audio data to play</p>","abstract":false,"args":[{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"SoundBuffer"}],"args_string":"(buffer : SoundBuffer)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1147","def":{"name":"buffer=","args":[{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"SoundBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_sound_buffer = buffer\nSFMLExt.sfml_sound_setbuffer_mWu(to_unsafe, buffer)\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1103","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_sound_finalize(to_unsafe)\nSFMLExt.sfml_sound_free(@this)\n"}},{"id":"loop:Bool-instance-method","html_id":"loop:Bool-instance-method","name":"loop","doc":"Tell whether or not the sound is in loop mode\n\n*Returns:* True if the sound is looping, false otherwise\n\n*See also:* `loop=`","summary":"<p>Tell whether or not the sound is in loop mode</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1189","def":{"name":"loop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_sound_getloop(to_unsafe, out result)\nreturn result\n"}},{"id":"loop=(loop:Bool)-instance-method","html_id":"loop=(loop:Bool)-instance-method","name":"loop=","doc":"Set whether or not the sound should loop after reaching the end\n\nIf set, the sound will restart from beginning after\nreaching the end and so on, until it is stopped or\nloop=(false) is called.\nThe default looping state for sound is false.\n\n* *loop* - True to play in loop, false to play once\n\n*See also:* `loop`","summary":"<p>Set whether or not the sound should loop after reaching the end</p>","abstract":false,"args":[{"name":"loop","doc":null,"default_value":"","external_name":"loop","restriction":"Bool"}],"args_string":"(loop : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1162","def":{"name":"loop=","args":[{"name":"loop","doc":null,"default_value":"","external_name":"loop","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_sound_setloop_GZq(to_unsafe, loop)"}},{"id":"pause-instance-method","html_id":"pause-instance-method","name":"pause","doc":"Pause the sound\n\nThis function pauses the sound if it was playing,\notherwise (sound already paused or stopped) it has no effect.\n\n*See also:* `play`, `stop`","summary":"<p>Pause the sound</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1125","def":{"name":"pause","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_sound_pause(to_unsafe)"}},{"id":"play-instance-method","html_id":"play-instance-method","name":"play","doc":"Start or resume playing the sound\n\nThis function starts the stream if it was stopped, resumes\nit if it was paused, and restarts it from beginning if it\nwas it already playing.\nThis function uses its own thread so that it doesn't block\nthe rest of the program while the sound is played.\n\n*See also:* `pause`, `stop`","summary":"<p>Start or resume playing the sound</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1116","def":{"name":"play","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_sound_play(to_unsafe)"}},{"id":"playing_offset:Time-instance-method","html_id":"playing_offset:Time-instance-method","name":"playing_offset","doc":"Get the current playing position of the sound\n\n*Returns:* Current playing position, from the beginning of the sound\n\n*See also:* `playing_offset=`","summary":"<p>Get the current playing position of the sound</p>","abstract":false,"args":[],"args_string":" : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1198","def":{"name":"playing_offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_sound_getplayingoffset(to_unsafe, result)\nreturn result\n"}},{"id":"playing_offset=(time_offset:Time)-instance-method","html_id":"playing_offset=(time_offset:Time)-instance-method","name":"playing_offset=","doc":"Change the current playing position of the sound\n\nThe playing position can be changed when the sound is\neither paused or playing. Changing the playing position\nwhen the sound is stopped has no effect, since playing\nthe sound will reset its position.\n\n* *time_offset* - New playing position, from the beginning of the sound\n\n*See also:* `playing_offset`","summary":"<p>Change the current playing position of the sound</p>","abstract":false,"args":[{"name":"time_offset","doc":null,"default_value":"","external_name":"time_offset","restriction":"Time"}],"args_string":"(time_offset : Time)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1175","def":{"name":"playing_offset=","args":[{"name":"time_offset","doc":null,"default_value":"","external_name":"time_offset","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_sound_setplayingoffset_f4T(to_unsafe, time_offset)"}},{"id":"reset_buffer-instance-method","html_id":"reset_buffer-instance-method","name":"reset_buffer","doc":"Reset the internal buffer of the sound\n\nThis function is for internal use only, you don't have\nto use it. It is called by the `SF::SoundBuffer` that\nthis sound uses, when it is destroyed in order to prevent\nthe sound from using a dead buffer.","summary":"<p>Reset the internal buffer of the sound</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1216","def":{"name":"reset_buffer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_sound_resetbuffer(to_unsafe)"}},{"id":"status:SoundSource::Status-instance-method","html_id":"status:SoundSource::Status-instance-method","name":"status","doc":"Get the current status of the sound (stopped, paused, playing)\n\n*Returns:* Current status of the sound","summary":"<p>Get the current status of the sound (stopped, paused, playing)</p>","abstract":false,"args":[],"args_string":" : SoundSource::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1206","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SoundSource::Status","visibility":"Public","body":"SFMLExt.sfml_sound_getstatus(to_unsafe, out result)\nreturn SoundSource::Status.new(result)\n"}},{"id":"stop-instance-method","html_id":"stop-instance-method","name":"stop","doc":"stop playing the sound\n\nThis function stops the sound if it was playing or paused,\nand does nothing if it was already stopped.\nIt also resets the playing position (unlike pause()).\n\n*See also:* `play`, `pause`","summary":"<p>stop playing the sound</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1135","def":{"name":"stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_sound_stop(to_unsafe)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/SoundBuffer","path":"SF/SoundBuffer.html","kind":"class","full_name":"SF::SoundBuffer","name":"SoundBuffer","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/AlResource","kind":"module","full_name":"SF::AlResource","name":"AlResource"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"audio/obj.cr","line_number":1347,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/AlResource","kind":"module","full_name":"SF::AlResource","name":"AlResource"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Storage for audio samples defining a sound\n\nA sound buffer holds the data of a sound, which is\nan array of audio samples. A sample is a 16 bits signed integer\nthat defines the amplitude of the sound at a given time.\nThe sound is then reconstituted by playing these samples at\na high rate (for example, 44100 samples per second is the\nstandard rate used for playing CDs). In short, audio samples\nare like texture pixels, and a `SF::SoundBuffer` is similar to\na `SF::Texture`.\n\nA sound buffer can be loaded from a file (see load_from_file()\nfor the complete list of supported formats), from memory, from\na custom stream (see `SF::InputStream`) or directly from an array\nof samples. It can also be saved back to a file.\n\nSound buffers alone are not very useful: they hold the audio data\nbut cannot be played. To do so, you need to use the `SF::Sound` class,\nwhich provides functions to play/pause/stop the sound as well as\nchanging the way it is outputted (volume, pitch, 3D position, ...).\nThis separation allows more flexibility and better performances:\nindeed a `SF::SoundBuffer` is a heavy resource, and any operation on it\nis slow (often too slow for real-time applications). On the other\nside, a `SF::Sound` is a lightweight object, which can use the audio data\nof a sound buffer and change the way it is played without actually\nmodifying that data. Note that it is also possible to bind\nseveral `SF::Sound` instances to the same `SF::SoundBuffer`.\n\nIt is important to note that the `SF::Sound` instance doesn't\ncopy the buffer that it uses, it only keeps a reference to it.\nThus, a `SF::SoundBuffer` must not be destructed while it is\nused by a `SF::Sound` (i.e. never write a function that\nuses a local `SF::SoundBuffer` instance for loading a sound).\n\nUsage example:\n```\n# Load a new sound buffer from a file\nbuffer = SF::SoundBuffer.from_file(\"sound.wav\")\n\n# Create a sound source and bind it to the buffer\nsound1 = SF::Sound.new\nsound1.buffer = buffer\n\n# Play the sound\nsound1.play()\n\n# Create another sound source bound to the same buffer\nsound2 = SF::Sound.new\nsound2.buffer = buffer\n\n# Play it with a higher pitch -- the first sound remains unchanged\nsound2.pitch = 2\nsound2.play()\n```\n\n*See also:* `SF::Sound`, `SF::SoundBufferRecorder`","summary":"<p>Storage for audio samples defining a sound</p>","class_methods":[],"constructors":[{"id":"from_file(*args,**kwargs):self-class-method","html_id":"from_file(*args,**kwargs):self-class-method","name":"from_file","doc":"Shorthand for `sound_buffer = SoundBuffer.new; sound_buffer.load_from_file(...); sound_buffer`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>sound_buffer = <a href=\"../SF/SoundBuffer.html#new-class-method\">SoundBuffer.new</a>; sound_buffer<a href=\"../SF/SoundBuffer.html#load_from_file(filename:String):Bool-instance-method\">.load_from_file(...)</a>; sound_buffer</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1376","def":{"name":"from_file","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_file(*args, **kwargs))\n  raise(InitError.new(\"SoundBuffer.load_from_file failed\"))\nend\nobj\n"}},{"id":"from_memory(*args,**kwargs):self-class-method","html_id":"from_memory(*args,**kwargs):self-class-method","name":"from_memory","doc":"Shorthand for `sound_buffer = SoundBuffer.new; sound_buffer.load_from_memory(...); sound_buffer`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>sound_buffer = <a href=\"../SF/SoundBuffer.html#new-class-method\">SoundBuffer.new</a>; sound_buffer<a href=\"../SF/SoundBuffer.html#load_from_memory(data:Slice):Bool-instance-method\">.load_from_memory(...)</a>; sound_buffer</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1400","def":{"name":"from_memory","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_memory(*args, **kwargs))\n  raise(InitError.new(\"SoundBuffer.load_from_memory failed\"))\nend\nobj\n"}},{"id":"from_samples(*args,**kwargs):self-class-method","html_id":"from_samples(*args,**kwargs):self-class-method","name":"from_samples","doc":"Shorthand for `sound_buffer = SoundBuffer.new; sound_buffer.load_from_samples(...); sound_buffer`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>sound_buffer = <a href=\"../SF/SoundBuffer.html#new-class-method\">SoundBuffer.new</a>; sound_buffer.load_from_samples(...); sound_buffer</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1451","def":{"name":"from_samples","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_samples(*args, **kwargs))\n  raise(InitError.new(\"SoundBuffer.load_from_samples failed\"))\nend\nobj\n"}},{"id":"from_stream(*args,**kwargs):self-class-method","html_id":"from_stream(*args,**kwargs):self-class-method","name":"from_stream","doc":"Shorthand for `sound_buffer = SoundBuffer.new; sound_buffer.load_from_stream(...); sound_buffer`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>sound_buffer = <a href=\"../SF/SoundBuffer.html#new-class-method\">SoundBuffer.new</a>; sound_buffer<a href=\"../SF/SoundBuffer.html#load_from_stream(stream:InputStream):Bool-instance-method\">.load_from_stream(...)</a>; sound_buffer</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1424","def":{"name":"from_stream","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_stream(*args, **kwargs))\n  raise(InitError.new(\"SoundBuffer.load_from_stream failed\"))\nend\nobj\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1350","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel_count:Int32-instance-method","html_id":"channel_count:Int32-instance-method","name":"channel_count","doc":"Get the number of channels used by the sound\n\nIf the sound is mono then the number of channels will\nbe 1, 2 for stereo, etc.\n\n*Returns:* Number of channels\n\n*See also:* `sample_rate`, `duration`","summary":"<p>Get the number of channels used by the sound</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1518","def":{"name":"channel_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_soundbuffer_getchannelcount(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"duration:Time-instance-method","html_id":"duration:Time-instance-method","name":"duration","doc":"Get the total duration of the sound\n\n*Returns:* Sound duration\n\n*See also:* `sample_rate`, `channel_count`","summary":"<p>Get the total duration of the sound</p>","abstract":false,"args":[],"args_string":" : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1527","def":{"name":"duration","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_soundbuffer_getduration(to_unsafe, result)\nreturn result\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1355","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundbuffer_finalize(to_unsafe)\nSFMLExt.sfml_soundbuffer_free(@this)\n"}},{"id":"load_from_file(filename:String):Bool-instance-method","html_id":"load_from_file(filename:String):Bool-instance-method","name":"load_from_file","doc":"Load the sound buffer from a file\n\nSee the documentation of `SF::InputSoundFile` for the list\nof supported formats.\n\n* *filename* - Path of the sound file to load\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_memory`, `load_from_stream`, `load_from_samples`, `save_to_file`","summary":"<p>Load the sound buffer from a file</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1369","def":{"name":"load_from_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_soundbuffer_loadfromfile_zkC(to_unsafe, filename.bytesize, filename, out result)\nreturn result\n"}},{"id":"load_from_memory(data:Slice):Bool-instance-method","html_id":"load_from_memory(data:Slice):Bool-instance-method","name":"load_from_memory","doc":"Load the sound buffer from a file in memory\n\nSee the documentation of `SF::InputSoundFile` for the list\nof supported formats.\n\n* *data* - Slice containing the file data in memory\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_file`, `load_from_stream`, `load_from_samples`","summary":"<p>Load the sound buffer from a file in memory</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1393","def":{"name":"load_from_memory","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_soundbuffer_loadfrommemory_5h8vgv(to_unsafe, data, data.bytesize, out result)\nreturn result\n"}},{"id":"load_from_samples(samples:Array(Int16)|Slice(Int16),channel_count:Int,sample_rate:Int):Bool-instance-method","html_id":"load_from_samples(samples:Array(Int16)|Slice(Int16),channel_count:Int,sample_rate:Int):Bool-instance-method","name":"load_from_samples","doc":"Load the sound buffer from an array of audio samples\n\nThe assumed format of the audio samples is 16 bits signed integer\n(`SF::Int16`).\n\n* *samples* - Pointer to the array of samples in memory\n* *sample_count* - Number of samples in the array\n* *channel_count* - Number of channels (1 = mono, 2 = stereo, ...)\n* *sample_rate* - Sample rate (number of samples to play per second)\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_file`, `load_from_memory`, `save_to_file`","summary":"<p>Load the sound buffer from an array of audio samples</p>","abstract":false,"args":[{"name":"samples","doc":null,"default_value":"","external_name":"samples","restriction":"Array(Int16) | Slice(Int16)"},{"name":"channel_count","doc":null,"default_value":"","external_name":"channel_count","restriction":"Int"},{"name":"sample_rate","doc":null,"default_value":"","external_name":"sample_rate","restriction":"Int"}],"args_string":"(samples : Array(Int16) | Slice(Int16), channel_count : Int, sample_rate : Int) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1444","def":{"name":"load_from_samples","args":[{"name":"samples","doc":null,"default_value":"","external_name":"samples","restriction":"Array(Int16) | Slice(Int16)"},{"name":"channel_count","doc":null,"default_value":"","external_name":"channel_count","restriction":"Int"},{"name":"sample_rate","doc":null,"default_value":"","external_name":"sample_rate","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_soundbuffer_loadfromsamples_xzLJvtemSemS(to_unsafe, samples, samples.size, LibC::UInt.new(channel_count), LibC::UInt.new(sample_rate), out result)\nreturn result\n"}},{"id":"load_from_stream(stream:InputStream):Bool-instance-method","html_id":"load_from_stream(stream:InputStream):Bool-instance-method","name":"load_from_stream","doc":"Load the sound buffer from a custom stream\n\nSee the documentation of `SF::InputSoundFile` for the list\nof supported formats.\n\n* *stream* - Source stream to read from\n\n*Returns:* True if loading succeeded, false if it failed\n\n*See also:* `load_from_file`, `load_from_memory`, `load_from_samples`","summary":"<p>Load the sound buffer from a custom stream</p>","abstract":false,"args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"InputStream"}],"args_string":"(stream : InputStream) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1417","def":{"name":"load_from_stream","args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"InputStream"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_soundbuffer_loadfromstream_PO0(to_unsafe, stream, out result)\nreturn result\n"}},{"id":"sample_count:UInt64-instance-method","html_id":"sample_count:UInt64-instance-method","name":"sample_count","doc":"Get the number of samples stored in the buffer\n\nThe array of samples can be accessed with the samples()\nfunction.\n\n*Returns:* Number of samples\n\n*See also:* `samples`","summary":"<p>Get the number of samples stored in the buffer</p>","abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1493","def":{"name":"sample_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"SFMLExt.sfml_soundbuffer_getsamplecount(to_unsafe, out result)\nreturn result\n"}},{"id":"sample_rate:Int32-instance-method","html_id":"sample_rate:Int32-instance-method","name":"sample_rate","doc":"Get the sample rate of the sound\n\nThe sample rate is the number of samples played per second.\nThe higher, the better the quality (for example, 44100\nsamples/s is CD quality).\n\n*Returns:* Sample rate (number of samples per second)\n\n*See also:* `channel_count`, `duration`","summary":"<p>Get the sample rate of the sound</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1506","def":{"name":"sample_rate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_soundbuffer_getsamplerate(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"samples:::Pointer(Int16)-instance-method","html_id":"samples:::Pointer(Int16)-instance-method","name":"samples","doc":"Get the array of audio samples stored in the buffer\n\nThe format of the returned samples is 16 bits signed integer\n(`SF::Int16`). The total number of samples in this array\nis given by the sample_count() function.\n\n*Returns:* Read-only pointer to the array of sound samples\n\n*See also:* `sample_count`","summary":"<p>Get the array of audio samples stored in the buffer</p>","abstract":false,"args":[],"args_string":" : ::Pointer(Int16)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1481","def":{"name":"samples","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(Int16)","visibility":"Public","body":"SFMLExt.sfml_soundbuffer_getsamples(to_unsafe, out result)\nreturn result\n"}},{"id":"save_to_file(filename:String):Bool-instance-method","html_id":"save_to_file(filename:String):Bool-instance-method","name":"save_to_file","doc":"Save the sound buffer to an audio file\n\nSee the documentation of `SF::OutputSoundFile` for the list\nof supported formats.\n\n* *filename* - Path of the sound file to write\n\n*Returns:* True if saving succeeded, false if it failed\n\n*See also:* `load_from_file`, `load_from_memory`, `load_from_samples`","summary":"<p>Save the sound buffer to an audio file</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1468","def":{"name":"save_to_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_soundbuffer_savetofile_zkC(to_unsafe, filename.bytesize, filename, out result)\nreturn result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/SoundBufferRecorder","path":"SF/SoundBufferRecorder.html","kind":"class","full_name":"SF::SoundBufferRecorder","name":"SoundBufferRecorder","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/SoundRecorder","kind":"class","full_name":"SF::SoundRecorder","name":"SoundRecorder"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/SoundRecorder","kind":"class","full_name":"SF::SoundRecorder","name":"SoundRecorder"},{"html_id":"github.com/oprypin/crsfml/SF/AlResource","kind":"module","full_name":"SF::AlResource","name":"AlResource"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"audio/obj.cr","line_number":1877,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Specialized SoundRecorder which stores the captured\naudio data into a sound buffer\n\n`SF::SoundBufferRecorder` allows to access a recorded sound\nthrough a `SF::SoundBuffer`, so that it can be played, saved\nto a file, etc.\n\nIt has the same simple interface as its base class (start(), stop())\nand adds a function to retrieve the recorded sound buffer\n(buffer()).\n\nAs usual, don't forget to call the available?() function\nbefore using this class (see `SF::SoundRecorder` for more details\nabout this).\n\nUsage example:\n```\nif SF::SoundBufferRecorder.available?\n  # Record some audio data\n  recorder = SF::SoundBufferRecorder.new\n  recorder.start()\n  ...\n  recorder.stop()\n\n  # Get the buffer containing the captured audio data\n  buffer = recorder.buffer\n\n  # Save it to a file (for example...)\n  buffer.save_to_file(\"my_record.ogg\")\nend\n```\n\n*See also:* `SF::SoundRecorder`","summary":"<p>Specialized SoundRecorder which stores the captured audio data into a sound buffer</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1879","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"buffer:SoundBuffer-instance-method","html_id":"buffer:SoundBuffer-instance-method","name":"buffer","doc":"Get the sound buffer containing the captured audio data\n\nThe sound buffer is valid only after the capture has ended.\nThis function provides a read-only access to the internal\nsound buffer, but it can be copied if you need to\nmake any modification to it.\n\n*Returns:* Read-only access to the sound buffer","summary":"<p>Get the sound buffer containing the captured audio data</p>","abstract":false,"args":[],"args_string":" : SoundBuffer","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1896","def":{"name":"buffer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SoundBuffer","visibility":"Public","body":"SFMLExt.sfml_soundbufferrecorder_getbuffer(to_unsafe, out result)\nreturn SoundBuffer::Reference.new(result, self)\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"destructor","summary":"<p>destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1884","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundbufferrecorder_finalize(to_unsafe)\nSFMLExt.sfml_soundbufferrecorder_free(@this)\n"}},{"id":"on_process_samples(samples:Array(Int16)|Slice(Int16)):Bool-instance-method","html_id":"on_process_samples(samples:Array(Int16)|Slice(Int16)):Bool-instance-method","name":"on_process_samples","doc":"Process a new chunk of recorded samples\n\n* *samples* - Pointer to the new chunk of recorded samples\n* *sample_count* - Number of samples pointed by *samples*\n\n*Returns:* True to continue the capture, or false to stop it","summary":"<p>Process a new chunk of recorded samples</p>","abstract":false,"args":[{"name":"samples","doc":null,"default_value":"","external_name":"samples","restriction":"Array(Int16) | Slice(Int16)"}],"args_string":"(samples : Array(Int16) | Slice(Int16)) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1912","def":{"name":"on_process_samples","args":[{"name":"samples","doc":null,"default_value":"","external_name":"samples","restriction":"Array(Int16) | Slice(Int16)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"false"}},{"id":"on_start:Bool-instance-method","html_id":"on_start:Bool-instance-method","name":"on_start","doc":"Start capturing audio data\n\n*Returns:* True to start the capture, or false to abort it","summary":"<p>Start capturing audio data</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1903","def":{"name":"on_start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"false"}},{"id":"on_stop-instance-method","html_id":"on_stop-instance-method","name":"on_stop","doc":"Stop capturing audio data","summary":"<p>Stop capturing audio data</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1916","def":{"name":"on_stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/SoundRecorder","path":"SF/SoundRecorder.html","kind":"class","full_name":"SF::SoundRecorder","name":"SoundRecorder","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/AlResource","kind":"module","full_name":"SF::AlResource","name":"AlResource"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"audio/obj.cr","line_number":1649,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/AlResource","kind":"module","full_name":"SF::AlResource","name":"AlResource"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/SoundBufferRecorder","kind":"class","full_name":"SF::SoundBufferRecorder","name":"SoundBufferRecorder"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Abstract base class for capturing sound data\n\n`SF::SoundBuffer` provides a simple interface to access\nthe audio recording capabilities of the computer\n(the microphone). As an abstract base class, it only cares\nabout capturing sound samples, the task of making something\nuseful with them is left to the derived class. Note that\nSFML provides a built-in specialization for saving the\ncaptured data to a sound buffer (see `SF::SoundBufferRecorder`).\n\nA derived class has only one virtual function to override:\n* on_process_samples provides the new chunks of audio samples while the capture happens\n\nMoreover, two additional virtual functions can be overridden\nas well if necessary:\n* on_start is called before the capture happens, to perform custom initializations\n* on_stop is called after the capture ends, to perform custom cleanup\n\nA derived class can also control the frequency of the on_process_samples\ncalls, with the processing_interval= protected function. The default\ninterval is chosen so that recording thread doesn't consume too much\nCPU, but it can be changed to a smaller value if you need to process\nthe recorded data in real time, for example.\n\nThe audio capture feature may not be supported or activated\non every platform, thus it is recommended to check its\navailability with the available?() function. If it returns\nfalse, then any attempt to use an audio recorder will fail.\n\nIf you have multiple sound input devices connected to your\ncomputer (for example: microphone, external soundcard, webcam mic, ...)\nyou can get a list of all available devices through the\navailable_devices() function. You can then select a device\nby calling device=() with the appropriate device. Otherwise\nthe default capturing device will be used.\n\nBy default the recording is in 16-bit mono. Using the\nchannel_count= method you can change the number of channels\nused by the audio capture device to record. Note that you\nhave to decide whether you want to record in mono or stereo\nbefore starting the recording.\n\nIt is important to note that the audio capture happens in a\nseparate thread, so that it doesn't block the rest of the\nprogram. In particular, the on_process_samples virtual function\n(but not on_start and not on_stop) will be called\nfrom this separate thread. It is important to keep this in\nmind, because you may have to take care of synchronization\nissues if you share data between threads.\nAnother thing to bear in mind is that you must call stop()\nin the destructor of your derived class, so that the recording\nthread finishes before your object is destroyed.\n\nUsage example:\n```\nclass CustomRecorder < SF::SoundRecorder\n  def finalize\n    # Make sure to stop the recording thread\n    stop()\n  end\n\n  def on_start() # optional\n    # Initialize whatever has to be done before the capture starts\n    ...\n\n    # Return true to start playing\n    true\n  end\n\n  def on_process_samples(samples)\n    # Do something with the new chunk of samples (store them, send them, ...)\n    ...\n\n    # Return true to continue playing\n    true\n  end\n\n  def on_stop() # optional\n    # Clean up whatever has to be done after the capture ends\n    ...\n  end\nend\n\n# Usage\nif (CustomRecorder.isAvailable())\n    CustomRecorder recorder\n\n    if (!recorder.start())\n        return -1\n\n    ...\n    recorder.stop()\nend\n```\n\n*See also:* `SF::SoundBufferRecorder`","summary":"<p>Abstract base class for capturing sound data</p>","class_methods":[{"id":"available?:Bool-class-method","html_id":"available?:Bool-class-method","name":"available?","doc":"Check if the system supports audio capture\n\nThis function should always be called before using\nthe audio capture features. If it returns false, then\nany attempt to use `SF::SoundRecorder` or one of its derived\nclasses will fail.\n\n*Returns:* True if audio capture is supported, false otherwise","summary":"<p>Check if the system supports audio capture</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1773","def":{"name":"available?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_isavailable(out result)\nreturn result\n"}},{"id":"available_devices:Array(String)-class-method","html_id":"available_devices:Array(String)-class-method","name":"available_devices","doc":"Get a list of the names of all available audio capture devices\n\nThis function returns a vector of strings, containing\nthe names of all available audio capture devices.\n\n*Returns:* A vector of strings containing the names","summary":"<p>Get a list of the names of all available audio capture devices</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1702","def":{"name":"available_devices","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_getavailabledevices(out result, out result_size)\nreturn Array.new(result_size.to_i) do |i|\n  String.new(result[i])\nend\n"}},{"id":"default_device:String-class-method","html_id":"default_device:String-class-method","name":"default_device","doc":"Get the name of the default audio capture device\n\nThis function returns the name of the default audio\ncapture device. If none is available, an empty string\nis returned.\n\n*Returns:* The name of the default audio capture device","summary":"<p>Get the name of the default audio capture device</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1713","def":{"name":"default_device","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_getdefaultdevice(out result)\nreturn String.new(result)\n"}}],"constructors":[],"instance_methods":[{"id":"channel_count:Int32-instance-method","html_id":"channel_count:Int32-instance-method","name":"channel_count","doc":"Get the number of channels used by this recorder\n\nCurrently only mono and stereo are supported, so the\nvalue is either 1 (for mono) or 2 (for stereo).\n\n*Returns:* Number of channels\n\n*See also:* `channel_count=`","summary":"<p>Get the number of channels used by this recorder</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1761","def":{"name":"channel_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_getchannelcount(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"channel_count=(channel_count:Int)-instance-method","html_id":"channel_count=(channel_count:Int)-instance-method","name":"channel_count=","doc":"Set the channel count of the audio capture device\n\nThis method allows you to specify the number of channels\nused for recording. Currently only 16-bit mono and\n16-bit stereo are supported.\n\n* *channel_count* - Number of channels. Currently only\nmono (1) and stereo (2) are supported.\n\n*See also:* `channel_count`","summary":"<p>Set the channel count of the audio capture device</p>","abstract":false,"args":[{"name":"channel_count","doc":null,"default_value":"","external_name":"channel_count","restriction":"Int"}],"args_string":"(channel_count : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1750","def":{"name":"channel_count=","args":[{"name":"channel_count","doc":null,"default_value":"","external_name":"channel_count","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_setchannelcount_emS(to_unsafe, LibC::UInt.new(channel_count))"}},{"id":"device:String-instance-method","html_id":"device:String-instance-method","name":"device","doc":"Get the name of the current audio capture device\n\n*Returns:* The name of the current audio capture device","summary":"<p>Get the name of the current audio capture device</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1736","def":{"name":"device","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_getdevice(to_unsafe, out result)\nreturn String.new(result)\n"}},{"id":"device=(name:String):Bool-instance-method","html_id":"device=(name:String):Bool-instance-method","name":"device=","doc":"Set the audio capture device\n\nThis function sets the audio capture device to the device\nwith the given *name.* It can be called on the fly (i.e:\nwhile recording). If you do so while recording and\nopening the device fails, it stops the recording.\n\n* *name* - The name of the audio capture device\n\n*Returns:* True, if it was able to set the requested device\n\n*See also:* `available_devices`, `default_device`","summary":"<p>Set the audio capture device</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1729","def":{"name":"device=","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_setdevice_zkC(to_unsafe, name.bytesize, name, out result)\nreturn result\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"destructor","summary":"<p>destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1652","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_finalize(to_unsafe)\nSFMLExt.sfml_soundrecorder_free(@this)\n"}},{"id":"on_process_samples(samples:Array(Int16)|Slice(Int16)):Bool-instance-method","html_id":"on_process_samples(samples:Array(Int16)|Slice(Int16)):Bool-instance-method","name":"on_process_samples","doc":"Process a new chunk of recorded samples\n\nThis virtual function is called every time a new chunk of\nrecorded data is available. The derived class can then do\nwhatever it wants with it (storing it, playing it, sending\nit over the network, etc.).\n\n* *samples* - Pointer to the new chunk of recorded samples\n* *sample_count* - Number of samples pointed by *samples*\n\n*Returns:* True to continue the capture, or false to stop it","summary":"<p>Process a new chunk of recorded samples</p>","abstract":true,"args":[{"name":"samples","doc":null,"default_value":"","external_name":"samples","restriction":"Array(Int16) | Slice(Int16)"}],"args_string":"(samples : Array(Int16) | Slice(Int16)) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1824","def":{"name":"on_process_samples","args":[{"name":"samples","doc":null,"default_value":"","external_name":"samples","restriction":"Array(Int16) | Slice(Int16)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"on_start:Bool-instance-method","html_id":"on_start:Bool-instance-method","name":"on_start","doc":"Start capturing audio data\n\nThis virtual function may be overridden by a derived class\nif something has to be done every time a new capture\nstarts. If not, this function can be ignored; the default\nimplementation does nothing.\n\n*Returns:* True to start the capture, or false to abort it","summary":"<p>Start capturing audio data</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1809","def":{"name":"on_start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_onstart(to_unsafe, out result)\nreturn result\n"}},{"id":"on_stop-instance-method","html_id":"on_stop-instance-method","name":"on_stop","doc":"Stop capturing audio data\n\nThis virtual function may be overridden by a derived class\nif something has to be done every time the capture\nends. If not, this function can be ignored; the default\nimplementation does nothing.","summary":"<p>Stop capturing audio data</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1831","def":{"name":"on_stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_onstop(to_unsafe)"}},{"id":"processing_interval=(interval:Time)-instance-method","html_id":"processing_interval=(interval:Time)-instance-method","name":"processing_interval=","doc":"Set the processing interval\n\nThe processing interval controls the period\nbetween calls to the on_process_samples function. You may\nwant to use a small interval if you want to process the\nrecorded data in real time, for example.\n\nNote: this is only a hint, the actual period may vary.\nSo don't rely on this parameter to implement precise timing.\n\nThe default processing interval is 100 ms.\n\n* *interval* - Processing interval","summary":"<p>Set the processing interval</p>","abstract":false,"args":[{"name":"interval","doc":null,"default_value":"","external_name":"interval","restriction":"Time"}],"args_string":"(interval : Time)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1798","def":{"name":"processing_interval=","args":[{"name":"interval","doc":null,"default_value":"","external_name":"interval","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_setprocessinginterval_f4T(to_unsafe, interval)"}},{"id":"sample_rate:Int32-instance-method","html_id":"sample_rate:Int32-instance-method","name":"sample_rate","doc":"Get the sample rate\n\nThe sample rate defines the number of audio samples\ncaptured per second. The higher, the better the quality\n(for example, 44100 samples/sec is CD quality).\n\n*Returns:* Sample rate, in samples per second","summary":"<p>Get the sample rate</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1692","def":{"name":"sample_rate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_getsamplerate(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"start(sample_rate:Int=44100):Bool-instance-method","html_id":"start(sample_rate:Int=44100):Bool-instance-method","name":"start","doc":"Start the capture\n\nThe *sample_rate* parameter defines the number of audio samples\ncaptured per second. The higher, the better the quality\n(for example, 44100 samples/sec is CD quality).\nThis function uses its own thread so that it doesn't block\nthe rest of the program while the capture runs.\nPlease note that only one capture can happen at the same time.\nYou can select which capture device will be used, by passing\nthe name to the device=() method. If none was selected\nbefore, the default capture device will be used. You can get a\nlist of the names of all available capture devices by calling\navailable_devices().\n\n* *sample_rate* - Desired capture rate, in number of samples per second\n\n*Returns:* True, if start of capture was successful\n\n*See also:* `stop`, `available_devices`","summary":"<p>Start the capture</p>","abstract":false,"args":[{"name":"sample_rate","doc":null,"default_value":"44100","external_name":"sample_rate","restriction":"Int"}],"args_string":"(sample_rate : Int = <span class=\"n\">44100</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1675","def":{"name":"start","args":[{"name":"sample_rate","doc":null,"default_value":"44100","external_name":"sample_rate","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_start_emS(to_unsafe, LibC::UInt.new(sample_rate), out result)\nreturn result\n"}},{"id":"stop-instance-method","html_id":"stop-instance-method","name":"stop","doc":"Stop the capture\n\n*See also:* `start`","summary":"<p>Stop the capture</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L1682","def":{"name":"stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundrecorder_stop(to_unsafe)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/SoundSource","path":"SF/SoundSource.html","kind":"class","full_name":"SF::SoundSource","name":"SoundSource","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/AlResource","kind":"module","full_name":"SF::AlResource","name":"AlResource"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"audio/obj.cr","line_number":195,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/AlResource","kind":"module","full_name":"SF::AlResource","name":"AlResource"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Sound","kind":"class","full_name":"SF::Sound","name":"Sound"},{"html_id":"github.com/oprypin/crsfml/SF/SoundStream","kind":"class","full_name":"SF::SoundStream","name":"SoundStream"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Base class defining a sound's properties\n\n`SF::SoundSource` is not meant to be used directly, it\nonly serves as a common base for all audio objects\nthat can live in the audio environment.\n\nIt defines several properties for the sound: pitch,\nvolume, position, attenuation, etc. All of them can be\nchanged at any time with no impact on performances.\n\n*See also:* `SF::Sound`, `SF::SoundStream`","summary":"<p>Base class defining a sound's properties</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"attenuation:Float32-instance-method","html_id":"attenuation:Float32-instance-method","name":"attenuation","doc":"Get the attenuation factor of the sound\n\n*Returns:* Attenuation factor of the sound\n\n*See also:* `attenuation=`, `min_distance`","summary":"<p>Get the attenuation factor of the sound</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L361","def":{"name":"attenuation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_soundsource_getattenuation(to_unsafe, out result)\nreturn result\n"}},{"id":"attenuation=(attenuation:Number)-instance-method","html_id":"attenuation=(attenuation:Number)-instance-method","name":"attenuation=","doc":"Set the attenuation factor of the sound\n\nThe attenuation is a multiplicative factor which makes\nthe sound more or less loud according to its distance\nfrom the listener. An attenuation of 0 will produce a\nnon-attenuated sound, i.e. its volume will always be the same\nwhether it is heard from near or from far. On the other hand,\nan attenuation value such as 100 will make the sound fade out\nvery quickly as it gets further from the listener.\nThe default value of the attenuation is 1.\n\n* *attenuation* - New attenuation factor of the sound\n\n*See also:* `attenuation`, `min_distance=`","summary":"<p>Set the attenuation factor of the sound</p>","abstract":false,"args":[{"name":"attenuation","doc":null,"default_value":"","external_name":"attenuation","restriction":"Number"}],"args_string":"(attenuation : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L306","def":{"name":"attenuation=","args":[{"name":"attenuation","doc":null,"default_value":"","external_name":"attenuation","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundsource_setattenuation_Bw9(to_unsafe, LibC::Float.new(attenuation))"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L208","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundsource_finalize(to_unsafe)\nSFMLExt.sfml_soundsource_free(@this)\n"}},{"id":"min_distance:Float32-instance-method","html_id":"min_distance:Float32-instance-method","name":"min_distance","doc":"Get the minimum distance of the sound\n\n*Returns:* Minimum distance of the sound\n\n*See also:* `min_distance=`, `attenuation`","summary":"<p>Get the minimum distance of the sound</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L352","def":{"name":"min_distance","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_soundsource_getmindistance(to_unsafe, out result)\nreturn result\n"}},{"id":"min_distance=(distance:Number)-instance-method","html_id":"min_distance=(distance:Number)-instance-method","name":"min_distance=","doc":"Set the minimum distance of the sound\n\nThe \"minimum distance\" of a sound is the maximum\ndistance at which it is heard at its maximum volume. Further\nthan the minimum distance, it will start to fade out according\nto its attenuation factor. A value of 0 (\"inside the head\nof the listener\") is an invalid value and is forbidden.\nThe default value of the minimum distance is 1.\n\n* *distance* - New minimum distance of the sound\n\n*See also:* `min_distance`, `attenuation=`","summary":"<p>Set the minimum distance of the sound</p>","abstract":false,"args":[{"name":"distance","doc":null,"default_value":"","external_name":"distance","restriction":"Number"}],"args_string":"(distance : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L289","def":{"name":"min_distance=","args":[{"name":"distance","doc":null,"default_value":"","external_name":"distance","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundsource_setmindistance_Bw9(to_unsafe, LibC::Float.new(distance))"}},{"id":"pause-instance-method","html_id":"pause-instance-method","name":"pause","doc":"Pause the sound source\n\nThis function pauses the source if it was playing,\notherwise (source already paused or stopped) it has no effect.\n\n*See also:* `play`, `stop`","summary":"<p>Pause the sound source</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L379","def":{"name":"pause","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"pitch:Float32-instance-method","html_id":"pitch:Float32-instance-method","name":"pitch","doc":"Get the pitch of the sound\n\n*Returns:* Pitch of the sound\n\n*See also:* `pitch=`","summary":"<p>Get the pitch of the sound</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L314","def":{"name":"pitch","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_soundsource_getpitch(to_unsafe, out result)\nreturn result\n"}},{"id":"pitch=(pitch:Number)-instance-method","html_id":"pitch=(pitch:Number)-instance-method","name":"pitch=","doc":"Set the pitch of the sound\n\nThe pitch represents the perceived fundamental frequency\nof a sound; thus you can make a sound more acute or grave\nby changing its pitch. A side effect of changing the pitch\nis to modify the playing speed of the sound as well.\nThe default value for the pitch is 1.\n\n* *pitch* - New pitch to apply to the sound\n\n*See also:* `pitch`","summary":"<p>Set the pitch of the sound</p>","abstract":false,"args":[{"name":"pitch","doc":null,"default_value":"","external_name":"pitch","restriction":"Number"}],"args_string":"(pitch : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L223","def":{"name":"pitch=","args":[{"name":"pitch","doc":null,"default_value":"","external_name":"pitch","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundsource_setpitch_Bw9(to_unsafe, LibC::Float.new(pitch))"}},{"id":"play-instance-method","html_id":"play-instance-method","name":"play","doc":"Start or resume playing the sound source\n\nThis function starts the source if it was stopped, resumes\nit if it was paused, and restarts it from the beginning if\nit was already playing.\n\n*See also:* `pause`, `stop`","summary":"<p>Start or resume playing the sound source</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L372","def":{"name":"play","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"position:Vector3f-instance-method","html_id":"position:Vector3f-instance-method","name":"position","doc":"Get the 3D position of the sound in the audio scene\n\n*Returns:* Position of the sound\n\n*See also:* `position=`","summary":"<p>Get the 3D position of the sound in the audio scene</p>","abstract":false,"args":[],"args_string":" : Vector3f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L332","def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector3f","visibility":"Public","body":"result = Vector3f.allocate\nSFMLExt.sfml_soundsource_getposition(to_unsafe, result)\nreturn result\n"}},{"id":"position=(position:Vector3f)-instance-method","html_id":"position=(position:Vector3f)-instance-method","name":"position=","doc":"Set the 3D position of the sound in the audio scene\n\nOnly sounds with one channel (mono sounds) can be\nspatialized.\nThe default position of a sound is (0, 0, 0).\n\n* *position* - Position of the sound in the scene\n\n*See also:* `position`","summary":"<p>Set the 3D position of the sound in the audio scene</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector3f"}],"args_string":"(position : Vector3f)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L260","def":{"name":"position=","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector3f"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundsource_setposition_NzM(to_unsafe, position)"}},{"id":"relative_to_listener=(relative:Bool)-instance-method","html_id":"relative_to_listener=(relative:Bool)-instance-method","name":"relative_to_listener=","doc":"Make the sound's position relative to the listener or absolute\n\nMaking a sound relative to the listener will ensure that it will always\nbe played the same way regardless of the position of the listener.\nThis can be useful for non-spatialized sounds, sounds that are\nproduced by the listener, or sounds attached to it.\nThe default value is false (position is absolute).\n\n* *relative* - True to set the position relative, false to set it absolute\n\n*See also:* `relative_to_listener?`","summary":"<p>Make the sound's position relative to the listener or absolute</p>","abstract":false,"args":[{"name":"relative","doc":null,"default_value":"","external_name":"relative","restriction":"Bool"}],"args_string":"(relative : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L274","def":{"name":"relative_to_listener=","args":[{"name":"relative","doc":null,"default_value":"","external_name":"relative","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundsource_setrelativetolistener_GZq(to_unsafe, relative)"}},{"id":"relative_to_listener?:Bool-instance-method","html_id":"relative_to_listener?:Bool-instance-method","name":"relative_to_listener?","doc":"Tell whether the sound's position is relative to the\nlistener or is absolute\n\n*Returns:* True if the position is relative, false if it's absolute\n\n*See also:* `relative_to_listener=`","summary":"<p>Tell whether the sound's position is relative to the listener or is absolute</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L343","def":{"name":"relative_to_listener?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_soundsource_isrelativetolistener(to_unsafe, out result)\nreturn result\n"}},{"id":"set_position(x:Number,y:Number,z:Number)-instance-method","html_id":"set_position(x:Number,y:Number,z:Number)-instance-method","name":"set_position","doc":"Set the 3D position of the sound in the audio scene\n\nOnly sounds with one channel (mono sounds) can be\nspatialized.\nThe default position of a sound is (0, 0, 0).\n\n* *x* - X coordinate of the position of the sound in the scene\n* *y* - Y coordinate of the position of the sound in the scene\n* *z* - Z coordinate of the position of the sound in the scene\n\n*See also:* `position`","summary":"<p>Set the 3D position of the sound in the audio scene</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"args_string":"(x : Number, y : Number, z : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L248","def":{"name":"set_position","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundsource_setposition_Bw9Bw9Bw9(to_unsafe, LibC::Float.new(x), LibC::Float.new(y), LibC::Float.new(z))"}},{"id":"status:SoundSource::Status-instance-method","html_id":"status:SoundSource::Status-instance-method","name":"status","doc":"Get the current status of the sound (stopped, paused, playing)\n\n*Returns:* Current status of the sound","summary":"<p>Get the current status of the sound (stopped, paused, playing)</p>","abstract":false,"args":[],"args_string":" : SoundSource::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L391","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SoundSource::Status","visibility":"Public","body":"SFMLExt.sfml_soundsource_getstatus(to_unsafe, out result)\nreturn SoundSource::Status.new(result)\n"}},{"id":"stop-instance-method","html_id":"stop-instance-method","name":"stop","doc":"Stop playing the sound source\n\nThis function stops the source if it was playing or paused,\nand does nothing if it was already stopped.\nIt also resets the playing position (unlike pause()).\n\n*See also:* `play`, `pause`","summary":"<p>Stop playing the sound source</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L387","def":{"name":"stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"volume:Float32-instance-method","html_id":"volume:Float32-instance-method","name":"volume","doc":"Get the volume of the sound\n\n*Returns:* Volume of the sound, in the range `0..100`\n\n*See also:* `volume=`","summary":"<p>Get the volume of the sound</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L323","def":{"name":"volume","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_soundsource_getvolume(to_unsafe, out result)\nreturn result\n"}},{"id":"volume=(volume:Number)-instance-method","html_id":"volume=(volume:Number)-instance-method","name":"volume=","doc":"Set the volume of the sound\n\nThe volume is a value between 0 (mute) and 100 (full volume).\nThe default value for the volume is 100.\n\n* *volume* - Volume of the sound\n\n*See also:* `volume`","summary":"<p>Set the volume of the sound</p>","abstract":false,"args":[{"name":"volume","doc":null,"default_value":"","external_name":"volume","restriction":"Number"}],"args_string":"(volume : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L234","def":{"name":"volume=","args":[{"name":"volume","doc":null,"default_value":"","external_name":"volume","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundsource_setvolume_Bw9(to_unsafe, LibC::Float.new(volume))"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/SoundSource/Status","path":"SF/SoundSource/Status.html","kind":"enum","full_name":"SF::SoundSource::Status","name":"Status","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"audio/obj.cr","line_number":198,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Stopped","name":"Stopped","value":"0","doc":"Sound is not playing","summary":"<p>Sound is not playing</p>"},{"id":"Paused","name":"Paused","value":"1","doc":"Sound is paused","summary":"<p>Sound is paused</p>"},{"id":"Playing","name":"Playing","value":"2","doc":"Sound is playing","summary":"<p>Sound is playing</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/SoundSource","kind":"class","full_name":"SF::SoundSource","name":"SoundSource"},"doc":"Enumeration of the sound source states","summary":"<p>Enumeration of the sound source states</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"paused?-instance-method","html_id":"paused?-instance-method","name":"paused?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L202","def":{"name":"paused?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Paused"}},{"id":"playing?-instance-method","html_id":"playing?-instance-method","name":"playing?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L204","def":{"name":"playing?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Playing"}},{"id":"stopped?-instance-method","html_id":"stopped?-instance-method","name":"stopped?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L200","def":{"name":"stopped?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Stopped"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/SoundStream","path":"SF/SoundStream.html","kind":"class","full_name":"SF::SoundStream","name":"SoundStream","abstract":true,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/SoundSource","kind":"class","full_name":"SF::SoundSource","name":"SoundSource"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/SoundSource","kind":"class","full_name":"SF::SoundSource","name":"SoundSource"},{"html_id":"github.com/oprypin/crsfml/SF/AlResource","kind":"module","full_name":"SF::AlResource","name":"AlResource"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"audio/obj.cr","line_number":483,"url":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NoLoop","name":"NoLoop","value":"-1","doc":"\"Invalid\" end_seeks value, telling us to continue uninterrupted","summary":"<p>\"Invalid\" end_seeks value, telling us to continue uninterrupted</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Music","kind":"class","full_name":"SF::Music","name":"Music"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Abstract base class for streamed audio sources\n\nUnlike audio buffers (see `SF::SoundBuffer`), audio streams\nare never completely loaded in memory. Instead, the audio\ndata is acquired continuously while the stream is playing.\nThis behavior allows to play a sound with no loading delay,\nand keeps the memory consumption very low.\n\nSound sources that need to be streamed are usually big files\n(compressed audio musics that would eat hundreds of MB in memory)\nor files that would take a lot of time to be received\n(sounds played over the network).\n\n`SF::SoundStream` is a base class that doesn't care about the\nstream source, which is left to the derived class. SFML provides\na built-in specialization for big files (see `SF::Music`).\nNo network stream source is provided, but you can write your own\nby combining this class with the network module.\n\nA derived class has to override two virtual functions:\n* on_get_data fills a new chunk of audio data to be played\n* on_seek changes the current playing position in the source\n\nIt is important to note that each SoundStream is played in its\nown separate thread, so that the streaming loop doesn't block the\nrest of the program. In particular, the OnGetData and OnSeek\nvirtual functions may sometimes be called from this separate thread.\nIt is important to keep this in mind, because you may have to take\ncare of synchronization issues if you share data between threads.\n\nUsage example:\n```\nclass CustomStream < SF::SoundStream\n  def initialize(location : String)\n    # Open the source and get audio settings\n    ...\n\n    # Initialize the stream -- important!\n    super(channel_count, sample_rate)\n  end\n\n  def on_get_data()\n    # Return a slice with audio data from the stream source\n    # (note: must not be empty if you want to continue playing)\n    Slice.new(samples.to_unsafe, samples.size)\n  end\n\n  def on_seek(time_offset)\n    # Change the current position in the stream source\n  end\nend\n\n# Usage\nstream = CustomStream.new(\"path/to/stream\")\nstream.play()\n```\n\n*See also:* `SF::Music`","summary":"<p>Abstract base class for streamed audio sources</p>","class_methods":[],"constructors":[{"id":"new(channel_count:Int,sample_rate:Int)-class-method","html_id":"new(channel_count:Int,sample_rate:Int)-class-method","name":"new","doc":"Define the audio stream parameters\n\nThis function must be called by derived classes as soon\nas they know the audio settings of the stream to play.\nAny attempt to manipulate the stream (play(), ...) before\ncalling this function will fail.\nIt can be called multiple times if the settings of the\naudio stream change, but only when the stream is stopped.\n\n* *channel_count* - Number of channels of the stream\n* *sample_rate* - Sample rate, in samples per second","summary":"<p>Define the audio stream parameters</p>","abstract":false,"args":[{"name":"channel_count","doc":null,"default_value":"","external_name":"channel_count","restriction":"Int"},{"name":"sample_rate","doc":null,"default_value":"","external_name":"sample_rate","restriction":"Int"}],"args_string":"(channel_count : Int, sample_rate : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L613","def":{"name":"new","args":[{"name":"channel_count","doc":null,"default_value":"","external_name":"channel_count","restriction":"Int"},{"name":"sample_rate","doc":null,"default_value":"","external_name":"sample_rate","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(channel_count, sample_rate)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"channel_count:Int32-instance-method","html_id":"channel_count:Int32-instance-method","name":"channel_count","doc":"Return the number of channels of the stream\n\n1 channel means a mono sound, 2 means stereo, etc.\n\n*Returns:* Number of channels","summary":"<p>Return the number of channels of the stream</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L526","def":{"name":"channel_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_soundstream_getchannelcount(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L486","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundstream_finalize(to_unsafe)\nSFMLExt.sfml_soundstream_free(@this)\n"}},{"id":"loop:Bool-instance-method","html_id":"loop:Bool-instance-method","name":"loop","doc":"Tell whether or not the stream is in loop mode\n\n*Returns:* True if the stream is looping, false otherwise\n\n*See also:* `loop=`","summary":"<p>Tell whether or not the stream is in loop mode</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L588","def":{"name":"loop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_soundstream_getloop(to_unsafe, out result)\nreturn result\n"}},{"id":"loop=(loop:Bool)-instance-method","html_id":"loop=(loop:Bool)-instance-method","name":"loop=","doc":"Set whether or not the stream should loop after reaching the end\n\nIf set, the stream will restart from beginning after\nreaching the end and so on, until it is stopped or\nloop=(false) is called.\nThe default looping state for streams is false.\n\n* *loop* - True to play in loop, false to play once\n\n*See also:* `loop`","summary":"<p>Set whether or not the stream should loop after reaching the end</p>","abstract":false,"args":[{"name":"loop","doc":null,"default_value":"","external_name":"loop","restriction":"Bool"}],"args_string":"(loop : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L580","def":{"name":"loop=","args":[{"name":"loop","doc":null,"default_value":"","external_name":"loop","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundstream_setloop_GZq(to_unsafe, loop)"}},{"id":"on_get_data:Slice(Int16)?-instance-method","html_id":"on_get_data:Slice(Int16)?-instance-method","name":"on_get_data","doc":"Request a new chunk of audio samples from the stream source\n\nThis function must be overridden by derived classes to provide\nthe audio samples to play. It is called continuously by the\nstreaming loop, in a separate thread.\nThe source can choose to stop the streaming loop at any time, by\nreturning false to the caller.\nIf you return true (i.e. continue streaming) it is important that\nthe returned array of samples is not empty; this would stop the stream\ndue to an internal limitation.\n\n* *data* - Chunk of data to fill\n\n*Returns:* True to continue playback, false to stop","summary":"<p>Request a new chunk of audio samples from the stream source</p>","abstract":true,"args":[],"args_string":" : Slice(Int16)?","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L633","def":{"name":"on_get_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Slice(Int16) | ::Nil","visibility":"Public","body":""}},{"id":"on_loop:Int64-instance-method","html_id":"on_loop:Int64-instance-method","name":"on_loop","doc":"Change the current playing position in the stream source to the beginning of the loop\n\nThis function can be overridden by derived classes to\nallow implementation of custom loop points. Otherwise,\nit just calls on_seek(Time::Zero) and returns 0.\n\n*Returns:* The seek position after looping (or -1 if there's no loop)","summary":"<p>Change the current playing position in the stream source to the beginning of the loop</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L648","def":{"name":"on_loop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"SFMLExt.sfml_soundstream_onloop(to_unsafe, out result)\nreturn result\n"}},{"id":"on_seek(time_offset:Time)-instance-method","html_id":"on_seek(time_offset:Time)-instance-method","name":"on_seek","doc":"Change the current playing position in the stream source\n\nThis function must be overridden by derived classes to\nallow random seeking into the stream source.\n\n* *time_offset* - New playing position, relative to the beginning of the stream","summary":"<p>Change the current playing position in the stream source</p>","abstract":true,"args":[{"name":"time_offset","doc":null,"default_value":"","external_name":"time_offset","restriction":"Time"}],"args_string":"(time_offset : Time)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L640","def":{"name":"on_seek","args":[{"name":"time_offset","doc":null,"default_value":"","external_name":"time_offset","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"pause-instance-method","html_id":"pause-instance-method","name":"pause","doc":"Pause the audio stream\n\nThis function pauses the stream if it was playing,\notherwise (stream already paused or stopped) it has no effect.\n\n*See also:* `play`, `stop`","summary":"<p>Pause the audio stream</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L508","def":{"name":"pause","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundstream_pause(to_unsafe)"}},{"id":"play-instance-method","html_id":"play-instance-method","name":"play","doc":"Start or resume playing the audio stream\n\nThis function starts the stream if it was stopped, resumes\nit if it was paused, and restarts it from the beginning if\nit was already playing.\nThis function uses its own thread so that it doesn't block\nthe rest of the program while the stream is played.\n\n*See also:* `pause`, `stop`","summary":"<p>Start or resume playing the audio stream</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L499","def":{"name":"play","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundstream_play(to_unsafe)"}},{"id":"playing_offset:Time-instance-method","html_id":"playing_offset:Time-instance-method","name":"playing_offset","doc":"Get the current playing position of the stream\n\n*Returns:* Current playing position, from the beginning of the stream\n\n*See also:* `playing_offset=`","summary":"<p>Get the current playing position of the stream</p>","abstract":false,"args":[],"args_string":" : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L565","def":{"name":"playing_offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_soundstream_getplayingoffset(to_unsafe, result)\nreturn result\n"}},{"id":"playing_offset=(time_offset:Time)-instance-method","html_id":"playing_offset=(time_offset:Time)-instance-method","name":"playing_offset=","doc":"Change the current playing position of the stream\n\nThe playing position can be changed when the stream is\neither paused or playing. Changing the playing position\nwhen the stream is stopped has no effect, since playing\nthe stream would reset its position.\n\n* *time_offset* - New playing position, from the beginning of the stream\n\n*See also:* `playing_offset`","summary":"<p>Change the current playing position of the stream</p>","abstract":false,"args":[{"name":"time_offset","doc":null,"default_value":"","external_name":"time_offset","restriction":"Time"}],"args_string":"(time_offset : Time)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L557","def":{"name":"playing_offset=","args":[{"name":"time_offset","doc":null,"default_value":"","external_name":"time_offset","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundstream_setplayingoffset_f4T(to_unsafe, time_offset)"}},{"id":"sample_rate:Int32-instance-method","html_id":"sample_rate:Int32-instance-method","name":"sample_rate","doc":"Get the stream sample rate of the stream\n\nThe sample rate is the number of audio samples played per\nsecond. The higher, the better the quality.\n\n*Returns:* Sample rate, in number of samples per second","summary":"<p>Get the stream sample rate of the stream</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L536","def":{"name":"sample_rate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_soundstream_getsamplerate(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"status:SoundSource::Status-instance-method","html_id":"status:SoundSource::Status-instance-method","name":"status","doc":"Get the current status of the stream (stopped, paused, playing)\n\n*Returns:* Current status","summary":"<p>Get the current status of the stream (stopped, paused, playing)</p>","abstract":false,"args":[],"args_string":" : SoundSource::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L543","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SoundSource::Status","visibility":"Public","body":"SFMLExt.sfml_soundstream_getstatus(to_unsafe, out result)\nreturn SoundSource::Status.new(result)\n"}},{"id":"stop-instance-method","html_id":"stop-instance-method","name":"stop","doc":"Stop playing the audio stream\n\nThis function stops the stream if it was playing or paused,\nand does nothing if it was already stopped.\nIt also resets the playing position (unlike pause()).\n\n*See also:* `play`, `pause`","summary":"<p>Stop playing the audio stream</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/audio/obj.cr#L518","def":{"name":"stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_soundstream_stop(to_unsafe)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Sprite","path":"SF/Sprite.html","kind":"class","full_name":"SF::Sprite","name":"Sprite","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Transformable","kind":"class","full_name":"SF::Transformable","name":"Transformable"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"},{"html_id":"github.com/oprypin/crsfml/SF/Transformable","kind":"class","full_name":"SF::Transformable","name":"Transformable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":6112,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":258,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Drawable representation of a texture, with its\nown transformations, color, etc.\n\n`SF::Sprite` is a drawable class that allows to easily display\na texture (or a part of it) on a render target.\n\nIt inherits all the functions from `SF::Transformable:`\nposition, rotation, scale, origin. It also adds sprite-specific\nproperties such as the texture to use, the part of it to display,\nand some convenience functions to change the overall color of the\nsprite, or to get its bounding rectangle.\n\n`SF::Sprite` works in combination with the `SF::Texture` class, which\nloads and provides the pixel data of a given texture.\n\nThe separation of `SF::Sprite` and `SF::Texture` allows more flexibility\nand better performances: indeed a `SF::Texture` is a heavy resource,\nand any operation on it is slow (often too slow for real-time\napplications). On the other side, a `SF::Sprite` is a lightweight\nobject which can use the pixel data of a `SF::Texture` and draw\nit with its own transformation/color/blending attributes.\n\nIt is important to note that the `SF::Sprite` instance doesn't\ncopy the texture that it uses, it only keeps a reference to it.\nThus, a `SF::Texture` must not be destroyed while it is\nused by a `SF::Sprite` (i.e. never write a function that\nuses a local `SF::Texture` instance for creating a sprite).\n\nSee also the note on coordinates and undistorted rendering in `SF::Transformable`.\n\nUsage example:\n```\n# Declare and load a texture\ntexture = SF::Texture.from_file(\"texture.png\")\n\n# Create a sprite\nsprite = SF::Sprite.new\nsprite.texture = texture\nsprite.texture_rect = SF.int_rect(10, 10, 50, 30)\nsprite.color = SF.color(255, 255, 255, 200)\nsprite.position = {100, 25}\n\n# Draw it\nwindow.draw sprite\n```\n\n*See also:* `SF::Texture`, `SF::Transformable`","summary":"<p>Drawable representation of a texture, with its own transformations, color, etc.</p>","class_methods":[],"constructors":[{"id":"new(texture:Texture,rectangle:IntRect)-class-method","html_id":"new(texture:Texture,rectangle:IntRect)-class-method","name":"new","doc":"Construct the sprite from a sub-rectangle of a source texture\n\n* *texture* - Source texture\n* *rectangle* - Sub-rectangle of the texture to assign to the sprite\n\n*See also:* `texture=`, `texture_rect=`","summary":"<p>Construct the sprite from a sub-rectangle of a source texture</p>","abstract":false,"args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"},{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"IntRect"}],"args_string":"(texture : Texture, rectangle : IntRect)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6141","def":{"name":"new","args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"},{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"IntRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(texture, rectangle)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(texture:Texture)-class-method","html_id":"new(texture:Texture)-class-method","name":"new","doc":"Construct the sprite from a source texture\n\n* *texture* - Source texture\n\n*See also:* `texture=`","summary":"<p>Construct the sprite from a source texture</p>","abstract":false,"args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"}],"args_string":"(texture : Texture)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6130","def":{"name":"new","args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(texture)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nCreates an empty sprite with no source texture.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6121","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"color:Color-instance-method","html_id":"color:Color-instance-method","name":"color","doc":"Get the global color of the sprite\n\n*Returns:* Global color of the sprite\n\n*See also:* `color=`","summary":"<p>Get the global color of the sprite</p>","abstract":false,"args":[],"args_string":" : Color","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6219","def":{"name":"color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"result = Color.allocate\nSFMLExt.sfml_sprite_getcolor(to_unsafe, result)\nreturn result\n"}},{"id":"color=(color:Color)-instance-method","html_id":"color=(color:Color)-instance-method","name":"color=","doc":"Set the global color of the sprite\n\nThis color is modulated (multiplied) with the sprite's\ntexture. It can be used to colorize the sprite, or change\nits global opacity.\nBy default, the sprite's color is opaque white.\n\n* *color* - New color of the sprite\n\n*See also:* `color`","summary":"<p>Set the global color of the sprite</p>","abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"args_string":"(color : Color)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6189","def":{"name":"color=","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_sprite_setcolor_QVe(to_unsafe, color)"}},{"id":"dup:Sprite-instance-method","html_id":"dup:Sprite-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Sprite","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6370","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Sprite","visibility":"Public","body":"return Sprite.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Virtual destructor","summary":"<p>Virtual destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6114","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_sprite_finalize(to_unsafe)\nSFMLExt.sfml_sprite_free(@this)\n"}},{"id":"global_bounds:FloatRect-instance-method","html_id":"global_bounds:FloatRect-instance-method","name":"global_bounds","doc":"Get the global bounding rectangle of the entity\n\nThe returned rectangle is in global coordinates, which means\nthat it takes into account the transformations (translation,\nrotation, scale, ...) that are applied to the entity.\nIn other words, this function returns the bounds of the\nsprite in the global 2D world's coordinate system.\n\n*Returns:* Global bounding rectangle of the entity","summary":"<p>Get the global bounding rectangle of the entity</p>","abstract":false,"args":[],"args_string":" : FloatRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6247","def":{"name":"global_bounds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FloatRect","visibility":"Public","body":"result = FloatRect.allocate\nSFMLExt.sfml_sprite_getglobalbounds(to_unsafe, result)\nreturn result\n"}},{"id":"local_bounds:FloatRect-instance-method","html_id":"local_bounds:FloatRect-instance-method","name":"local_bounds","doc":"Get the local bounding rectangle of the entity\n\nThe returned rectangle is in local coordinates, which means\nthat it ignores the transformations (translation, rotation,\nscale, ...) that are applied to the entity.\nIn other words, this function returns the bounds of the\nentity in the entity's coordinate system.\n\n*Returns:* Local bounding rectangle of the entity","summary":"<p>Get the local bounding rectangle of the entity</p>","abstract":false,"args":[],"args_string":" : FloatRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6233","def":{"name":"local_bounds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FloatRect","visibility":"Public","body":"result = FloatRect.allocate\nSFMLExt.sfml_sprite_getlocalbounds(to_unsafe, result)\nreturn result\n"}},{"id":"set_texture(texture:Texture,reset_rect:Bool=false)-instance-method","html_id":"set_texture(texture:Texture,reset_rect:Bool=false)-instance-method","name":"set_texture","doc":"Change the source texture of the sprite\n\nThe *texture* argument refers to a texture that must\nexist as long as the sprite uses it. Indeed, the sprite\ndoesn't store its own copy of the texture, but rather keeps\na pointer to the one that you passed to this function.\nIf the source texture is destroyed and the sprite tries to\nuse it, the behavior is undefined.\nIf *reset_rect* is true, the TextureRect property of\nthe sprite is automatically adjusted to the size of the new\ntexture. If it is false, the texture rect is left unchanged.\n\n* *texture* - New texture\n* *reset_rect* - Should the texture rect be reset to the size of the new texture?\n\n*See also:* `texture`, `texture_rect=`","summary":"<p>Change the source texture of the sprite</p>","abstract":false,"args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"},{"name":"reset_rect","doc":null,"default_value":"false","external_name":"reset_rect","restriction":"Bool"}],"args_string":"(texture : Texture, reset_rect : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6162","def":{"name":"set_texture","args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"},{"name":"reset_rect","doc":null,"default_value":"false","external_name":"reset_rect","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_sprite_texture = texture\nSFMLExt.sfml_sprite_settexture_DJbGZq(to_unsafe, texture, reset_rect)\n"}},{"id":"texture=(texture:Texture)-instance-method","html_id":"texture=(texture:Texture)-instance-method","name":"texture=","doc":"Shorthand for `#set_texture`","summary":"<p>Shorthand for <code><a href=\"../SF/Sprite.html#set_texture(texture:Texture,reset_rect:Bool=false)-instance-method\">#set_texture</a></code></p>","abstract":false,"args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"}],"args_string":"(texture : Texture)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L260","def":{"name":"texture=","args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set_texture(texture)"}},{"id":"texture_rect:IntRect-instance-method","html_id":"texture_rect:IntRect-instance-method","name":"texture_rect","doc":"Get the sub-rectangle of the texture displayed by the sprite\n\n*Returns:* Texture rectangle of the sprite\n\n*See also:* `texture_rect=`","summary":"<p>Get the sub-rectangle of the texture displayed by the sprite</p>","abstract":false,"args":[],"args_string":" : IntRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6209","def":{"name":"texture_rect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IntRect","visibility":"Public","body":"result = IntRect.allocate\nSFMLExt.sfml_sprite_gettexturerect(to_unsafe, result)\nreturn result\n"}},{"id":"texture_rect=(rectangle:IntRect)-instance-method","html_id":"texture_rect=(rectangle:IntRect)-instance-method","name":"texture_rect=","doc":"Set the sub-rectangle of the texture that the sprite will display\n\nThe texture rect is useful when you don't want to display\nthe whole texture, but rather a part of it.\nBy default, the texture rect covers the entire texture.\n\n* *rectangle* - Rectangle defining the region of the texture to display\n\n*See also:* `texture_rect`, `texture=`","summary":"<p>Set the sub-rectangle of the texture that the sprite will display</p>","abstract":false,"args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"IntRect"}],"args_string":"(rectangle : IntRect)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6176","def":{"name":"texture_rect=","args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"IntRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_sprite_settexturerect_2k1(to_unsafe, rectangle)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Style","path":"SF/Style.html","kind":"enum","full_name":"SF::Style","name":"Style","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":2189,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Titlebar","name":"Titlebar","value":"1","doc":"Title bar + fixed border","summary":"<p>Title bar + fixed border</p>"},{"id":"Resize","name":"Resize","value":"2","doc":"Title bar + resizable border + maximize button","summary":"<p>Title bar + resizable border + maximize button</p>"},{"id":"Close","name":"Close","value":"4","doc":"Title bar + close button","summary":"<p>Title bar + close button</p>"},{"id":"Fullscreen","name":"Fullscreen","value":"8","doc":"Fullscreen mode (this flag and all others are mutually exclusive)","summary":"<p>Fullscreen mode (this flag and all others are mutually exclusive)</p>"},{"id":"Default","name":"Default","value":"7","doc":"Default window style","summary":"<p>Default window style</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Enumeration of the window styles","summary":"<p>Enumeration of the window styles</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"close?-instance-method","html_id":"close?-instance-method","name":"close?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2195","def":{"name":"close?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Close)"}},{"id":"default?-instance-method","html_id":"default?-instance-method","name":"default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2199","def":{"name":"default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Default)"}},{"id":"fullscreen?-instance-method","html_id":"fullscreen?-instance-method","name":"fullscreen?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2197","def":{"name":"fullscreen?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Fullscreen)"}},{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2189","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == 0"}},{"id":"resize?-instance-method","html_id":"resize?-instance-method","name":"resize?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2193","def":{"name":"resize?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Resize)"}},{"id":"titlebar?-instance-method","html_id":"titlebar?-instance-method","name":"titlebar?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2191","def":{"name":"titlebar?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Titlebar)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/TcpListener","path":"SF/TcpListener.html","kind":"class","full_name":"SF::TcpListener","name":"TcpListener","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Socket","kind":"class","full_name":"SF::Socket","name":"Socket"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Socket","kind":"class","full_name":"SF::Socket","name":"Socket"},{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":2088,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Socket that listens to new TCP connections\n\nA listener socket is a special type of socket that listens to\na given port and waits for connections on that port.\nThis is all it can do.\n\nWhen a new connection is received, you must call accept and\nthe listener returns a new instance of `SF::TcpSocket` that\nis properly initialized and can be used to communicate with\nthe new client.\n\nListener sockets are specific to the TCP protocol,\nUDP sockets are connectionless and can therefore communicate\ndirectly. As a consequence, a listener socket will always\nreturn the new connections as `SF::TcpSocket` instances.\n\nA listener is automatically closed on destruction, like all\nother types of socket. However if you want to stop listening\nbefore the socket is destroyed, you can call its close()\nfunction.\n\nUsage example:\n```\n# Create a listener socket and make it wait for new\n# connections on port 55001\nlistener = SF::TcpListener.new\nlistener.listen(55001)\n\n# Endless loop that waits for new connections\nwhile running\n  client = SF::TcpSocket.new\n  if listener.accept(client) == SF::Socket::Done\n    # A new client just connected!\n    puts \"New connection received from #{client.remote_address}\"\n    do_something_with client\n  end\nend\n```\n\n*See also:* `SF::TcpSocket`, `SF::Socket`","summary":"<p>Socket that listens to new TCP connections</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2095","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"accept(socket:TcpSocket):Socket::Status-instance-method","html_id":"accept(socket:TcpSocket):Socket::Status-instance-method","name":"accept","doc":"Accept a new connection\n\nIf the socket is in blocking mode, this function will\nnot return until a connection is actually received.\n\n* *socket* - Socket that will hold the new connection\n\n*Returns:* Status code\n\n*See also:* `listen`","summary":"<p>Accept a new connection</p>","abstract":false,"args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"TcpSocket"}],"args_string":"(socket : TcpSocket) : Socket::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2149","def":{"name":"accept","args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"TcpSocket"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Socket::Status","visibility":"Public","body":"SFMLExt.sfml_tcplistener_accept_WsF(to_unsafe, socket, out result)\nreturn Socket::Status.new(result)\n"}},{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":"Stop listening and close the socket\n\nThis function gracefully stops the listener. If the\nsocket is not listening, this function has no effect.\n\n*See also:* `listen`","summary":"<p>Stop listening and close the socket</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2136","def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_tcplistener_close(to_unsafe)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2090","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_tcplistener_finalize(to_unsafe)\nSFMLExt.sfml_tcplistener_free(@this)\n"}},{"id":"listen(port:Int,address:IpAddress=IpAddress::Any):Socket::Status-instance-method","html_id":"listen(port:Int,address:IpAddress=IpAddress::Any):Socket::Status-instance-method","name":"listen","doc":"Start listening for incoming connection attempts\n\nThis function makes the socket start listening on the\nspecified port, waiting for incoming connection attempts.\n\nIf the socket is already listening on a port when this\nfunction is called, it will stop listening on the old\nport before starting to listen on the new port.\n\n* *port* - Port to listen on for incoming connection attempts\n* *address* - Address of the interface to listen on\n\n*Returns:* Status code\n\n*See also:* `accept`, `close`","summary":"<p>Start listening for incoming connection attempts</p>","abstract":false,"args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int"},{"name":"address","doc":null,"default_value":"IpAddress::Any","external_name":"address","restriction":"IpAddress"}],"args_string":"(port : Int, address : IpAddress = <span class=\"t\">IpAddress</span><span class=\"t\">::</span><span class=\"t\">Any</span>) : Socket::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2126","def":{"name":"listen","args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int"},{"name":"address","doc":null,"default_value":"IpAddress::Any","external_name":"address","restriction":"IpAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Socket::Status","visibility":"Public","body":"SFMLExt.sfml_tcplistener_listen_bxiBfE(to_unsafe, LibC::UShort.new(port), address, out result)\nreturn Socket::Status.new(result)\n"}},{"id":"local_port:UInt16-instance-method","html_id":"local_port:UInt16-instance-method","name":"local_port","doc":"Get the port to which the socket is bound locally\n\nIf the socket is not listening to a port, this function\nreturns 0.\n\n*Returns:* Port to which the socket is bound\n\n*See also:* `listen`","summary":"<p>Get the port to which the socket is bound locally</p>","abstract":false,"args":[],"args_string":" : UInt16","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2107","def":{"name":"local_port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"SFMLExt.sfml_tcplistener_getlocalport(to_unsafe, out result)\nreturn result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/TcpSocket","path":"SF/TcpSocket.html","kind":"class","full_name":"SF::TcpSocket","name":"TcpSocket","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Socket","kind":"class","full_name":"SF::Socket","name":"Socket"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Socket","kind":"class","full_name":"SF::Socket","name":"Socket"},{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":182,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Specialized socket using the TCP protocol\n\nTCP is a connected protocol, which means that a TCP\nsocket can only communicate with the host it is connected\nto. It can't send or receive anything if it is not connected.\n\nThe TCP protocol is reliable but adds a slight overhead.\nIt ensures that your data will always be received in order\nand without errors (no data corrupted, lost or duplicated).\n\nWhen a socket is connected to a remote host, you can\nretrieve informations about this host with the\nremote_address and remote_port functions. You can\nalso get the local port to which the socket is bound\n(which is automatically chosen when the socket is connected),\nwith the local_port function.\n\nSending and receiving data can use either the low-level\nor the high-level functions. The low-level functions\nprocess a raw sequence of bytes, and cannot ensure that\none call to Send will exactly match one call to Receive\nat the other end of the socket.\n\nThe high-level interface uses packets (see `SF::Packet`),\nwhich are easier to use and provide more safety regarding\nthe data that is exchanged. You can look at the `SF::Packet`\nclass to get more details about how they work.\n\nThe socket is automatically disconnected when it is destroyed,\nbut if you want to explicitly close the connection while\nthe socket instance is still alive, you can call disconnect.\n\nUsage example:\n```\n# ----- The client -----\n\n# Create a socket and connect it to 192.168.1.50 on port 55001\nsocket = SF::TcpSocket.new\nsocket.connect(\"192.168.1.50\", 55001)\n\n# Send a message to the connected host\nmessage = \"Hi, I am a client\"\nsocket.send(message.to_slice)\n\n# Receive an answer from the server\nbuffer = Slice(UInt8).new(1024)\nstatus, received = socket.receive(buffer)\nputs \"The server said: #{buffer}\"\n\n# ----- The server -----\n\n# Create a listener to wait for incoming connections on port 55001\nlistener = SF::TcpListener.new\nlistener.listen(55001)\n\n# Wait for a connection\nsocket = SF::TcpSocket.new\nlistener.accept(socket)\nputs \"New client connected: #{socket.remote_address}\"\n\n# Receive a message from the client\nbuffer = Slice(UInt8).new(1024)\nstatus, received = socket.receive(buffer)\nputs \"The client said: #{buffer}\"\n\n# Send an answer\nmessage = \"Welcome, client\"\nsocket.send(message.to_slice)\n```\n\n*See also:* `SF::Socket`, `SF::UdpSocket`, `SF::Packet`","summary":"<p>Specialized socket using the TCP protocol</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L189","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"connect(remote_address:IpAddress,remote_port:Int,timeout:Time=Time::Zero):Socket::Status-instance-method","html_id":"connect(remote_address:IpAddress,remote_port:Int,timeout:Time=Time::Zero):Socket::Status-instance-method","name":"connect","doc":"Connect the socket to a remote peer\n\nIn blocking mode, this function may take a while, especially\nif the remote peer is not reachable. The last parameter allows\nyou to stop trying to connect after a given timeout.\nIf the socket is already connected, the connection is\nforcibly disconnected before attempting to connect again.\n\n* *remote_address* - Address of the remote peer\n* *remote_port* - Port of the remote peer\n* *timeout* - Optional maximum time to wait\n\n*Returns:* Status code\n\n*See also:* `disconnect`","summary":"<p>Connect the socket to a remote peer</p>","abstract":false,"args":[{"name":"remote_address","doc":null,"default_value":"","external_name":"remote_address","restriction":"IpAddress"},{"name":"remote_port","doc":null,"default_value":"","external_name":"remote_port","restriction":"Int"},{"name":"timeout","doc":null,"default_value":"Time::Zero","external_name":"timeout","restriction":"Time"}],"args_string":"(remote_address : IpAddress, remote_port : Int, timeout : Time = <span class=\"t\">Time</span><span class=\"t\">::</span><span class=\"t\">Zero</span>) : Socket::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L244","def":{"name":"connect","args":[{"name":"remote_address","doc":null,"default_value":"","external_name":"remote_address","restriction":"IpAddress"},{"name":"remote_port","doc":null,"default_value":"","external_name":"remote_port","restriction":"Int"},{"name":"timeout","doc":null,"default_value":"Time::Zero","external_name":"timeout","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Socket::Status","visibility":"Public","body":"SFMLExt.sfml_tcpsocket_connect_BfEbxif4T(to_unsafe, remote_address, LibC::UShort.new(remote_port), timeout, out result)\nreturn Socket::Status.new(result)\n"}},{"id":"disconnect-instance-method","html_id":"disconnect-instance-method","name":"disconnect","doc":"Disconnect the socket from its remote peer\n\nThis function gracefully closes the connection. If the\nsocket is not connected, this function has no effect.\n\n*See also:* `connect`","summary":"<p>Disconnect the socket from its remote peer</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L254","def":{"name":"disconnect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_tcpsocket_disconnect(to_unsafe)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L184","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_tcpsocket_finalize(to_unsafe)\nSFMLExt.sfml_tcpsocket_free(@this)\n"}},{"id":"local_port:UInt16-instance-method","html_id":"local_port:UInt16-instance-method","name":"local_port","doc":"Get the port to which the socket is bound locally\n\nIf the socket is not connected, this function returns 0.\n\n*Returns:* Port to which the socket is bound\n\n*See also:* `connect`, `remote_port`","summary":"<p>Get the port to which the socket is bound locally</p>","abstract":false,"args":[],"args_string":" : UInt16","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L200","def":{"name":"local_port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"SFMLExt.sfml_tcpsocket_getlocalport(to_unsafe, out result)\nreturn result\n"}},{"id":"receive(data:Slice):::Tuple(Socket::Status,Int32)-instance-method","html_id":"receive(data:Slice):::Tuple(Socket::Status,Int32)-instance-method","name":"receive","doc":"Receive raw data from the remote peer\n\nIn blocking mode, this function will wait until some\nbytes are actually received.\nThis function will fail if the socket is not connected.\n\n* *data* - The slice to fill with the received bytes\n\n*Returns:*\n* Status code\n* The actual number of bytes received\n\n*See also:* `send`","summary":"<p>Receive raw data from the remote peer</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice) : ::Tuple(Socket::Status, Int32)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L302","def":{"name":"receive","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Tuple(Socket::Status, Int32)","visibility":"Public","body":"SFMLExt.sfml_tcpsocket_receive_xALvgvi49(to_unsafe, data, data.bytesize, out received, out result)\nreturn {Socket::Status.new(result), received.to_i}\n"}},{"id":"receive(packet:Packet):Socket::Status-instance-method","html_id":"receive(packet:Packet):Socket::Status-instance-method","name":"receive","doc":"Receive a formatted packet of data from the remote peer\n\nIn blocking mode, this function will wait until the whole packet\nhas been received.\nThis function will fail if the socket is not connected.\n\n* *packet* - Packet to fill with the received data\n\n*Returns:* Status code\n\n*See also:* `send`","summary":"<p>Receive a formatted packet of data from the remote peer</p>","abstract":false,"args":[{"name":"packet","doc":null,"default_value":"","external_name":"packet","restriction":"Packet"}],"args_string":"(packet : Packet) : Socket::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L334","def":{"name":"receive","args":[{"name":"packet","doc":null,"default_value":"","external_name":"packet","restriction":"Packet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Socket::Status","visibility":"Public","body":"SFMLExt.sfml_tcpsocket_receive_jyF(to_unsafe, packet, out result)\nreturn Socket::Status.new(result)\n"}},{"id":"remote_address:IpAddress-instance-method","html_id":"remote_address:IpAddress-instance-method","name":"remote_address","doc":"Get the address of the connected peer\n\nIt the socket is not connected, this function returns\n`SF::IpAddress::None`.\n\n*Returns:* Address of the remote peer\n\n*See also:* `remote_port`","summary":"<p>Get the address of the connected peer</p>","abstract":false,"args":[],"args_string":" : IpAddress","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L212","def":{"name":"remote_address","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IpAddress","visibility":"Public","body":"result = IpAddress.allocate\nSFMLExt.sfml_tcpsocket_getremoteaddress(to_unsafe, result)\nreturn result\n"}},{"id":"remote_port:UInt16-instance-method","html_id":"remote_port:UInt16-instance-method","name":"remote_port","doc":"Get the port of the connected peer to which\nthe socket is connected\n\nIf the socket is not connected, this function returns 0.\n\n*Returns:* Remote port to which the socket is connected\n\n*See also:* `remote_address`","summary":"<p>Get the port of the connected peer to which the socket is connected</p>","abstract":false,"args":[],"args_string":" : UInt16","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L225","def":{"name":"remote_port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"SFMLExt.sfml_tcpsocket_getremoteport(to_unsafe, out result)\nreturn result\n"}},{"id":"send(data:Slice):::Tuple(Socket::Status,Int32)-instance-method","html_id":"send(data:Slice):::Tuple(Socket::Status,Int32)-instance-method","name":"send","doc":"Send raw data to the remote peer\n\nThis function will fail if the socket is not connected.\n\n* *data* - Slice containing the bytes to send\n\n*Returns:*\n* Status code\n* The number of bytes sent\n\n*See also:* `receive`","summary":"<p>Send raw data to the remote peer</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice) : ::Tuple(Socket::Status, Int32)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L285","def":{"name":"send","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Tuple(Socket::Status, Int32)","visibility":"Public","body":"SFMLExt.sfml_tcpsocket_send_5h8vgvi49(to_unsafe, data, data.bytesize, out sent, out result)\nreturn {Socket::Status.new(result), sent.to_i}\n"}},{"id":"send(packet:Packet):Socket::Status-instance-method","html_id":"send(packet:Packet):Socket::Status-instance-method","name":"send","doc":"Send a formatted packet of data to the remote peer\n\nIn non-blocking mode, if this function returns `SF::Socket::Partial`,\nyou *must* retry sending the same unmodified packet before sending\nanything else in order to guarantee the packet arrives at the remote\npeer uncorrupted.\nThis function will fail if the socket is not connected.\n\n* *packet* - Packet to send\n\n*Returns:* Status code\n\n*See also:* `receive`","summary":"<p>Send a formatted packet of data to the remote peer</p>","abstract":false,"args":[{"name":"packet","doc":null,"default_value":"","external_name":"packet","restriction":"Packet"}],"args_string":"(packet : Packet) : Socket::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L319","def":{"name":"send","args":[{"name":"packet","doc":null,"default_value":"","external_name":"packet","restriction":"Packet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Socket::Status","visibility":"Public","body":"SFMLExt.sfml_tcpsocket_send_jyF(to_unsafe, packet, out result)\nreturn Socket::Status.new(result)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Text","path":"SF/Text.html","kind":"class","full_name":"SF::Text","name":"Text","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Transformable","kind":"class","full_name":"SF::Transformable","name":"Transformable"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"},{"html_id":"github.com/oprypin/crsfml/SF/Transformable","kind":"class","full_name":"SF::Transformable","name":"Transformable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":6423,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Graphical text that can be drawn to a render target\n\n`SF::Text` is a drawable class that allows to easily display\nsome text with custom style and color on a render target.\n\nIt inherits all the functions from `SF::Transformable:`\nposition, rotation, scale, origin. It also adds text-specific\nproperties such as the font to use, the character size,\nthe font style (bold, italic, underlined and strike through), the\ntext color, the outline thickness, the outline color, the character\nspacing, the line spacing and the text to display of course.\nIt also provides convenience functions to calculate the\ngraphical size of the text, or to get the global position\nof a given character.\n\n`SF::Text` works in combination with the `SF::Font` class, which\nloads and provides the glyphs (visual characters) of a given font.\n\nThe separation of `SF::Font` and `SF::Text` allows more flexibility\nand better performances: indeed a `SF::Font` is a heavy resource,\nand any operation on it is slow (often too slow for real-time\napplications). On the other side, a `SF::Text` is a lightweight\nobject which can combine the glyphs data and metrics of a `SF::Font`\nto display any text on a render target.\n\nIt is important to note that the `SF::Text` instance doesn't\ncopy the font that it uses, it only keeps a reference to it.\nThus, a `SF::Font` must not be destructed while it is\nused by a `SF::Text` (i.e. never write a function that\nuses a local `SF::Font` instance for creating a text).\n\nSee also the note on coordinates and undistorted rendering in `SF::Transformable`.\n\nUsage example:\n```\n# Declare and load a font\nfont = SF::Font.from_file(\"arial.ttf\")\n\n# Create a text\ntext = SF::Text.new(\"hello\", font)\ntext.character_size = 30\ntext.style = SF::Text::Bold\ntext.color = SF::Color::Red\n\n# Draw it\nwindow.draw text\n```\n\n*See also:* `SF::Font`, `SF::Transformable`","summary":"<p>Graphical text that can be drawn to a render target</p>","class_methods":[],"constructors":[{"id":"new(string:String,font:Font,character_size:Int=30)-class-method","html_id":"new(string:String,font:Font,character_size:Int=30)-class-method","name":"new","doc":"Construct the text from a string, font and size\n\nNote that if the used font is a bitmap font, it is not\nscalable, thus not all requested sizes will be available\nto use. This needs to be taken into consideration when\nsetting the character size. If you need to display text\nof a certain size, make sure the corresponding bitmap\nfont that supports that size is used.\n\n* *string* - Text assigned to the string\n* *font* - Font used to draw the string\n* *character_size* - Base size of characters, in pixels","summary":"<p>Construct the text from a string, font and size</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"},{"name":"font","doc":null,"default_value":"","external_name":"font","restriction":"Font"},{"name":"character_size","doc":null,"default_value":"30","external_name":"character_size","restriction":"Int"}],"args_string":"(string : String, font : Font, character_size : Int = <span class=\"n\">30</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6463","def":{"name":"new","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"},{"name":"font","doc":null,"default_value":"","external_name":"font","restriction":"Font"},{"name":"character_size","doc":null,"default_value":"30","external_name":"character_size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(string, font, character_size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nCreates an empty text.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6447","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"character_size:Int32-instance-method","html_id":"character_size:Int32-instance-method","name":"character_size","doc":"Get the character size\n\n*Returns:* Size of the characters, in pixels\n\n*See also:* `character_size=`","summary":"<p>Get the character size</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6630","def":{"name":"character_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_text_getcharactersize(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"character_size=(size:Int)-instance-method","html_id":"character_size=(size:Int)-instance-method","name":"character_size=","doc":"Set the character size\n\nThe default size is 30.\n\nNote that if the used font is a bitmap font, it is not\nscalable, thus not all requested sizes will be available\nto use. This needs to be taken into consideration when\nsetting the character size. If you need to display text\nof a certain size, make sure the corresponding bitmap\nfont that supports that size is used.\n\n* *size* - New character size, in pixels\n\n*See also:* `character_size`","summary":"<p>Set the character size</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6509","def":{"name":"character_size=","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_text_setcharactersize_emS(to_unsafe, LibC::UInt.new(size))"}},{"id":"color:Color-instance-method","html_id":"color:Color-instance-method","name":"color","doc":"Get the fill color of the text\n\n*Returns:* Fill color of the text\n\n*See also:* `fill_color=`\n\nDEPRECATED: There is now fill and outline colors instead\nof a single global color.\nUse fill_color() or outline_color() instead.","summary":"<p>Get the fill color of the text</p>","abstract":false,"args":[],"args_string":" : Color","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6670","def":{"name":"color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"result = Color.allocate\nSFMLExt.sfml_text_getcolor(to_unsafe, result)\nreturn result\n"}},{"id":"color=(color:Color)-instance-method","html_id":"color=(color:Color)-instance-method","name":"color=","doc":"Set the fill color of the text\n\nBy default, the text's fill color is opaque white.\nSetting the fill color to a transparent color with an outline\nwill cause the outline to be displayed in the fill area of the text.\n\n* *color* - New fill color of the text\n\n*See also:* `fill_color`\n\nDEPRECATED: There is now fill and outline colors instead\nof a single global color.\nUse fill_color=() or outline_color=() instead.","summary":"<p>Set the fill color of the text</p>","abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"args_string":"(color : Color)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6566","def":{"name":"color=","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_text_setcolor_QVe(to_unsafe, color)"}},{"id":"dup:Text-instance-method","html_id":"dup:Text-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Text","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6867","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Text","visibility":"Public","body":"return Text.new(self)"}},{"id":"fill_color:Color-instance-method","html_id":"fill_color:Color-instance-method","name":"fill_color","doc":"Get the fill color of the text\n\n*Returns:* Fill color of the text\n\n*See also:* `fill_color=`","summary":"<p>Get the fill color of the text</p>","abstract":false,"args":[],"args_string":" : Color","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6680","def":{"name":"fill_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"result = Color.allocate\nSFMLExt.sfml_text_getfillcolor(to_unsafe, result)\nreturn result\n"}},{"id":"fill_color=(color:Color)-instance-method","html_id":"fill_color=(color:Color)-instance-method","name":"fill_color=","doc":"Set the fill color of the text\n\nBy default, the text's fill color is opaque white.\nSetting the fill color to a transparent color with an outline\nwill cause the outline to be displayed in the fill area of the text.\n\n* *color* - New fill color of the text\n\n*See also:* `fill_color`","summary":"<p>Set the fill color of the text</p>","abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"args_string":"(color : Color)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6578","def":{"name":"fill_color=","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_text_setfillcolor_QVe(to_unsafe, color)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Virtual destructor","summary":"<p>Virtual destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6425","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_text_finalize(to_unsafe)\nSFMLExt.sfml_text_free(@this)\n"}},{"id":"find_character_pos(index:Int):Vector2f-instance-method","html_id":"find_character_pos(index:Int):Vector2f-instance-method","name":"find_character_pos","doc":"Return the position of the *index-th* character\n\nThis function computes the visual position of a character\nfrom its index in the string. The returned position is\nin global coordinates (translation, rotation, scale and\norigin are applied).\nIf *index* is out of range, the position of the end of\nthe string is returned.\n\n* *index* - Index of the character\n\n*Returns:* Position of the character","summary":"<p>Return the position of the <em>index-th</em> character</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6716","def":{"name":"find_character_pos","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\nSFMLExt.sfml_text_findcharacterpos_vgv(to_unsafe, LibC::SizeT.new(index), result)\nreturn result\n"}},{"id":"font=(font:Font)-instance-method","html_id":"font=(font:Font)-instance-method","name":"font=","doc":"Set the text's font\n\nThe *font* argument refers to a font that must\nexist as long as the text uses it. Indeed, the text\ndoesn't store its own copy of the font, but rather keeps\na pointer to the one that you passed to this function.\nIf the font is destroyed and the text tries to\nuse it, the behavior is undefined.\n\n* *font* - New font\n\n*See also:* `font`","summary":"<p>Set the text's font</p>","abstract":false,"args":[{"name":"font","doc":null,"default_value":"","external_name":"font","restriction":"Font"}],"args_string":"(font : Font)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6490","def":{"name":"font=","args":[{"name":"font","doc":null,"default_value":"","external_name":"font","restriction":"Font"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_text_font = font\nSFMLExt.sfml_text_setfont_7CF(to_unsafe, font)\n"}},{"id":"global_bounds:FloatRect-instance-method","html_id":"global_bounds:FloatRect-instance-method","name":"global_bounds","doc":"Get the global bounding rectangle of the entity\n\nThe returned rectangle is in global coordinates, which means\nthat it takes into account the transformations (translation,\nrotation, scale, ...) that are applied to the entity.\nIn other words, this function returns the bounds of the\ntext in the global 2D world's coordinate system.\n\n*Returns:* Global bounding rectangle of the entity","summary":"<p>Get the global bounding rectangle of the entity</p>","abstract":false,"args":[],"args_string":" : FloatRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6744","def":{"name":"global_bounds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FloatRect","visibility":"Public","body":"result = FloatRect.allocate\nSFMLExt.sfml_text_getglobalbounds(to_unsafe, result)\nreturn result\n"}},{"id":"letter_spacing:Float32-instance-method","html_id":"letter_spacing:Float32-instance-method","name":"letter_spacing","doc":"Get the size of the letter spacing factor\n\n*Returns:* Size of the letter spacing factor\n\n*See also:* `letter_spacing=`","summary":"<p>Get the size of the letter spacing factor</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6639","def":{"name":"letter_spacing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_text_getletterspacing(to_unsafe, out result)\nreturn result\n"}},{"id":"letter_spacing=(spacing_factor:Number)-instance-method","html_id":"letter_spacing=(spacing_factor:Number)-instance-method","name":"letter_spacing=","doc":"Set the letter spacing factor\n\nThe default spacing between letters is defined by the font.\nThis factor doesn't directly apply to the existing\nspacing between each character, it rather adds a fixed\nspace between them which is calculated from the font\nmetrics and the character size.\nNote that factors below 1 (including negative numbers) bring\ncharacters closer to each other.\nBy default the letter spacing factor is 1.\n\n* *spacing_factor* - New letter spacing factor\n\n*See also:* `letter_spacing`","summary":"<p>Set the letter spacing factor</p>","abstract":false,"args":[{"name":"spacing_factor","doc":null,"default_value":"","external_name":"spacing_factor","restriction":"Number"}],"args_string":"(spacing_factor : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6538","def":{"name":"letter_spacing=","args":[{"name":"spacing_factor","doc":null,"default_value":"","external_name":"spacing_factor","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_text_setletterspacing_Bw9(to_unsafe, LibC::Float.new(spacing_factor))"}},{"id":"line_spacing:Float32-instance-method","html_id":"line_spacing:Float32-instance-method","name":"line_spacing","doc":"Get the size of the line spacing factor\n\n*Returns:* Size of the line spacing factor\n\n*See also:* `line_spacing=`","summary":"<p>Get the size of the line spacing factor</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6648","def":{"name":"line_spacing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_text_getlinespacing(to_unsafe, out result)\nreturn result\n"}},{"id":"line_spacing=(spacing_factor:Number)-instance-method","html_id":"line_spacing=(spacing_factor:Number)-instance-method","name":"line_spacing=","doc":"Set the line spacing factor\n\nThe default spacing between lines is defined by the font.\nThis method enables you to set a factor for the spacing\nbetween lines. By default the line spacing factor is 1.\n\n* *spacing_factor* - New line spacing factor\n\n*See also:* `line_spacing`","summary":"<p>Set the line spacing factor</p>","abstract":false,"args":[{"name":"spacing_factor","doc":null,"default_value":"","external_name":"spacing_factor","restriction":"Number"}],"args_string":"(spacing_factor : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6521","def":{"name":"line_spacing=","args":[{"name":"spacing_factor","doc":null,"default_value":"","external_name":"spacing_factor","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_text_setlinespacing_Bw9(to_unsafe, LibC::Float.new(spacing_factor))"}},{"id":"local_bounds:FloatRect-instance-method","html_id":"local_bounds:FloatRect-instance-method","name":"local_bounds","doc":"Get the local bounding rectangle of the entity\n\nThe returned rectangle is in local coordinates, which means\nthat it ignores the transformations (translation, rotation,\nscale, ...) that are applied to the entity.\nIn other words, this function returns the bounds of the\nentity in the entity's coordinate system.\n\n*Returns:* Local bounding rectangle of the entity","summary":"<p>Get the local bounding rectangle of the entity</p>","abstract":false,"args":[],"args_string":" : FloatRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6730","def":{"name":"local_bounds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FloatRect","visibility":"Public","body":"result = FloatRect.allocate\nSFMLExt.sfml_text_getlocalbounds(to_unsafe, result)\nreturn result\n"}},{"id":"outline_color:Color-instance-method","html_id":"outline_color:Color-instance-method","name":"outline_color","doc":"Get the outline color of the text\n\n*Returns:* Outline color of the text\n\n*See also:* `outline_color=`","summary":"<p>Get the outline color of the text</p>","abstract":false,"args":[],"args_string":" : Color","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6690","def":{"name":"outline_color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"result = Color.allocate\nSFMLExt.sfml_text_getoutlinecolor(to_unsafe, result)\nreturn result\n"}},{"id":"outline_color=(color:Color)-instance-method","html_id":"outline_color=(color:Color)-instance-method","name":"outline_color=","doc":"Set the outline color of the text\n\nBy default, the text's outline color is opaque black.\n\n* *color* - New outline color of the text\n\n*See also:* `outline_color`","summary":"<p>Set the outline color of the text</p>","abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"args_string":"(color : Color)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6588","def":{"name":"outline_color=","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_text_setoutlinecolor_QVe(to_unsafe, color)"}},{"id":"outline_thickness:Float32-instance-method","html_id":"outline_thickness:Float32-instance-method","name":"outline_thickness","doc":"Get the outline thickness of the text\n\n*Returns:* Outline thickness of the text, in pixels\n\n*See also:* `outline_thickness=`","summary":"<p>Get the outline thickness of the text</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6700","def":{"name":"outline_thickness","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_text_getoutlinethickness(to_unsafe, out result)\nreturn result\n"}},{"id":"outline_thickness=(thickness:Number)-instance-method","html_id":"outline_thickness=(thickness:Number)-instance-method","name":"outline_thickness=","doc":"Set the thickness of the text's outline\n\nBy default, the outline thickness is 0.\n\nBe aware that using a negative value for the outline\nthickness will cause distorted rendering.\n\n* *thickness* - New outline thickness, in pixels\n\n*See also:* `outline_thickness`","summary":"<p>Set the thickness of the text's outline</p>","abstract":false,"args":[{"name":"thickness","doc":null,"default_value":"","external_name":"thickness","restriction":"Number"}],"args_string":"(thickness : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6601","def":{"name":"outline_thickness=","args":[{"name":"thickness","doc":null,"default_value":"","external_name":"thickness","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_text_setoutlinethickness_Bw9(to_unsafe, LibC::Float.new(thickness))"}},{"id":"string:String-instance-method","html_id":"string:String-instance-method","name":"string","doc":"Get the text's string\n\n*Returns:* Text's string\n\n*See also:* `string=`","summary":"<p>Get the text's string</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6609","def":{"name":"string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"SFMLExt.sfml_text_getstring(to_unsafe, out result)\nreturn String.build do |io|\n  while (v = result.value) != '\\u{0}'\n    io << v\n    result = result + 1\n  end\nend\n"}},{"id":"string=(string:String)-instance-method","html_id":"string=(string:String)-instance-method","name":"string=","doc":"Set the text's string\n\nA text's string is empty by default.\n\n* *string* - New string\n\n*See also:* `string`","summary":"<p>Set the text's string</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6475","def":{"name":"string=","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_text_setstring_bQs(to_unsafe, string.size, string.chars)"}},{"id":"style:UInt32-instance-method","html_id":"style:UInt32-instance-method","name":"style","doc":"Get the text's style\n\n*Returns:* Text's style\n\n*See also:* `style=`","summary":"<p>Get the text's style</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6657","def":{"name":"style","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"SFMLExt.sfml_text_getstyle(to_unsafe, out result)\nreturn result\n"}},{"id":"style=(style:Text::Style)-instance-method","html_id":"style=(style:Text::Style)-instance-method","name":"style=","doc":"Set the text's style\n\nYou can pass a combination of one or more styles, for\nexample `SF::Text::Bold` | `SF::Text::Italic`.\nThe default style is `SF::Text::Regular`.\n\n* *style* - New style\n\n*See also:* `style`","summary":"<p>Set the text's style</p>","abstract":false,"args":[{"name":"style","doc":null,"default_value":"","external_name":"style","restriction":"Text::Style"}],"args_string":"(style : Text::Style)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6550","def":{"name":"style=","args":[{"name":"style","doc":null,"default_value":"","external_name":"style","restriction":"Text::Style"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_text_setstyle_saL(to_unsafe, style)"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Text/Style","path":"SF/Text/Style.html","kind":"enum","full_name":"SF::Text::Style","name":"Style","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":6431,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Regular","name":"Regular","value":"0","doc":"Regular characters, no style","summary":"<p>Regular characters, no style</p>"},{"id":"Bold","name":"Bold","value":"1","doc":"Bold characters","summary":"<p>Bold characters</p>"},{"id":"Italic","name":"Italic","value":"2","doc":"Italic characters","summary":"<p>Italic characters</p>"},{"id":"Underlined","name":"Underlined","value":"4","doc":"Underlined characters","summary":"<p>Underlined characters</p>"},{"id":"StrikeThrough","name":"StrikeThrough","value":"8","doc":"Strike through characters","summary":"<p>Strike through characters</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Text","kind":"class","full_name":"SF::Text","name":"Text"},"doc":"Enumeration of the string drawing styles","summary":"<p>Enumeration of the string drawing styles</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"bold?-instance-method","html_id":"bold?-instance-method","name":"bold?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6435","def":{"name":"bold?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Bold)"}},{"id":"italic?-instance-method","html_id":"italic?-instance-method","name":"italic?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6437","def":{"name":"italic?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Italic)"}},{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6431","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == 0"}},{"id":"regular?-instance-method","html_id":"regular?-instance-method","name":"regular?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6433","def":{"name":"regular?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Regular)"}},{"id":"strike_through?-instance-method","html_id":"strike_through?-instance-method","name":"strike_through?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6441","def":{"name":"strike_through?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(StrikeThrough)"}},{"id":"underlined?-instance-method","html_id":"underlined?-instance-method","name":"underlined?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6439","def":{"name":"underlined?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Underlined)"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/Texture","path":"SF/Texture.html","kind":"class","full_name":"SF::Texture","name":"Texture","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/GlResource","kind":"module","full_name":"SF::GlResource","name":"GlResource"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":3053,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/GlResource","kind":"module","full_name":"SF::GlResource","name":"GlResource"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Image living on the graphics card that can be used for drawing\n\n`SF::Texture` stores pixels that can be drawn, with a sprite\nfor example. A texture lives in the graphics card memory,\ntherefore it is very fast to draw a texture to a render target,\nor copy a render target to a texture (the graphics card can\naccess both directly).\n\nBeing stored in the graphics card memory has some drawbacks.\nA texture cannot be manipulated as freely as a `SF::Image`,\nyou need to prepare the pixels first and then upload them\nto the texture in a single operation (see Texture.update).\n\n`SF::Texture` makes it easy to convert from/to `SF::Image`, but\nkeep in mind that these calls require transfers between\nthe graphics card and the central memory, therefore they are\nslow operations.\n\nA texture can be loaded from an image, but also directly\nfrom a file/memory/stream. The necessary shortcuts are defined\nso that you don't need an image first for the most common cases.\nHowever, if you want to perform some modifications on the pixels\nbefore creating the final texture, you can load your file to a\n`SF::Image`, do whatever you need with the pixels, and then call\nTexture.load_from_image.\n\nSince they live in the graphics card memory, the pixels of a texture\ncannot be accessed without a slow copy first. And they cannot be\naccessed individually. Therefore, if you need to read the texture's\npixels (like for pixel-perfect collisions), it is recommended to\nstore the collision information separately, for example in an array\nof booleans.\n\nLike `SF::Image`, `SF::Texture` can handle a unique internal\nrepresentation of pixels, which is RGBA 32 bits. This means\nthat a pixel must be composed of 8 bits red, green, blue and\nalpha channels -- just like a `SF::Color`.\n\nUsage example:\n```\n# This example shows the most common use of SF::Texture:\n# drawing a sprite\n\n# Load a texture from a file\ntexture = SF::Texture.from_file(\"texture.png\")\n\n# Assign it to a sprite\nsprite = SF::Sprite.new(texture)\n\n# Draw the textured sprite\nwindow.draw sprite\n```\n\n```\n# This example shows another common use of SF::Texture:\n# streaming real-time data, like video frames\n\n# Create an empty texture\ntexture = SF::Texture.new(640, 480)\n\n# Create a sprite that will display the texture\nsprite = SF::Sprite.new(texture)\n\nloop do # the main loop\n  ...\n\n  # update the texture\n  pixels = (...).to_unsafe # get a fresh chunk of pixels (the next frame of a movie, for example)\n  texture.update(pixels)\n\n  # draw it\n  window.draw sprite\n\n  ...\nend\n\n```\n\nLike `SF::Shader` that can be used as a raw OpenGL shader,\n`SF::Texture` can also be used directly as a raw texture for\ncustom OpenGL geometry.\n```\nSF::Texture.bind(texture)\n... render OpenGL geometry ...\nSF::Texture.bind(nil)\n```\n\n*See also:* `SF::Sprite`, `SF::Image`, `SF::RenderTexture`","summary":"<p>Image living on the graphics card that can be used for drawing</p>","class_methods":[{"id":"bind(texture:Texture?,coordinate_type:Texture::CoordinateType=Normalized)-class-method","html_id":"bind(texture:Texture?,coordinate_type:Texture::CoordinateType=Normalized)-class-method","name":"bind","doc":"Bind a texture for rendering\n\nThis function is not part of the graphics API, it mustn't be\nused when drawing SFML entities. It must be used only if you\nmix `SF::Texture` with OpenGL code.\n\n```\nt1 = SF::Texture.new\nt2 = SF::Texture.new\n...\nSF::Texture.bind t1\n# draw OpenGL stuff that use t1...\nSF::Texture.bind t2\n# draw OpenGL stuff that use t2...\nSF::Texture.bind nil\n# draw OpenGL stuff that use no texture...\n```\n\nThe *coordinate_type* argument controls how texture\ncoordinates will be interpreted. If Normalized (the default), they\nmust be in range `0.0 .. 1.0`, which is the default way of handling\ntexture coordinates with OpenGL. If Pixels, they must be given\nin pixels (range `0.0 .. size`). This mode is used internally by\nthe graphics classes of SFML, it makes the definition of texture\ncoordinates more intuitive for the high-level API, users don't need\nto compute normalized values.\n\n* *texture* - Pointer to the texture to bind, can be null to use no texture\n* *coordinate_type* - Type of texture coordinates to use","summary":"<p>Bind a texture for rendering</p>","abstract":false,"args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture | ::Nil"},{"name":"coordinate_type","doc":null,"default_value":"Normalized","external_name":"coordinate_type","restriction":"Texture::CoordinateType"}],"args_string":"(texture : Texture?, coordinate_type : Texture::CoordinateType = <span class=\"t\">Normalized</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3564","def":{"name":"bind","args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture | ::Nil"},{"name":"coordinate_type","doc":null,"default_value":"Normalized","external_name":"coordinate_type","restriction":"Texture::CoordinateType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_bind_MXdK9j(texture, coordinate_type)"}},{"id":"maximum_size:Int32-class-method","html_id":"maximum_size:Int32-class-method","name":"maximum_size","doc":"Get the maximum texture size allowed\n\nThis maximum size is defined by the graphics driver.\nYou can expect a value of 512 pixels for low-end graphics\ncard, and up to 8192 pixels or more for newer hardware.\n\n*Returns:* Maximum size allowed for textures, in pixels","summary":"<p>Get the maximum texture size allowed</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3574","def":{"name":"maximum_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_texture_getmaximumsize(out result)\nreturn result.to_i\n"}}],"constructors":[{"id":"from_file(*args,**kwargs):self-class-method","html_id":"from_file(*args,**kwargs):self-class-method","name":"from_file","doc":"Shorthand for `texture = Texture.new; texture.load_from_file(...); texture`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>texture = <a href=\"../SF/Texture.html#new-class-method\">Texture.new</a>; texture.load_from_file(...); texture</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3130","def":{"name":"from_file","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_file(*args, **kwargs))\n  raise(InitError.new(\"Texture.load_from_file failed\"))\nend\nobj\n"}},{"id":"from_image(*args,**kwargs):self-class-method","html_id":"from_image(*args,**kwargs):self-class-method","name":"from_image","doc":"Shorthand for `texture = Texture.new; texture.load_from_image(...); texture`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>texture = <a href=\"../SF/Texture.html#new-class-method\">Texture.new</a>; texture.load_from_image(...); texture</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3243","def":{"name":"from_image","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_image(*args, **kwargs))\n  raise(InitError.new(\"Texture.load_from_image failed\"))\nend\nobj\n"}},{"id":"from_memory(*args,**kwargs):self-class-method","html_id":"from_memory(*args,**kwargs):self-class-method","name":"from_memory","doc":"Shorthand for `texture = Texture.new; texture.load_from_memory(...); texture`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>texture = <a href=\"../SF/Texture.html#new-class-method\">Texture.new</a>; texture.load_from_memory(...); texture</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3170","def":{"name":"from_memory","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_memory(*args, **kwargs))\n  raise(InitError.new(\"Texture.load_from_memory failed\"))\nend\nobj\n"}},{"id":"from_stream(*args,**kwargs):self-class-method","html_id":"from_stream(*args,**kwargs):self-class-method","name":"from_stream","doc":"Shorthand for `texture = Texture.new; texture.load_from_stream(...); texture`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>texture = <a href=\"../SF/Texture.html#new-class-method\">Texture.new</a>; texture.load_from_stream(...); texture</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3210","def":{"name":"from_stream","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.load_from_stream(*args, **kwargs))\n  raise(InitError.new(\"Texture.load_from_stream failed\"))\nend\nobj\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nCreates an empty texture.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3066","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*args,**kwargs):self-class-method","html_id":"new(*args,**kwargs):self-class-method","name":"new","doc":"Shorthand for `texture = Texture.new; texture.create(...); texture`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>texture = <a href=\"../SF/Texture.html#new-class-method\">Texture.new</a>; texture.create(...); texture</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3090","def":{"name":"new","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.create(*args, **kwargs))\n  raise(InitError.new(\"Texture.create failed\"))\nend\nobj\n"}}],"instance_methods":[{"id":"copy_to_image:Image-instance-method","html_id":"copy_to_image:Image-instance-method","name":"copy_to_image","doc":"Copy the texture pixels to an image\n\nThis function performs a slow operation that downloads\nthe texture's pixels from the graphics card and copies\nthem to a new image, potentially applying transformations\nto pixels if necessary (texture may be padded or flipped).\n\n*Returns:* Image containing the texture's pixels\n\n*See also:* `load_from_image`","summary":"<p>Copy the texture pixels to an image</p>","abstract":false,"args":[],"args_string":" : Image","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3268","def":{"name":"copy_to_image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Image","visibility":"Public","body":"result = Image.new\nSFMLExt.sfml_texture_copytoimage(to_unsafe, result)\nreturn result\n"}},{"id":"create(width:Int,height:Int):Bool-instance-method","html_id":"create(width:Int,height:Int):Bool-instance-method","name":"create","doc":"Create the texture\n\nIf this function fails, the texture is left unchanged.\n\n* *width* - Width of the texture\n* *height* - Height of the texture\n\n*Returns:* True if creation was successful","summary":"<p>Create the texture</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"}],"args_string":"(width : Int, height : Int) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3083","def":{"name":"create","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_texture_create_emSemS(to_unsafe, LibC::UInt.new(width), LibC::UInt.new(height), out result)\nreturn result\n"}},{"id":"dup:Texture-instance-method","html_id":"dup:Texture-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Texture","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3592","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Texture","visibility":"Public","body":"return Texture.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3071","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_finalize(to_unsafe)\nSFMLExt.sfml_texture_free(@this)\n"}},{"id":"generate_mipmap:Bool-instance-method","html_id":"generate_mipmap:Bool-instance-method","name":"generate_mipmap","doc":"Generate a mipmap using the current texture data\n\nMipmaps are pre-computed chains of optimized textures. Each\nlevel of texture in a mipmap is generated by halving each of\nthe previous level's dimensions. This is done until the final\nlevel has the size of 1x1. The textures generated in this process may\nmake use of more advanced filters which might improve the visual quality\nof textures when they are applied to objects much smaller than they are.\nThis is known as minification. Because fewer texels (texture elements)\nhave to be sampled from when heavily minified, usage of mipmaps\ncan also improve rendering performance in certain scenarios.\n\nMipmap generation relies on the necessary OpenGL extension being\navailable. If it is unavailable or generation fails due to another\nreason, this function will return false. Mipmap data is only valid from\nthe time it is generated until the next time the base level image is\nmodified, at which point this function will have to be called again to\nregenerate it.\n\n*Returns:* True if mipmap generation was successful, false if unsuccessful","summary":"<p>Generate a mipmap using the current texture data</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3514","def":{"name":"generate_mipmap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_texture_generatemipmap(to_unsafe, out result)\nreturn result\n"}},{"id":"load_from_file(filename:String,area:IntRect=IntRect.new):Bool-instance-method","html_id":"load_from_file(filename:String,area:IntRect=IntRect.new):Bool-instance-method","name":"load_from_file","doc":"Load the texture from a file on disk\n\nThis function is a shortcut for the following code:\n```\nimage = SF::Image.new\nimage.load_from_file(filename)\ntexture.load_from_image(image, area)\n```\n\nThe *area* argument can be used to load only a sub-rectangle\nof the whole image. If you want the entire image then leave\nthe default value (which is an empty IntRect).\nIf the *area* rectangle crosses the bounds of the image, it\nis adjusted to fit the image size.\n\nThe maximum size for a texture depends on the graphics\ndriver and can be retrieved with the maximum_size function.\n\nIf this function fails, the texture is left unchanged.\n\n* *filename* - Path of the image file to load\n* *area* - Area of the image to load\n\n*Returns:* True if loading was successful\n\n*See also:* `load_from_memory`, `load_from_stream`, `load_from_image`","summary":"<p>Load the texture from a file on disk</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"area","doc":null,"default_value":"IntRect.new","external_name":"area","restriction":"IntRect"}],"args_string":"(filename : String, area : IntRect = <span class=\"t\">IntRect</span>.<span class=\"k\">new</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3123","def":{"name":"load_from_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"area","doc":null,"default_value":"IntRect.new","external_name":"area","restriction":"IntRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_texture_loadfromfile_zkC2k1(to_unsafe, filename.bytesize, filename, area, out result)\nreturn result\n"}},{"id":"load_from_image(image:Image,area:IntRect=IntRect.new):Bool-instance-method","html_id":"load_from_image(image:Image,area:IntRect=IntRect.new):Bool-instance-method","name":"load_from_image","doc":"Load the texture from an image\n\nThe *area* argument can be used to load only a sub-rectangle\nof the whole image. If you want the entire image then leave\nthe default value (which is an empty IntRect).\nIf the *area* rectangle crosses the bounds of the image, it\nis adjusted to fit the image size.\n\nThe maximum size for a texture depends on the graphics\ndriver and can be retrieved with the maximum_size function.\n\nIf this function fails, the texture is left unchanged.\n\n* *image* - Image to load into the texture\n* *area* - Area of the image to load\n\n*Returns:* True if loading was successful\n\n*See also:* `load_from_file`, `load_from_memory`","summary":"<p>Load the texture from an image</p>","abstract":false,"args":[{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"Image"},{"name":"area","doc":null,"default_value":"IntRect.new","external_name":"area","restriction":"IntRect"}],"args_string":"(image : Image, area : IntRect = <span class=\"t\">IntRect</span>.<span class=\"k\">new</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3236","def":{"name":"load_from_image","args":[{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"Image"},{"name":"area","doc":null,"default_value":"IntRect.new","external_name":"area","restriction":"IntRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_texture_loadfromimage_dpt2k1(to_unsafe, image, area, out result)\nreturn result\n"}},{"id":"load_from_memory(data:Slice,area:IntRect=IntRect.new):Bool-instance-method","html_id":"load_from_memory(data:Slice,area:IntRect=IntRect.new):Bool-instance-method","name":"load_from_memory","doc":"Load the texture from a file in memory\n\nThis function is a shortcut for the following code:\n```\nimage = SF::Image.new\nimage.load_from_memory(data, size)\ntexture.load_from_image(image, area)\n```\n\nThe *area* argument can be used to load only a sub-rectangle\nof the whole image. If you want the entire image then leave\nthe default value (which is an empty IntRect).\nIf the *area* rectangle crosses the bounds of the image, it\nis adjusted to fit the image size.\n\nThe maximum size for a texture depends on the graphics\ndriver and can be retrieved with the maximum_size function.\n\nIf this function fails, the texture is left unchanged.\n\n* *data* - Slice containing the file data in memory\n* *area* - Area of the image to load\n\n*Returns:* True if loading was successful\n\n*See also:* `load_from_file`, `load_from_stream`, `load_from_image`","summary":"<p>Load the texture from a file in memory</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"},{"name":"area","doc":null,"default_value":"IntRect.new","external_name":"area","restriction":"IntRect"}],"args_string":"(data : Slice, area : IntRect = <span class=\"t\">IntRect</span>.<span class=\"k\">new</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3163","def":{"name":"load_from_memory","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"},{"name":"area","doc":null,"default_value":"IntRect.new","external_name":"area","restriction":"IntRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_texture_loadfrommemory_5h8vgv2k1(to_unsafe, data, data.bytesize, area, out result)\nreturn result\n"}},{"id":"load_from_stream(stream:InputStream,area:IntRect=IntRect.new):Bool-instance-method","html_id":"load_from_stream(stream:InputStream,area:IntRect=IntRect.new):Bool-instance-method","name":"load_from_stream","doc":"Load the texture from a custom stream\n\nThis function is a shortcut for the following code:\n```\nimage = SF::Image.new\nimage.load_from_stream(stream)\ntexture.load_from_image(image, area)\n```\n\nThe *area* argument can be used to load only a sub-rectangle\nof the whole image. If you want the entire image then leave\nthe default value (which is an empty IntRect).\nIf the *area* rectangle crosses the bounds of the image, it\nis adjusted to fit the image size.\n\nThe maximum size for a texture depends on the graphics\ndriver and can be retrieved with the maximum_size function.\n\nIf this function fails, the texture is left unchanged.\n\n* *stream* - Source stream to read from\n* *area* - Area of the image to load\n\n*Returns:* True if loading was successful\n\n*See also:* `load_from_file`, `load_from_memory`, `load_from_image`","summary":"<p>Load the texture from a custom stream</p>","abstract":false,"args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"InputStream"},{"name":"area","doc":null,"default_value":"IntRect.new","external_name":"area","restriction":"IntRect"}],"args_string":"(stream : InputStream, area : IntRect = <span class=\"t\">IntRect</span>.<span class=\"k\">new</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3203","def":{"name":"load_from_stream","args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"InputStream"},{"name":"area","doc":null,"default_value":"IntRect.new","external_name":"area","restriction":"IntRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_texture_loadfromstream_PO02k1(to_unsafe, stream, area, out result)\nreturn result\n"}},{"id":"native_handle:Int32-instance-method","html_id":"native_handle:Int32-instance-method","name":"native_handle","doc":"Get the underlying OpenGL handle of the texture.\n\nYou shouldn't need to use this function, unless you have\nvery specific stuff to implement that SFML doesn't support,\nor implement a temporary workaround until a bug is fixed.\n\n*Returns:* OpenGL handle of the texture or 0 if not yet created","summary":"<p>Get the underlying OpenGL handle of the texture.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3531","def":{"name":"native_handle","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_texture_getnativehandle(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"repeated=(repeated:Bool)-instance-method","html_id":"repeated=(repeated:Bool)-instance-method","name":"repeated=","doc":"Enable or disable repeating\n\nRepeating is involved when using texture coordinates\noutside the texture rectangle [0, 0, width, height].\nIn this case, if repeat mode is enabled, the whole texture\nwill be repeated as many times as needed to reach the\ncoordinate (for example, if the X texture coordinate is\n3 * width, the texture will be repeated 3 times).\nIf repeat mode is disabled, the \"extra space\" will instead\nbe filled with border pixels.\nWarning: on very old graphics cards, white pixels may appear\nwhen the texture is repeated. With such cards, repeat mode\ncan be used reliably only if the texture has power-of-two\ndimensions (such as 256x128).\nRepeating is disabled by default.\n\n* *repeated* - True to repeat the texture, false to disable repeating\n\n*See also:* `repeated?`","summary":"<p>Enable or disable repeating</p>","abstract":false,"args":[{"name":"repeated","doc":null,"default_value":"","external_name":"repeated","restriction":"Bool"}],"args_string":"(repeated : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3482","def":{"name":"repeated=","args":[{"name":"repeated","doc":null,"default_value":"","external_name":"repeated","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_setrepeated_GZq(to_unsafe, repeated)"}},{"id":"repeated?:Bool-instance-method","html_id":"repeated?:Bool-instance-method","name":"repeated?","doc":"Tell whether the texture is repeated or not\n\n*Returns:* True if repeat mode is enabled, false if it is disabled\n\n*See also:* `repeated=`","summary":"<p>Tell whether the texture is repeated or not</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3490","def":{"name":"repeated?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_texture_isrepeated(to_unsafe, out result)\nreturn result\n"}},{"id":"size:Vector2u-instance-method","html_id":"size:Vector2u-instance-method","name":"size","doc":"Return the size of the texture\n\n*Returns:* Size in pixels","summary":"<p>Return the size of the texture</p>","abstract":false,"args":[],"args_string":" : Vector2u","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3253","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2u","visibility":"Public","body":"result = Vector2u.allocate\nSFMLExt.sfml_texture_getsize(to_unsafe, result)\nreturn result\n"}},{"id":"smooth=(smooth:Bool)-instance-method","html_id":"smooth=(smooth:Bool)-instance-method","name":"smooth=","doc":"Enable or disable the smooth filter\n\nWhen the filter is activated, the texture appears smoother\nso that pixels are less noticeable. However if you want\nthe texture to look exactly the same as its source file,\nyou should leave it disabled.\nThe smooth filter is disabled by default.\n\n* *smooth* - True to enable smoothing, false to disable it\n\n*See also:* `smooth?`","summary":"<p>Enable or disable the smooth filter</p>","abstract":false,"args":[{"name":"smooth","doc":null,"default_value":"","external_name":"smooth","restriction":"Bool"}],"args_string":"(smooth : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3419","def":{"name":"smooth=","args":[{"name":"smooth","doc":null,"default_value":"","external_name":"smooth","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_setsmooth_GZq(to_unsafe, smooth)"}},{"id":"smooth?:Bool-instance-method","html_id":"smooth?:Bool-instance-method","name":"smooth?","doc":"Tell whether the smooth filter is enabled or not\n\n*Returns:* True if smoothing is enabled, false if it is disabled\n\n*See also:* `smooth=`","summary":"<p>Tell whether the smooth filter is enabled or not</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3427","def":{"name":"smooth?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_texture_issmooth(to_unsafe, out result)\nreturn result\n"}},{"id":"srgb=(s_rgb:Bool)-instance-method","html_id":"srgb=(s_rgb:Bool)-instance-method","name":"srgb=","doc":"Enable or disable conversion from sRGB\n\nWhen providing texture data from an image file or memory, it can\neither be stored in a linear color space or an sRGB color space.\nMost digital images account for gamma correction already, so they\nwould need to be \"uncorrected\" back to linear color space before\nbeing processed by the hardware. The hardware can automatically\nconvert it from the sRGB color space to a linear color space when\nit gets sampled. When the rendered image gets output to the final\nframebuffer, it gets converted back to sRGB.\n\nAfter enabling or disabling sRGB conversion, make sure to reload\nthe texture data in order for the setting to take effect.\n\nThis option is only useful in conjunction with an sRGB capable\nframebuffer. This can be requested during window creation.\n\n* *s_rgb* - True to enable sRGB conversion, false to disable it\n\n*See also:* `srgb?`","summary":"<p>Enable or disable conversion from sRGB</p>","abstract":false,"args":[{"name":"s_rgb","doc":null,"default_value":"","external_name":"s_rgb","restriction":"Bool"}],"args_string":"(s_rgb : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3451","def":{"name":"srgb=","args":[{"name":"s_rgb","doc":null,"default_value":"","external_name":"s_rgb","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_setsrgb_GZq(to_unsafe, s_rgb)"}},{"id":"srgb?:Bool-instance-method","html_id":"srgb?:Bool-instance-method","name":"srgb?","doc":"Tell whether the texture source is converted from sRGB or not\n\n*Returns:* True if the texture source is converted from sRGB, false if not\n\n*See also:* `srgb=`","summary":"<p>Tell whether the texture source is converted from sRGB or not</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3459","def":{"name":"srgb?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_texture_issrgb(to_unsafe, out result)\nreturn result\n"}},{"id":"swap(right:Texture)-instance-method","html_id":"swap(right:Texture)-instance-method","name":"swap","doc":"Swap the contents of this texture with those of another\n\n* *right* - Instance to swap with","summary":"<p>Swap the contents of this texture with those of another</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Texture"}],"args_string":"(right : Texture)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3521","def":{"name":"swap","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Texture"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_swap_zUT(to_unsafe, right)"}},{"id":"update(window:Window)-instance-method","html_id":"update(window:Window)-instance-method","name":"update","doc":"Update the texture from the contents of a window\n\nAlthough the source window can be smaller than the texture,\nthis function is usually used for updating the whole texture.\nThe other overload, which has (x, y) additional arguments,\nis more convenient for updating a sub-area of the texture.\n\nNo additional check is performed on the size of the window,\npassing a window bigger than the texture will lead to an\nundefined behavior.\n\nThis function does nothing if either the texture or the window\nwas not previously created.\n\n* *window* - Window to copy to the texture","summary":"<p>Update the texture from the contents of a window</p>","abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"Window"}],"args_string":"(window : Window)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3390","def":{"name":"update","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_update_JRh(to_unsafe, window)"}},{"id":"update(image:Image)-instance-method","html_id":"update(image:Image)-instance-method","name":"update","doc":"Update the texture from an image\n\nAlthough the source image can be smaller than the texture,\nthis function is usually used for updating the whole texture.\nThe other overload, which has (x, y) additional arguments,\nis more convenient for updating a sub-area of the texture.\n\nNo additional check is performed on the size of the image,\npassing an image bigger than the texture will lead to an\nundefined behavior.\n\nThis function does nothing if the texture was not\npreviously created.\n\n* *image* - Image to copy to the texture","summary":"<p>Update the texture from an image</p>","abstract":false,"args":[{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"Image"}],"args_string":"(image : Image)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3357","def":{"name":"update","args":[{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"Image"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_update_dpt(to_unsafe, image)"}},{"id":"update(pixels:::Pointer(UInt8))-instance-method","html_id":"update(pixels:::Pointer(UInt8))-instance-method","name":"update","doc":"Update the whole texture from an array of pixels\n\nThe *pixel* array is assumed to have the same size as\nthe *area* rectangle, and to contain 32-bits RGBA pixels.\n\nNo additional check is performed on the size of the pixel\narray, passing invalid arguments will lead to an undefined\nbehavior.\n\nThis function does nothing if *pixels* is null or if the\ntexture was not previously created.\n\n* *pixels* - Array of pixels to copy to the texture","summary":"<p>Update the whole texture from an array of pixels</p>","abstract":false,"args":[{"name":"pixels","doc":null,"default_value":"","external_name":"pixels","restriction":"::Pointer(UInt8)"}],"args_string":"(pixels : ::Pointer(UInt8))","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3286","def":{"name":"update","args":[{"name":"pixels","doc":null,"default_value":"","external_name":"pixels","restriction":"::Pointer(UInt8)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_update_843(to_unsafe, pixels)"}},{"id":"update(window:Window,x:Int,y:Int)-instance-method","html_id":"update(window:Window,x:Int,y:Int)-instance-method","name":"update","doc":"Update a part of the texture from the contents of a window\n\nNo additional check is performed on the size of the window,\npassing an invalid combination of window size and offset\nwill lead to an undefined behavior.\n\nThis function does nothing if either the texture or the window\nwas not previously created.\n\n* *window* - Window to copy to the texture\n* *x* - X offset in the texture where to copy the source window\n* *y* - Y offset in the texture where to copy the source window","summary":"<p>Update a part of the texture from the contents of a window</p>","abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(window : Window, x : Int, y : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3405","def":{"name":"update","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_update_JRhemSemS(to_unsafe, window, LibC::UInt.new(x), LibC::UInt.new(y))"}},{"id":"update(image:Image,x:Int,y:Int)-instance-method","html_id":"update(image:Image,x:Int,y:Int)-instance-method","name":"update","doc":"Update a part of the texture from an image\n\nNo additional check is performed on the size of the image,\npassing an invalid combination of image size and offset\nwill lead to an undefined behavior.\n\nThis function does nothing if the texture was not\npreviously created.\n\n* *image* - Image to copy to the texture\n* *x* - X offset in the texture where to copy the source image\n* *y* - Y offset in the texture where to copy the source image","summary":"<p>Update a part of the texture from an image</p>","abstract":false,"args":[{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"Image"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(image : Image, x : Int, y : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3372","def":{"name":"update","args":[{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"Image"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_update_dptemSemS(to_unsafe, image, LibC::UInt.new(x), LibC::UInt.new(y))"}},{"id":"update(texture:Texture,x:Int,y:Int)-instance-method","html_id":"update(texture:Texture,x:Int,y:Int)-instance-method","name":"update","doc":"Update a part of this texture from another texture\n\nNo additional check is performed on the size of the texture,\npassing an invalid combination of texture size and offset\nwill lead to an undefined behavior.\n\nThis function does nothing if either texture was not\npreviously created.\n\n* *texture* - Source texture to copy to this texture\n* *x* - X offset in this texture where to copy the source texture\n* *y* - Y offset in this texture where to copy the source texture","summary":"<p>Update a part of this texture from another texture</p>","abstract":false,"args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(texture : Texture, x : Int, y : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3339","def":{"name":"update","args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_update_DJbemSemS(to_unsafe, texture, LibC::UInt.new(x), LibC::UInt.new(y))"}},{"id":"update(pixels:::Pointer(UInt8),width:Int,height:Int,x:Int,y:Int)-instance-method","html_id":"update(pixels:::Pointer(UInt8),width:Int,height:Int,x:Int,y:Int)-instance-method","name":"update","doc":"Update a part of the texture from an array of pixels\n\nThe size of the *pixel* array must match the *width* and\n*height* arguments, and it must contain 32-bits RGBA pixels.\n\nNo additional check is performed on the size of the pixel\narray or the bounds of the area to update, passing invalid\narguments will lead to an undefined behavior.\n\nThis function does nothing if *pixels* is null or if the\ntexture was not previously created.\n\n* *pixels* - Array of pixels to copy to the texture\n* *width* - Width of the pixel region contained in *pixels*\n* *height* - Height of the pixel region contained in *pixels*\n* *x* - X offset in the texture where to copy the source pixels\n* *y* - Y offset in the texture where to copy the source pixels","summary":"<p>Update a part of the texture from an array of pixels</p>","abstract":false,"args":[{"name":"pixels","doc":null,"default_value":"","external_name":"pixels","restriction":"::Pointer(UInt8)"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(pixels : ::Pointer(UInt8), width : Int, height : Int, x : Int, y : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3306","def":{"name":"update","args":[{"name":"pixels","doc":null,"default_value":"","external_name":"pixels","restriction":"::Pointer(UInt8)"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_update_843emSemSemSemS(to_unsafe, pixels, LibC::UInt.new(width), LibC::UInt.new(height), LibC::UInt.new(x), LibC::UInt.new(y))"}},{"id":"update(texture:Texture)-instance-method","html_id":"update(texture:Texture)-instance-method","name":"update","doc":"Update a part of this texture from another texture\n\nAlthough the source texture can be smaller than this texture,\nthis function is usually used for updating the whole texture.\nThe other overload, which has (x, y) additional arguments,\nis more convenient for updating a sub-area of this texture.\n\nNo additional check is performed on the size of the passed\ntexture, passing a texture bigger than this texture\nwill lead to an undefined behavior.\n\nThis function does nothing if either texture was not\npreviously created.\n\n* *texture* - Source texture to copy to this texture","summary":"<p>Update a part of this texture from another texture</p>","abstract":false,"args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"}],"args_string":"(texture : Texture)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3324","def":{"name":"update","args":[{"name":"texture","doc":null,"default_value":"","external_name":"texture","restriction":"Texture"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_texture_update_DJb(to_unsafe, texture)"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/Texture/CoordinateType","path":"SF/Texture/CoordinateType.html","kind":"enum","full_name":"SF::Texture::CoordinateType","name":"CoordinateType","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":3056,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Normalized","name":"Normalized","value":"0","doc":"Texture coordinates in range `0.0 .. 1.0`","summary":"<p>Texture coordinates in range `0.0 ..</p>"},{"id":"Pixels","name":"Pixels","value":"1","doc":"Texture coordinates in range `0.0 .. size`","summary":"<p>Texture coordinates in range `0.0 ..</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/Texture","kind":"class","full_name":"SF::Texture","name":"Texture"},"doc":"Types of texture coordinates that can be used for rendering","summary":"<p>Types of texture coordinates that can be used for rendering</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"normalized?-instance-method","html_id":"normalized?-instance-method","name":"normalized?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3058","def":{"name":"normalized?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Normalized"}},{"id":"pixels?-instance-method","html_id":"pixels?-instance-method","name":"pixels?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L3060","def":{"name":"pixels?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Pixels"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/Thread","path":"SF/Thread.html","kind":"class","full_name":"SF::Thread","name":"Thread","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"system/obj.cr","line_number":843,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Utility class to manipulate threads\n\nThreads provide a way to run multiple parts of the code\nin parallel. When you launch a new thread, the execution\nis split and both the new thread and the caller run\nin parallel.\n\nTo use a `SF::Thread`, you construct it directly with the\nfunction to execute as the entry point of the thread.\n`SF::Thread` has multiple template constructors, which means\nthat you can use several types of entry points:\n* non-member functions with no argument\n* non-member functions with one argument of any type\n* functors with no argument (this one is particularly useful for compatibility with boost/std::%bind)\n* functors with one argument of any type\n* member functions from any class with no argument\n\nThe function argument, if any, is copied in the `SF::Thread`\ninstance, as well as the functor (if the corresponding\nconstructor is used). Class instances, however, are passed\nby pointer so you must make sure that the object won't be\ndestroyed while the thread is still using it.\n\nThe thread ends when its function is terminated. If the\nowner `SF::Thread` instance is destroyed before the\nthread is finished, the destructor will wait (see wait())\n\nUsage examples:\n```c++\n# example 1: non member function with one argument\n\nvoid threadFunc(int argument)\n    ...\nend\n\nthread = SF::Thread.new(&threadFunc, 5)\nthread.launch() # start the thread (internally calls threadFunc(5))\n```\n\n```c++\n# example 2: member function\n\nclass Task\npublic:\n    void run()\n        ...\n    end\nend\n\nTask task\nthread = SF::Thread.new(&Task.run, &task)\nthread.launch() # start the thread (internally calls task.run())\n```\n\n```c++\n# example 3: functor\n\nstruct Task\n    void operator()()\n        ...\n    end\nend\n\nthread = SF::Thread.new(Task())\nthread.launch() # start the thread (internally calls operator() on the Task instance)\n```\n\nCreating parallel threads of execution can be dangerous:\nall threads inside the same process share the same memory space,\nwhich means that you may end up accessing the same variable\nfrom multiple threads at the same time. To prevent this\nkind of situations, you can use mutexes (see `SF::Mutex`).\n\n*See also:* `SF::Mutex`","summary":"<p>Utility class to manipulate threads</p>","class_methods":[],"constructors":[{"id":"new(function:->)-class-method","html_id":"new(function:-&gt;)-class-method","name":"new","doc":"Construct the thread from a functor with an argument\n\nThis constructor works for function objects, as well\nas free functions.\nIt is a template, which means that the argument can\nhave any type (int, std::string, void*, Toto, ...).\n\nUse this constructor for this kind of function:\n```c++\nvoid function(int arg)\n\n# --- or ----\n\nstruct Functor\n    void operator()(std::string arg)\nend\n```\nNote: this does *not* run the thread, use launch().\n\n* *function* - Functor or free function to use as the entry point of the thread\n* *argument* - argument to forward to the function","summary":"<p>Construct the thread from a functor with an argument</p>","abstract":false,"args":[{"name":"function","doc":null,"default_value":"","external_name":"function","restriction":"(-> )"}],"args_string":"(function :  -> )","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L866","def":{"name":"new","args":[{"name":"function","doc":null,"default_value":"","external_name":"function","restriction":"(-> )"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(function)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor\n\nThis destructor calls wait(), so that the internal thread\ncannot survive after its `SF::Thread` instance is destroyed.","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L875","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_thread_finalize(to_unsafe)\nSFMLExt.sfml_thread_free(@this)\n"}},{"id":"launch-instance-method","html_id":"launch-instance-method","name":"launch","doc":"Run the thread\n\nThis function starts the entry point passed to the\nthread's constructor, and returns immediately.\nAfter this function returns, the thread's function is\nrunning in parallel to the calling code.","summary":"<p>Run the thread</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L885","def":{"name":"launch","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_thread_launch(to_unsafe)"}},{"id":"terminate-instance-method","html_id":"terminate-instance-method","name":"terminate","doc":"Terminate the thread\n\nThis function immediately stops the thread, without waiting\nfor its function to finish.\nTerminating a thread with this function is not safe,\nand can lead to local variables not being destroyed\non some operating systems. You should rather try to make\nthe thread function terminate by itself.","summary":"<p>Terminate the thread</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L907","def":{"name":"terminate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_thread_terminate(to_unsafe)"}},{"id":"wait-instance-method","html_id":"wait-instance-method","name":"wait","doc":"Wait until the thread finishes\n\nThis function will block the execution until the\nthread's function ends.\nWarning: if the thread function never ends, the calling\nthread will block forever.\nIf this function is called from its owner thread, it\nreturns without doing anything.","summary":"<p>Wait until the thread finishes</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L896","def":{"name":"wait","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_thread_wait(to_unsafe)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Time","path":"SF/Time.html","kind":"struct","full_name":"SF::Time","name":"Time","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"system/system.cr","line_number":261,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr"},{"filename":"system/obj.cr","line_number":45,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Zero","name":"Zero","value":"new","doc":"Predefined \"zero\" time value","summary":"<p>Predefined \"zero\" time value</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Represents a time value\n\n`SF::Time` encapsulates a time value in a flexible way.\nIt allows to define a time value either as a number of\nseconds, milliseconds or microseconds. It also works the\nother way round: you can read a time value as either\na number of seconds, milliseconds or microseconds.\n\nBy using such a flexible interface, the API doesn't\nimpose any fixed type or resolution for time values,\nand let the user choose its own favorite representation.\n\nTime values support the usual mathematical operations:\nyou can add or subtract two times, multiply or divide\na time by a number, compare two times, etc.\n\nSince they represent a time span and not an absolute time\nvalue, times can also be negative.\n\nUsage example:\n```\nt1 = SF.seconds(0.1)\nmilli = t1.as_milliseconds # 100\n\nt2 = SF.milliseconds(30)\nmicro = t2.as_microseconds # 30000\n\nt3 = SF.microseconds(-800000)\nsec = t3.as_seconds # -0.8\n```\n\n```\ndef update(elapsed : SF::Time)\n  @position += @speed * elapsed.as_seconds\nend\n\nupdate(SF.milliseconds(100))\n```\n\n*See also:* `SF::Clock`","summary":"<p>Represents a time value</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nSets the time value to zero.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L50","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"!=(right:Time):Bool-instance-method","html_id":"!=(right:Time):Bool-instance-method","name":"!=","doc":"Overload of != operator to compare two time values\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a time)\n\n*Returns:* True if both time values are different","summary":"<p>Overload of != operator to compare two time values</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"args_string":"(right : Time) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L98","def":{"name":"!=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_ne_f4Tf4T(to_unsafe, right, out result)\nreturn result\n"}},{"id":"%(right:Time):Time-instance-method","html_id":"%(right:Time):Time-instance-method","name":"%","doc":"Overload of binary % operator to compute remainder of a time value\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a time)\n\n*Returns:* *left* modulo *right*","summary":"<p>Overload of binary % operator to compute remainder of a time value</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"args_string":"(right : Time) : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L234","def":{"name":"%","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_operator_mod_f4Tf4T(to_unsafe, right, result)\nreturn result\n"}},{"id":"*(right:Number):Time-instance-method","html_id":"*(right:Number):Time-instance-method","name":"*","doc":"Overload of binary * operator to scale a time value\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a number)\n\n*Returns:* *left* multiplied by *right*","summary":"<p>Overload of binary * operator to scale a time value</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Number"}],"args_string":"(right : Number) : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L180","def":{"name":"*","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_operator_mul_f4TBw9(to_unsafe, LibC::Float.new(right), result)\nreturn result\n"}},{"id":"*(right:Int):Time-instance-method","html_id":"*(right:Int):Time-instance-method","name":"*","doc":"Overload of binary * operator to scale a time value\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a number)\n\n*Returns:* *left* multiplied by *right*","summary":"<p>Overload of binary * operator to scale a time value</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int"}],"args_string":"(right : Int) : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L191","def":{"name":"*","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_operator_mul_f4TG4x(to_unsafe, Int64.new(right), result)\nreturn result\n"}},{"id":"+(right:Time):Time-instance-method","html_id":"+(right:Time):Time-instance-method","name":"+","doc":"Overload of binary + operator to add two time values\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a time)\n\n*Returns:* Sum of the two times values","summary":"<p>Overload of binary + operator to add two time values</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"args_string":"(right : Time) : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L158","def":{"name":"+","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_operator_add_f4Tf4T(to_unsafe, right, result)\nreturn result\n"}},{"id":"-(right:Time):Time-instance-method","html_id":"-(right:Time):Time-instance-method","name":"-","doc":"Overload of binary - operator to subtract two time values\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a time)\n\n*Returns:* Difference of the two times values","summary":"<p>Overload of binary - operator to subtract two time values</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"args_string":"(right : Time) : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L169","def":{"name":"-","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_operator_sub_f4Tf4T(to_unsafe, right, result)\nreturn result\n"}},{"id":"-:Time-instance-method","html_id":"-:Time-instance-method","name":"-","doc":"Overload of unary - operator to negate a time value\n\n* *right* - Right operand (a time)\n\n*Returns:* Opposite of the time value","summary":"<p>Overload of unary - operator to negate a time value</p>","abstract":false,"args":[],"args_string":" : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L147","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_operator_sub_f4T(to_unsafe, result)\nreturn result\n"}},{"id":"/(right:Number):Time-instance-method","html_id":"/(right:Number):Time-instance-method","name":"/","doc":"Overload of binary / operator to scale a time value\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a number)\n\n*Returns:* *left* divided by *right*","summary":"<p>Overload of binary / operator to scale a time value</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Number"}],"args_string":"(right : Number) : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L202","def":{"name":"/","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_operator_div_f4TBw9(to_unsafe, LibC::Float.new(right), result)\nreturn result\n"}},{"id":"/(right:Int):Time-instance-method","html_id":"/(right:Int):Time-instance-method","name":"/","doc":"Overload of binary / operator to scale a time value\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a number)\n\n*Returns:* *left* divided by *right*","summary":"<p>Overload of binary / operator to scale a time value</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int"}],"args_string":"(right : Int) : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L213","def":{"name":"/","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"result = Time.allocate\nSFMLExt.sfml_operator_div_f4TG4x(to_unsafe, Int64.new(right), result)\nreturn result\n"}},{"id":"/(right:Time):Float32-instance-method","html_id":"/(right:Time):Float32-instance-method","name":"/","doc":"Overload of binary / operator to compute the ratio of two time values\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a time)\n\n*Returns:* *left* divided by *right*","summary":"<p>Overload of binary / operator to compute the ratio of two time values</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"args_string":"(right : Time) : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L224","def":{"name":"/","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_operator_div_f4Tf4T(to_unsafe, right, out result)\nreturn result\n"}},{"id":"<(right:Time):Bool-instance-method","html_id":"&lt;(right:Time):Bool-instance-method","name":"<","doc":"Overload of &lt; operator to compare two time values\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a time)\n\n*Returns:* True if *left* is lesser than *right*","summary":"<p>Overload of &lt; operator to compare two time values</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"args_string":"(right : Time) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L108","def":{"name":"<","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_lt_f4Tf4T(to_unsafe, right, out result)\nreturn result\n"}},{"id":"<=(right:Time):Bool-instance-method","html_id":"&lt;=(right:Time):Bool-instance-method","name":"<=","doc":"Overload of &lt;= operator to compare two time values\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a time)\n\n*Returns:* True if *left* is lesser or equal than *right*","summary":"<p>Overload of &lt;= operator to compare two time values</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"args_string":"(right : Time) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L128","def":{"name":"<=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_le_f4Tf4T(to_unsafe, right, out result)\nreturn result\n"}},{"id":"==(right:Time):Bool-instance-method","html_id":"==(right:Time):Bool-instance-method","name":"==","doc":"Overload of == operator to compare two time values\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a time)\n\n*Returns:* True if both time values are equal","summary":"<p>Overload of == operator to compare two time values</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"args_string":"(right : Time) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L88","def":{"name":"==","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_eq_f4Tf4T(to_unsafe, right, out result)\nreturn result\n"}},{"id":">(right:Time):Bool-instance-method","html_id":"&gt;(right:Time):Bool-instance-method","name":">","doc":"Overload of &gt; operator to compare two time values\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a time)\n\n*Returns:* True if *left* is greater than *right*","summary":"<p>Overload of &gt; operator to compare two time values</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"args_string":"(right : Time) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L118","def":{"name":">","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_gt_f4Tf4T(to_unsafe, right, out result)\nreturn result\n"}},{"id":">=(right:Time):Bool-instance-method","html_id":"&gt;=(right:Time):Bool-instance-method","name":">=","doc":"Overload of &gt;= operator to compare two time values\n\n* *left* - Left operand (a time)\n* *right* - Right operand (a time)\n\n*Returns:* True if *left* is greater or equal than *right*","summary":"<p>Overload of &gt;= operator to compare two time values</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"args_string":"(right : Time) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L138","def":{"name":">=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_ge_f4Tf4T(to_unsafe, right, out result)\nreturn result\n"}},{"id":"as_microseconds:Int64-instance-method","html_id":"as_microseconds:Int64-instance-method","name":"as_microseconds","doc":"Return the time value as a number of microseconds\n\n*Returns:* Time in microseconds\n\n*See also:* `as_seconds`, `as_milliseconds`","summary":"<p>Return the time value as a number of microseconds</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L77","def":{"name":"as_microseconds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"SFMLExt.sfml_time_asmicroseconds(to_unsafe, out result)\nreturn result\n"}},{"id":"as_milliseconds:Int32-instance-method","html_id":"as_milliseconds:Int32-instance-method","name":"as_milliseconds","doc":"Return the time value as a number of milliseconds\n\n*Returns:* Time in milliseconds\n\n*See also:* `as_seconds`, `as_microseconds`","summary":"<p>Return the time value as a number of milliseconds</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L68","def":{"name":"as_milliseconds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_time_asmilliseconds(to_unsafe, out result)\nreturn result\n"}},{"id":"as_seconds:Float32-instance-method","html_id":"as_seconds:Float32-instance-method","name":"as_seconds","doc":"Return the time value as a number of seconds\n\n*Returns:* Time in seconds\n\n*See also:* `as_milliseconds`, `as_microseconds`","summary":"<p>Return the time value as a number of seconds</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L59","def":{"name":"as_seconds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_time_asseconds(to_unsafe, out result)\nreturn result\n"}},{"id":"dup:Time-instance-method","html_id":"dup:Time-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Time","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/obj.cr#L248","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"return Time.new(self)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Touch","path":"SF/Touch.html","kind":"module","full_name":"SF::Touch","name":"Touch","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"window/obj.cr","line_number":1957,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Give access to the real-time state of the touches\n\n`SF::Touch` provides an interface to the state of the\ntouches. It only contains static functions, so it's not\nmeant to be instantiated.\n\nThis module allows users to query the touches state at any\ntime and directly, without having to deal with a window and\nits events. Compared to the TouchBegan, TouchMoved\nand TouchEnded events, `SF::Touch` can retrieve the\nstate of the touches at any time (you don't need to store and\nupdate a boolean on your side in order to know if a touch is down),\nand you always get the real state of the touches, even if they\nhappen when your window is out of focus and no event is triggered.\n\nThe position function can be used to retrieve the current\nposition of a touch. There are two versions: one that operates\nin global coordinates (relative to the desktop) and one that\noperates in window coordinates (relative to a specific window).\n\nTouches are identified by an index (the \"finger\"), so that in\nmulti-touch events, individual touches can be tracked correctly.\nAs long as a finger touches the screen, it will keep the same index\neven if other fingers start or stop touching the screen in the\nmeantime. As a consequence, active touch indices may not always be\nsequential (i.e. touch number 0 may be released while touch number 1\nis still down).\n\nUsage example:\n```\nif SF::Touch.down?(0)\n  # touch 0 is down\nend\n\n# get global position of touch 1\nglobal_pos = SF::Touch.get_position(1)\n\n# get position of touch 1 relative to a window\nrelative_pos = SF::Touch.get_position(1, window)\n```\n\n*See also:* `SF::Joystick`, `SF::Keyboard`, `SF::Mouse`","summary":"<p>Give access to the real-time state of the touches</p>","class_methods":[{"id":"down?(finger:Int):Bool-class-method","html_id":"down?(finger:Int):Bool-class-method","name":"down?","doc":"Check if a touch event is currently down\n\n* *finger* - Finger index\n\n*Returns:* True if *finger* is currently touching the screen, false otherwise","summary":"<p>Check if a touch event is currently down</p>","abstract":false,"args":[{"name":"finger","doc":null,"default_value":"","external_name":"finger","restriction":"Int"}],"args_string":"(finger : Int) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1963","def":{"name":"down?","args":[{"name":"finger","doc":null,"default_value":"","external_name":"finger","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_touch_isdown_emS(LibC::UInt.new(finger), out result)\nreturn result\n"}},{"id":"get_position(finger:Int,relative_to:Window):Vector2i-class-method","html_id":"get_position(finger:Int,relative_to:Window):Vector2i-class-method","name":"get_position","doc":"Get the current position of a touch in window coordinates\n\nThis function returns the current touch position\nrelative to the given window.\n\n* *finger* - Finger index\n* *relative_to* - Reference window\n\n*Returns:* Current position of *finger,* or undefined if it's not down","summary":"<p>Get the current position of a touch in window coordinates</p>","abstract":false,"args":[{"name":"finger","doc":null,"default_value":"","external_name":"finger","restriction":"Int"},{"name":"relative_to","doc":null,"default_value":"","external_name":"relative_to","restriction":"Window"}],"args_string":"(finger : Int, relative_to : Window) : Vector2i","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1989","def":{"name":"get_position","args":[{"name":"finger","doc":null,"default_value":"","external_name":"finger","restriction":"Int"},{"name":"relative_to","doc":null,"default_value":"","external_name":"relative_to","restriction":"Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2i","visibility":"Public","body":"result = Vector2i.allocate\nSFMLExt.sfml_touch_getposition_emSJRh(LibC::UInt.new(finger), relative_to, result)\nreturn result\n"}},{"id":"get_position(finger:Int):Vector2i-class-method","html_id":"get_position(finger:Int):Vector2i-class-method","name":"get_position","doc":"Get the current position of a touch in desktop coordinates\n\nThis function returns the current touch position\nin global (desktop) coordinates.\n\n* *finger* - Finger index\n\n*Returns:* Current position of *finger,* or undefined if it's not down","summary":"<p>Get the current position of a touch in desktop coordinates</p>","abstract":false,"args":[{"name":"finger","doc":null,"default_value":"","external_name":"finger","restriction":"Int"}],"args_string":"(finger : Int) : Vector2i","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L1975","def":{"name":"get_position","args":[{"name":"finger","doc":null,"default_value":"","external_name":"finger","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2i","visibility":"Public","body":"result = Vector2i.allocate\nSFMLExt.sfml_touch_getposition_emS(LibC::UInt.new(finger), result)\nreturn result\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Transform","path":"SF/Transform.html","kind":"struct","full_name":"SF::Transform","name":"Transform","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":265,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"},{"filename":"graphics/graphics.cr","line_number":242,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Identity","name":"Identity","value":"new","doc":"The identity transform (does nothing)","summary":"<p>The identity transform (does nothing)</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Define a 3x3 transform matrix\n\nA `SF::Transform` specifies how to translate, rotate, scale,\nshear, project, whatever things. In mathematical terms, it defines\nhow to transform a coordinate system into another.\n\nFor example, if you apply a rotation transform to a sprite, the\nresult will be a rotated sprite. And anything that is transformed\nby this rotation transform will be rotated the same way, according\nto its initial position.\n\nTransforms are typically used for drawing. But they can also be\nused for any computation that requires to transform points between\nthe local and global coordinate systems of an entity (like collision\ndetection).\n\nExample:\n```\n# define a translation transform\ntranslation = SF::Transform.new\ntranslation.translate(20, 50)\n\n# define a rotation transform\nrotation = SF::Transform.new\nrotation.rotate(45)\n\n# combine them\ntransform = translation * rotation\n\n# use the result to transform stuff...\npoint = transform.transform_point(10, 20)\nrect = transform.transform_rect(SF.float_rect(0, 0, 10, 100))\n```\n\n*See also:* `SF::Transformable`, `SF::RenderStates`","summary":"<p>Define a 3x3 transform matrix</p>","class_methods":[],"constructors":[{"id":"new(a00:Number,a01:Number,a02:Number,a10:Number,a11:Number,a12:Number,a20:Number,a21:Number,a22:Number)-class-method","html_id":"new(a00:Number,a01:Number,a02:Number,a10:Number,a11:Number,a12:Number,a20:Number,a21:Number,a22:Number)-class-method","name":"new","doc":"Construct a transform from a 3x3 matrix\n\n* *a00* - Element (0, 0) of the matrix\n* *a01* - Element (0, 1) of the matrix\n* *a02* - Element (0, 2) of the matrix\n* *a10* - Element (1, 0) of the matrix\n* *a11* - Element (1, 1) of the matrix\n* *a12* - Element (1, 2) of the matrix\n* *a20* - Element (2, 0) of the matrix\n* *a21* - Element (2, 1) of the matrix\n* *a22* - Element (2, 2) of the matrix","summary":"<p>Construct a transform from a 3x3 matrix</p>","abstract":false,"args":[{"name":"a00","doc":null,"default_value":"","external_name":"a00","restriction":"Number"},{"name":"a01","doc":null,"default_value":"","external_name":"a01","restriction":"Number"},{"name":"a02","doc":null,"default_value":"","external_name":"a02","restriction":"Number"},{"name":"a10","doc":null,"default_value":"","external_name":"a10","restriction":"Number"},{"name":"a11","doc":null,"default_value":"","external_name":"a11","restriction":"Number"},{"name":"a12","doc":null,"default_value":"","external_name":"a12","restriction":"Number"},{"name":"a20","doc":null,"default_value":"","external_name":"a20","restriction":"Number"},{"name":"a21","doc":null,"default_value":"","external_name":"a21","restriction":"Number"},{"name":"a22","doc":null,"default_value":"","external_name":"a22","restriction":"Number"}],"args_string":"(a00 : Number, a01 : Number, a02 : Number, a10 : Number, a11 : Number, a12 : Number, a20 : Number, a21 : Number, a22 : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L285","def":{"name":"new","args":[{"name":"a00","doc":null,"default_value":"","external_name":"a00","restriction":"Number"},{"name":"a01","doc":null,"default_value":"","external_name":"a01","restriction":"Number"},{"name":"a02","doc":null,"default_value":"","external_name":"a02","restriction":"Number"},{"name":"a10","doc":null,"default_value":"","external_name":"a10","restriction":"Number"},{"name":"a11","doc":null,"default_value":"","external_name":"a11","restriction":"Number"},{"name":"a12","doc":null,"default_value":"","external_name":"a12","restriction":"Number"},{"name":"a20","doc":null,"default_value":"","external_name":"a20","restriction":"Number"},{"name":"a21","doc":null,"default_value":"","external_name":"a21","restriction":"Number"},{"name":"a22","doc":null,"default_value":"","external_name":"a22","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(a00, a01, a02, a10, a11, a12, a20, a21, a22)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nCreates an identity transform (a transform that does nothing).","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L270","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"!=(right:Transform):Bool-instance-method","html_id":"!=(right:Transform):Bool-instance-method","name":"!=","doc":"Overload of binary operator != to compare two transforms\n\nThis call is equivalent to !(left == right).\n\n* *left* - Left operand (the first transform)\n* *right* - Right operand (the second transform)\n\n*Returns:* true if the transforms are not equal, false otherwise","summary":"<p>Overload of binary operator != to compare two transforms</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Transform"}],"args_string":"(right : Transform) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L622","def":{"name":"!=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Transform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_ne_FPeFPe(to_unsafe, right, out result)\nreturn result\n"}},{"id":"*(right:Vector2|Tuple):Vector2f-instance-method","html_id":"*(right:Vector2|Tuple):Vector2f-instance-method","name":"*","doc":"Overload of binary operator * to transform a point\n\nThis call is equivalent to calling left.transform_point(right).\n\n* *left* - Left operand (the transform)\n* *right* - Right operand (the point to transform)\n\n*Returns:* New transformed point","summary":"<p>Overload of binary operator * to transform a point</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Vector2 | Tuple"}],"args_string":"(right : Vector2 | Tuple) : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L595","def":{"name":"*","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\nright = Vector2f.new(right[0].to_f32, right[1].to_f32)\nSFMLExt.sfml_operator_mul_FPeUU2(to_unsafe, right, result)\nreturn result\n"}},{"id":"*(right:Transform):Transform-instance-method","html_id":"*(right:Transform):Transform-instance-method","name":"*","doc":"Overload of binary operator * to combine two transforms\n\nThis call is equivalent to calling Transform(left).combine(right).\n\n* *left* - Left operand (the first transform)\n* *right* - Right operand (the second transform)\n\n*Returns:* New combined transform","summary":"<p>Overload of binary operator * to combine two transforms</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Transform"}],"args_string":"(right : Transform) : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L582","def":{"name":"*","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Transform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nSFMLExt.sfml_operator_mul_FPeFPe(to_unsafe, right, result)\nreturn result\n"}},{"id":"==(right:Transform):Bool-instance-method","html_id":"==(right:Transform):Bool-instance-method","name":"==","doc":"Overload of binary operator == to compare two transforms\n\nPerforms an element-wise comparison of the elements of the\nleft transform with the elements of the right transform.\n\n* *left* - Left operand (the first transform)\n* *right* - Right operand (the second transform)\n\n*Returns:* true if the transforms are equal, false otherwise","summary":"<p>Overload of binary operator == to compare two transforms</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Transform"}],"args_string":"(right : Transform) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L610","def":{"name":"==","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"Transform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_eq_FPeFPe(to_unsafe, right, out result)\nreturn result\n"}},{"id":"combine(transform:Transform):Transform-instance-method","html_id":"combine(transform:Transform):Transform-instance-method","name":"combine","doc":"Combine the current transform with another one\n\nThe result is a transform that is equivalent to applying\n*this followed by *transform.* Mathematically, it is\nequivalent to a matrix multiplication.\n\n* *transform* - Transform to combine with this transform\n\n*Returns:* Reference to *this","summary":"<p>Combine the current transform with another one</p>","abstract":false,"args":[{"name":"transform","doc":null,"default_value":"","external_name":"transform","restriction":"Transform"}],"args_string":"(transform : Transform) : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L363","def":{"name":"combine","args":[{"name":"transform","doc":null,"default_value":"","external_name":"transform","restriction":"Transform"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nSFMLExt.sfml_transform_combine_FPe(to_unsafe, transform, result)\nreturn result\n"}},{"id":"dup:Transform-instance-method","html_id":"dup:Transform-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L635","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"return Transform.new(self)"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/graphics.cr#L246","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(io << ({{ @type.name }})) << \"(\"\n{% for index, i in [0, 4, 12, 1, 5, 13, 3, 7, 15] %}\n        {% if i > 0 %}\n          io << \",{% if (i % 3) == 0 %} {% end %}\"\n        {% end %}\n        io << @matrix[{{ index }}]\n      {% end %}\nio << \")\"\n"}},{"id":"inverse:Transform-instance-method","html_id":"inverse:Transform-instance-method","name":"inverse","doc":"Return the inverse of the transform\n\nIf the inverse cannot be computed, an identity transform\nis returned.\n\n*Returns:* A new transform which is the inverse of self","summary":"<p>Return the inverse of the transform</p>","abstract":false,"args":[],"args_string":" : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L311","def":{"name":"inverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nSFMLExt.sfml_transform_getinverse(to_unsafe, result)\nreturn result\n"}},{"id":"matrix:::Pointer(Float32)-instance-method","html_id":"matrix:::Pointer(Float32)-instance-method","name":"matrix","doc":"Return the transform as a 4x4 matrix\n\nThis function returns a pointer to an array of 16 floats\ncontaining the transform elements as a 4x4 matrix, which\nis directly compatible with OpenGL functions.\n\n```\ntransform = ...\nglLoadMatrixf(transform.matrix())\n```\n\n*Returns:* Pointer to a 4x4 matrix","summary":"<p>Return the transform as a 4x4 matrix</p>","abstract":false,"args":[],"args_string":" : ::Pointer(Float32)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L301","def":{"name":"matrix","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(Float32)","visibility":"Public","body":"SFMLExt.sfml_transform_getmatrix(to_unsafe, out result)\nreturn result\n"}},{"id":"rotate(angle:Number,center:Vector2|Tuple):Transform-instance-method","html_id":"rotate(angle:Number,center:Vector2|Tuple):Transform-instance-method","name":"rotate","doc":"Combine the current transform with a rotation\n\nThe center of rotation is provided for convenience as a second\nargument, so that you can build rotations around arbitrary points\nmore easily (and efficiently) than the usual\ntranslate(-center).rotate(angle).translate(center).\n\nThis function returns a reference to *this, so that calls\ncan be chained.\n```\ntransform = SF::Transform.new\ntransform.rotate(90, SF.vector2f(8, 3)).translate(SF.vector2f(50, 20))\n```\n\n* *angle* - Rotation angle, in degrees\n* *center* - Center of rotation\n\n*Returns:* Reference to *this\n\n*See also:* `translate`, `scale`","summary":"<p>Combine the current transform with a rotation</p>","abstract":false,"args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"},{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":"Vector2 | Tuple"}],"args_string":"(angle : Number, center : Vector2 | Tuple) : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L473","def":{"name":"rotate","args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"},{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\ncenter = Vector2f.new(center[0].to_f32, center[1].to_f32)\nSFMLExt.sfml_transform_rotate_Bw9UU2(to_unsafe, LibC::Float.new(angle), center, result)\nreturn result\n"}},{"id":"rotate(angle:Number,center_x:Number,center_y:Number):Transform-instance-method","html_id":"rotate(angle:Number,center_x:Number,center_y:Number):Transform-instance-method","name":"rotate","doc":"Combine the current transform with a rotation\n\nThe center of rotation is provided for convenience as a second\nargument, so that you can build rotations around arbitrary points\nmore easily (and efficiently) than the usual\ntranslate(-center).rotate(angle).translate(center).\n\nThis function returns a reference to *this, so that calls\ncan be chained.\n```\ntransform = SF::Transform.new\ntransform.rotate(90, 8, 3).translate(50, 20)\n```\n\n* *angle* - Rotation angle, in degrees\n* *center_x* - X coordinate of the center of rotation\n* *center_y* - Y coordinate of the center of rotation\n\n*Returns:* Reference to *this\n\n*See also:* `translate`, `scale`","summary":"<p>Combine the current transform with a rotation</p>","abstract":false,"args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"},{"name":"center_x","doc":null,"default_value":"","external_name":"center_x","restriction":"Number"},{"name":"center_y","doc":null,"default_value":"","external_name":"center_y","restriction":"Number"}],"args_string":"(angle : Number, center_x : Number, center_y : Number) : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L448","def":{"name":"rotate","args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"},{"name":"center_x","doc":null,"default_value":"","external_name":"center_x","restriction":"Number"},{"name":"center_y","doc":null,"default_value":"","external_name":"center_y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nSFMLExt.sfml_transform_rotate_Bw9Bw9Bw9(to_unsafe, LibC::Float.new(angle), LibC::Float.new(center_x), LibC::Float.new(center_y), result)\nreturn result\n"}},{"id":"rotate(angle:Number):Transform-instance-method","html_id":"rotate(angle:Number):Transform-instance-method","name":"rotate","doc":"Combine the current transform with a rotation\n\nThis function returns a reference to *this, so that calls\ncan be chained.\n```\ntransform = SF::Transform.new\ntransform.rotate(90).translate(50, 20)\n```\n\n* *angle* - Rotation angle, in degrees\n\n*Returns:* Reference to *this\n\n*See also:* `translate`, `scale`","summary":"<p>Combine the current transform with a rotation</p>","abstract":false,"args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"}],"args_string":"(angle : Number) : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L422","def":{"name":"rotate","args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nSFMLExt.sfml_transform_rotate_Bw9(to_unsafe, LibC::Float.new(angle), result)\nreturn result\n"}},{"id":"scale(scale_x:Number,scale_y:Number,center_x:Number,center_y:Number):Transform-instance-method","html_id":"scale(scale_x:Number,scale_y:Number,center_x:Number,center_y:Number):Transform-instance-method","name":"scale","doc":"Combine the current transform with a scaling\n\nThe center of scaling is provided for convenience as a second\nargument, so that you can build scaling around arbitrary points\nmore easily (and efficiently) than the usual\ntranslate(-center).scale(factors).translate(center).\n\nThis function returns a reference to *this, so that calls\ncan be chained.\n```\ntransform = SF::Transform.new\ntransform.scale(2, 1, 8, 3).rotate(45)\n```\n\n* *scale_x* - Scaling factor on X axis\n* *scale_y* - Scaling factor on Y axis\n* *center_x* - X coordinate of the center of scaling\n* *center_y* - Y coordinate of the center of scaling\n\n*Returns:* Reference to *this\n\n*See also:* `translate`, `rotate`","summary":"<p>Combine the current transform with a scaling</p>","abstract":false,"args":[{"name":"scale_x","doc":null,"default_value":"","external_name":"scale_x","restriction":"Number"},{"name":"scale_y","doc":null,"default_value":"","external_name":"scale_y","restriction":"Number"},{"name":"center_x","doc":null,"default_value":"","external_name":"center_x","restriction":"Number"},{"name":"center_y","doc":null,"default_value":"","external_name":"center_y","restriction":"Number"}],"args_string":"(scale_x : Number, scale_y : Number, center_x : Number, center_y : Number) : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L521","def":{"name":"scale","args":[{"name":"scale_x","doc":null,"default_value":"","external_name":"scale_x","restriction":"Number"},{"name":"scale_y","doc":null,"default_value":"","external_name":"scale_y","restriction":"Number"},{"name":"center_x","doc":null,"default_value":"","external_name":"center_x","restriction":"Number"},{"name":"center_y","doc":null,"default_value":"","external_name":"center_y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nSFMLExt.sfml_transform_scale_Bw9Bw9Bw9Bw9(to_unsafe, LibC::Float.new(scale_x), LibC::Float.new(scale_y), LibC::Float.new(center_x), LibC::Float.new(center_y), result)\nreturn result\n"}},{"id":"scale(scale_x:Number,scale_y:Number):Transform-instance-method","html_id":"scale(scale_x:Number,scale_y:Number):Transform-instance-method","name":"scale","doc":"Combine the current transform with a scaling\n\nThis function returns a reference to *this, so that calls\ncan be chained.\n```\ntransform = SF::Transform.new\ntransform.scale(2, 1).rotate(45)\n```\n\n* *scale_x* - Scaling factor on the X axis\n* *scale_y* - Scaling factor on the Y axis\n\n*Returns:* Reference to *this\n\n*See also:* `translate`, `rotate`","summary":"<p>Combine the current transform with a scaling</p>","abstract":false,"args":[{"name":"scale_x","doc":null,"default_value":"","external_name":"scale_x","restriction":"Number"},{"name":"scale_y","doc":null,"default_value":"","external_name":"scale_y","restriction":"Number"}],"args_string":"(scale_x : Number, scale_y : Number) : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L494","def":{"name":"scale","args":[{"name":"scale_x","doc":null,"default_value":"","external_name":"scale_x","restriction":"Number"},{"name":"scale_y","doc":null,"default_value":"","external_name":"scale_y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nSFMLExt.sfml_transform_scale_Bw9Bw9(to_unsafe, LibC::Float.new(scale_x), LibC::Float.new(scale_y), result)\nreturn result\n"}},{"id":"scale(factors:Vector2|Tuple,center:Vector2|Tuple):Transform-instance-method","html_id":"scale(factors:Vector2|Tuple,center:Vector2|Tuple):Transform-instance-method","name":"scale","doc":"Combine the current transform with a scaling\n\nThe center of scaling is provided for convenience as a second\nargument, so that you can build scaling around arbitrary points\nmore easily (and efficiently) than the usual\ntranslate(-center).scale(factors).translate(center).\n\nThis function returns a reference to *this, so that calls\ncan be chained.\n```\ntransform = SF::Transform.new\ntransform.scale(SF.vector2f(2, 1), SF.vector2f(8, 3)).rotate(45)\n```\n\n* *factors* - Scaling factors\n* *center* - Center of scaling\n\n*Returns:* Reference to *this\n\n*See also:* `translate`, `rotate`","summary":"<p>Combine the current transform with a scaling</p>","abstract":false,"args":[{"name":"factors","doc":null,"default_value":"","external_name":"factors","restriction":"Vector2 | Tuple"},{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":"Vector2 | Tuple"}],"args_string":"(factors : Vector2 | Tuple, center : Vector2 | Tuple) : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L566","def":{"name":"scale","args":[{"name":"factors","doc":null,"default_value":"","external_name":"factors","restriction":"Vector2 | Tuple"},{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nfactors = Vector2f.new(factors[0].to_f32, factors[1].to_f32)\ncenter = Vector2f.new(center[0].to_f32, center[1].to_f32)\nSFMLExt.sfml_transform_scale_UU2UU2(to_unsafe, factors, center, result)\nreturn result\n"}},{"id":"scale(factors:Vector2|Tuple):Transform-instance-method","html_id":"scale(factors:Vector2|Tuple):Transform-instance-method","name":"scale","doc":"Combine the current transform with a scaling\n\nThis function returns a reference to *this, so that calls\ncan be chained.\n```\ntransform = SF::Transform.new\ntransform.scale(SF.vector2f(2, 1)).rotate(45)\n```\n\n* *factors* - Scaling factors\n\n*Returns:* Reference to *this\n\n*See also:* `translate`, `rotate`","summary":"<p>Combine the current transform with a scaling</p>","abstract":false,"args":[{"name":"factors","doc":null,"default_value":"","external_name":"factors","restriction":"Vector2 | Tuple"}],"args_string":"(factors : Vector2 | Tuple) : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L540","def":{"name":"scale","args":[{"name":"factors","doc":null,"default_value":"","external_name":"factors","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nfactors = Vector2f.new(factors[0].to_f32, factors[1].to_f32)\nSFMLExt.sfml_transform_scale_UU2(to_unsafe, factors, result)\nreturn result\n"}},{"id":"transform_point(point:Vector2|Tuple):Vector2f-instance-method","html_id":"transform_point(point:Vector2|Tuple):Vector2f-instance-method","name":"transform_point","doc":"Transform a 2D point\n\n* *point* - Point to transform\n\n*Returns:* Transformed point","summary":"<p>Transform a 2D point</p>","abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"}],"args_string":"(point : Vector2 | Tuple) : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L332","def":{"name":"transform_point","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\npoint = Vector2f.new(point[0].to_f32, point[1].to_f32)\nSFMLExt.sfml_transform_transformpoint_UU2(to_unsafe, point, result)\nreturn result\n"}},{"id":"transform_point(x:Number,y:Number):Vector2f-instance-method","html_id":"transform_point(x:Number,y:Number):Vector2f-instance-method","name":"transform_point","doc":"Transform a 2D point\n\n* *x* - X coordinate of the point to transform\n* *y* - Y coordinate of the point to transform\n\n*Returns:* Transformed point","summary":"<p>Transform a 2D point</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"args_string":"(x : Number, y : Number) : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L322","def":{"name":"transform_point","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\nSFMLExt.sfml_transform_transformpoint_Bw9Bw9(to_unsafe, LibC::Float.new(x), LibC::Float.new(y), result)\nreturn result\n"}},{"id":"transform_rect(rectangle:FloatRect):FloatRect-instance-method","html_id":"transform_rect(rectangle:FloatRect):FloatRect-instance-method","name":"transform_rect","doc":"Transform a rectangle\n\nSince SFML doesn't provide support for oriented rectangles,\nthe result of this function is always an axis-aligned\nrectangle. Which means that if the transform contains a\nrotation, the bounding rectangle of the transformed rectangle\nis returned.\n\n* *rectangle* - Rectangle to transform\n\n*Returns:* Transformed rectangle","summary":"<p>Transform a rectangle</p>","abstract":false,"args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"FloatRect"}],"args_string":"(rectangle : FloatRect) : FloatRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L349","def":{"name":"transform_rect","args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"FloatRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FloatRect","visibility":"Public","body":"result = FloatRect.allocate\nSFMLExt.sfml_transform_transformrect_WPZ(to_unsafe, rectangle, result)\nreturn result\n"}},{"id":"translate(offset:Vector2|Tuple):Transform-instance-method","html_id":"translate(offset:Vector2|Tuple):Transform-instance-method","name":"translate","doc":"Combine the current transform with a translation\n\nThis function returns a reference to *this, so that calls\ncan be chained.\n```\ntransform = SF::Transform.new\ntransform.translate(SF.vector2f(100, 200)).rotate(45)\n```\n\n* *offset* - Translation offset to apply\n\n*Returns:* Reference to *this\n\n*See also:* `rotate`, `scale`","summary":"<p>Combine the current transform with a translation</p>","abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Vector2 | Tuple"}],"args_string":"(offset : Vector2 | Tuple) : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L402","def":{"name":"translate","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\noffset = Vector2f.new(offset[0].to_f32, offset[1].to_f32)\nSFMLExt.sfml_transform_translate_UU2(to_unsafe, offset, result)\nreturn result\n"}},{"id":"translate(x:Number,y:Number):Transform-instance-method","html_id":"translate(x:Number,y:Number):Transform-instance-method","name":"translate","doc":"Combine the current transform with a translation\n\nThis function returns a reference to *this, so that calls\ncan be chained.\n```\ntransform = SF::Transform.new\ntransform.translate(100, 200).rotate(45)\n```\n\n* *x* - Offset to apply on X axis\n* *y* - Offset to apply on Y axis\n\n*Returns:* Reference to *this\n\n*See also:* `rotate`, `scale`","summary":"<p>Combine the current transform with a translation</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"args_string":"(x : Number, y : Number) : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L383","def":{"name":"translate","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nSFMLExt.sfml_transform_translate_Bw9Bw9(to_unsafe, LibC::Float.new(x), LibC::Float.new(y), result)\nreturn result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Transformable","path":"SF/Transformable.html","kind":"class","full_name":"SF::Transformable","name":"Transformable","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":931,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/Shape","kind":"class","full_name":"SF::Shape","name":"Shape"},{"html_id":"github.com/oprypin/crsfml/SF/Sprite","kind":"class","full_name":"SF::Sprite","name":"Sprite"},{"html_id":"github.com/oprypin/crsfml/SF/Text","kind":"class","full_name":"SF::Text","name":"Text"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Decomposed transform defined by a position, a rotation and a scale\n\nThis class is provided for convenience, on top of `SF::Transform`.\n\n`SF::Transform`, as a low-level class, offers a great level of\nflexibility but it is not always convenient to manage. Indeed,\none can easily combine any kind of operation, such as a translation\nfollowed by a rotation followed by a scaling, but once the result\ntransform is built, there's no way to go backward and, let's say,\nchange only the rotation without modifying the translation and scaling.\nThe entire transform must be recomputed, which means that you\nneed to retrieve the initial translation and scale factors as\nwell, and combine them the same way you did before updating the\nrotation. This is a tedious operation, and it requires to store\nall the individual components of the final transform.\n\nThat's exactly what `SF::Transformable` was written for: it hides\nthese variables and the composed transform behind an easy to use\ninterface. You can set or get any of the individual components\nwithout worrying about the others. It also provides the composed\ntransform (as a `SF::Transform`), and keeps it up-to-date.\n\nIn addition to the position, rotation and scale, `SF::Transformable`\nprovides an \"origin\" component, which represents the local origin\nof the three other components. Let's take an example with a 10x10\npixels sprite. By default, the sprite is positioned/rotated/scaled\nrelatively to its top-left corner, because it is the local point\n(0, 0). But if we change the origin to be (5, 5), the sprite will\nbe positioned/rotated/scaled around its center instead. And if\nwe set the origin to (10, 10), it will be transformed around its\nbottom-right corner.\n\nTo keep the `SF::Transformable` class simple, there's only one\norigin for all the components. You cannot position the sprite\nrelatively to its top-left corner while rotating it around its\ncenter, for example. To do such things, use `SF::Transform` directly.\n\n`SF::Transformable` can be used as a base class. It is often\ncombined with `SF::Drawable` -- that's what SFML's sprites,\ntexts and shapes do.\n```\nclass MyEntity < SF::Transformable\n  include SF::Drawable\n\n  def draw(target, states)\n    states.transform *= self.transform\n    target.draw(..., states)\n  end\nend\n\nentity = MyEntity.new\nentity.position = {10, 20}\nentity.rotation = 45\nwindow.draw entity\n```\n\nIt can also be used as a member, if you don't want to use\nits API directly (because you don't need all its functions,\nor you have different naming conventions for example).\n```\nclass MyEntity\n  @transform : SF::Transformable\n  forward_missing_to @transform\nend\n```\n\nA note on coordinates and undistorted rendering:\nBy default, SFML (or more exactly, OpenGL) may interpolate drawable objects\nsuch as sprites or texts when rendering. While this allows transitions\nlike slow movements or rotations to appear smoothly, it can lead to\nunwanted results in some cases, for example blurred or distorted objects.\nIn order to render a `SF::Drawable` object pixel-perfectly, make sure\nthe involved coordinates allow a 1:1 mapping of pixels in the window\nto texels (pixels in the texture). More specifically, this means:\n* The object's position, origin and scale have no fractional part\n* The object's and the view's rotation are a multiple of 90 degrees\n* The view's center and size have no fractional part\n\n*See also:* `SF::Transform`","summary":"<p>Decomposed transform defined by a position, a rotation and a scale</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L934","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dup:Transformable-instance-method","html_id":"dup:Transformable-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Transformable","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1193","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transformable","visibility":"Public","body":"return Transformable.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Virtual destructor","summary":"<p>Virtual destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L939","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_transformable_finalize(to_unsafe)\nSFMLExt.sfml_transformable_free(@this)\n"}},{"id":"inverse_transform:Transform-instance-method","html_id":"inverse_transform:Transform-instance-method","name":"inverse_transform","doc":"get the inverse of the combined transform of the object\n\n*Returns:* Inverse of the combined transformations applied to the object\n\n*See also:* `transform`","summary":"<p>get the inverse of the combined transform of the object</p>","abstract":false,"args":[],"args_string":" : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1175","def":{"name":"inverse_transform","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nSFMLExt.sfml_transformable_getinversetransform(to_unsafe, result)\nreturn result\n"}},{"id":"move(offset:Vector2|Tuple)-instance-method","html_id":"move(offset:Vector2|Tuple)-instance-method","name":"move","doc":"Move the object by a given offset\n\nThis function adds to the current position of the object,\nunlike position= which overwrites it.\nThus, it is equivalent to the following code:\n```\nobject.position += offset\n```\n\n* *offset* - Offset\n\n*See also:* `position=`","summary":"<p>Move the object by a given offset</p>","abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Vector2 | Tuple"}],"args_string":"(offset : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1109","def":{"name":"move","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"offset = Vector2f.new(offset[0].to_f32, offset[1].to_f32)\nSFMLExt.sfml_transformable_move_UU2(to_unsafe, offset)\n"}},{"id":"move(offset_x:Number,offset_y:Number)-instance-method","html_id":"move(offset_x:Number,offset_y:Number)-instance-method","name":"move","doc":"Move the object by a given offset\n\nThis function adds to the current position of the object,\nunlike position= which overwrites it.\nThus, it is equivalent to the following code:\n```\npos = object.position\nobject.set_position(pos.x + offset_x, pos.y + offset_y)\n```\n\n* *offset_x* - X offset\n* *offset_y* - Y offset\n\n*See also:* `position=`","summary":"<p>Move the object by a given offset</p>","abstract":false,"args":[{"name":"offset_x","doc":null,"default_value":"","external_name":"offset_x","restriction":"Number"},{"name":"offset_y","doc":null,"default_value":"","external_name":"offset_y","restriction":"Number"}],"args_string":"(offset_x : Number, offset_y : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1094","def":{"name":"move","args":[{"name":"offset_x","doc":null,"default_value":"","external_name":"offset_x","restriction":"Number"},{"name":"offset_y","doc":null,"default_value":"","external_name":"offset_y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_transformable_move_Bw9Bw9(to_unsafe, LibC::Float.new(offset_x), LibC::Float.new(offset_y))"}},{"id":"origin:Vector2f-instance-method","html_id":"origin:Vector2f-instance-method","name":"origin","doc":"get the local origin of the object\n\n*Returns:* Current origin\n\n*See also:* `origin=`","summary":"<p>get the local origin of the object</p>","abstract":false,"args":[],"args_string":" : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1075","def":{"name":"origin","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\nSFMLExt.sfml_transformable_getorigin(to_unsafe, result)\nreturn result\n"}},{"id":"origin=(origin:Vector2|Tuple)-instance-method","html_id":"origin=(origin:Vector2|Tuple)-instance-method","name":"origin=","doc":"set the local origin of the object\n\nThe origin of an object defines the center point for\nall transformations (position, scale, rotation).\nThe coordinates of this point must be relative to the\ntop-left corner of the object, and ignore all\ntransformations (position, scale, rotation).\nThe default origin of a transformable object is (0, 0).\n\n* *origin* - New origin\n\n*See also:* `origin`","summary":"<p>set the local origin of the object</p>","abstract":false,"args":[{"name":"origin","doc":null,"default_value":"","external_name":"origin","restriction":"Vector2 | Tuple"}],"args_string":"(origin : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1035","def":{"name":"origin=","args":[{"name":"origin","doc":null,"default_value":"","external_name":"origin","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"origin = Vector2f.new(origin[0].to_f32, origin[1].to_f32)\nSFMLExt.sfml_transformable_setorigin_UU2(to_unsafe, origin)\n"}},{"id":"position:Vector2f-instance-method","html_id":"position:Vector2f-instance-method","name":"position","doc":"get the position of the object\n\n*Returns:* Current position\n\n*See also:* `position=`","summary":"<p>get the position of the object</p>","abstract":false,"args":[],"args_string":" : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1044","def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\nSFMLExt.sfml_transformable_getposition(to_unsafe, result)\nreturn result\n"}},{"id":"position=(position:Vector2|Tuple)-instance-method","html_id":"position=(position:Vector2|Tuple)-instance-method","name":"position=","doc":"set the position of the object\n\nThis function completely overwrites the previous position.\nSee the move function to apply an offset based on the previous position instead.\nThe default position of a transformable object is (0, 0).\n\n* *position* - New position\n\n*See also:* `move`, `position`","summary":"<p>set the position of the object</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"}],"args_string":"(position : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L965","def":{"name":"position=","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"position = Vector2f.new(position[0].to_f32, position[1].to_f32)\nSFMLExt.sfml_transformable_setposition_UU2(to_unsafe, position)\n"}},{"id":"rotate(angle:Number)-instance-method","html_id":"rotate(angle:Number)-instance-method","name":"rotate","doc":"Rotate the object\n\nThis function adds to the current rotation of the object,\nunlike rotation= which overwrites it.\nThus, it is equivalent to the following code:\n```\nobject.rotation += angle\n```\n\n* *angle* - Angle of rotation, in degrees","summary":"<p>Rotate the object</p>","abstract":false,"args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"}],"args_string":"(angle : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1123","def":{"name":"rotate","args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_transformable_rotate_Bw9(to_unsafe, LibC::Float.new(angle))"}},{"id":"rotation:Float32-instance-method","html_id":"rotation:Float32-instance-method","name":"rotation","doc":"get the orientation of the object\n\nThe rotation is always in the range `0.0 ... 360.0`\n\n*Returns:* Current rotation, in degrees\n\n*See also:* `rotation=`","summary":"<p>get the orientation of the object</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1056","def":{"name":"rotation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_transformable_getrotation(to_unsafe, out result)\nreturn result\n"}},{"id":"rotation=(angle:Number)-instance-method","html_id":"rotation=(angle:Number)-instance-method","name":"rotation=","doc":"set the orientation of the object\n\nThis function completely overwrites the previous rotation.\nSee the rotate function to add an angle based on the previous rotation instead.\nThe default rotation of a transformable object is 0.\n\n* *angle* - New rotation, in degrees\n\n*See also:* `rotate`, `rotation`","summary":"<p>set the orientation of the object</p>","abstract":false,"args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"}],"args_string":"(angle : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L978","def":{"name":"rotation=","args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_transformable_setrotation_Bw9(to_unsafe, LibC::Float.new(angle))"}},{"id":"scale:Vector2f-instance-method","html_id":"scale:Vector2f-instance-method","name":"scale","doc":"get the current scale of the object\n\n*Returns:* Current scale factors\n\n*See also:* `scale=`","summary":"<p>get the current scale of the object</p>","abstract":false,"args":[],"args_string":" : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1065","def":{"name":"scale","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\nSFMLExt.sfml_transformable_getscale(to_unsafe, result)\nreturn result\n"}},{"id":"scale(factor:Vector2|Tuple)-instance-method","html_id":"scale(factor:Vector2|Tuple)-instance-method","name":"scale","doc":"Scale the object\n\nThis function multiplies the current scale of the object,\nunlike scale= which overwrites it.\nThus, it is equivalent to the following code:\n```\nscale = object.scale\nobject.scale = {scale.x * factor.x, scale.y * factor.y}\n```\n\n* *factor* - Scale factors\n\n*See also:* `scale=`","summary":"<p>Scale the object</p>","abstract":false,"args":[{"name":"factor","doc":null,"default_value":"","external_name":"factor","restriction":"Vector2 | Tuple"}],"args_string":"(factor : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1156","def":{"name":"scale","args":[{"name":"factor","doc":null,"default_value":"","external_name":"factor","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"factor = Vector2f.new(factor[0].to_f32, factor[1].to_f32)\nSFMLExt.sfml_transformable_scale_UU2(to_unsafe, factor)\n"}},{"id":"scale(factor_x:Number,factor_y:Number)-instance-method","html_id":"scale(factor_x:Number,factor_y:Number)-instance-method","name":"scale","doc":"Scale the object\n\nThis function multiplies the current scale of the object,\nunlike scale= which overwrites it.\nThus, it is equivalent to the following code:\n```\nscale = object.scale\nobject.set_scale(scale.x * factor_x, scale.y * factor_y)\n```\n\n* *factor_x* - Horizontal scale factor\n* *factor_y* - Vertical scale factor\n\n*See also:* `scale=`","summary":"<p>Scale the object</p>","abstract":false,"args":[{"name":"factor_x","doc":null,"default_value":"","external_name":"factor_x","restriction":"Number"},{"name":"factor_y","doc":null,"default_value":"","external_name":"factor_y","restriction":"Number"}],"args_string":"(factor_x : Number, factor_y : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1140","def":{"name":"scale","args":[{"name":"factor_x","doc":null,"default_value":"","external_name":"factor_x","restriction":"Number"},{"name":"factor_y","doc":null,"default_value":"","external_name":"factor_y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_transformable_scale_Bw9Bw9(to_unsafe, LibC::Float.new(factor_x), LibC::Float.new(factor_y))"}},{"id":"scale=(factors:Vector2|Tuple)-instance-method","html_id":"scale=(factors:Vector2|Tuple)-instance-method","name":"scale=","doc":"set the scale factors of the object\n\nThis function completely overwrites the previous scale.\nSee the scale function to add a factor based on the previous scale instead.\nThe default scale of a transformable object is (1, 1).\n\n* *factors* - New scale factors\n\n*See also:* `scale`, `scale`","summary":"<p>set the scale factors of the object</p>","abstract":false,"args":[{"name":"factors","doc":null,"default_value":"","external_name":"factors","restriction":"Vector2 | Tuple"}],"args_string":"(factors : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1003","def":{"name":"scale=","args":[{"name":"factors","doc":null,"default_value":"","external_name":"factors","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"factors = Vector2f.new(factors[0].to_f32, factors[1].to_f32)\nSFMLExt.sfml_transformable_setscale_UU2(to_unsafe, factors)\n"}},{"id":"set_origin(x:Number,y:Number)-instance-method","html_id":"set_origin(x:Number,y:Number)-instance-method","name":"set_origin","doc":"set the local origin of the object\n\nThe origin of an object defines the center point for\nall transformations (position, scale, rotation).\nThe coordinates of this point must be relative to the\ntop-left corner of the object, and ignore all\ntransformations (position, scale, rotation).\nThe default origin of a transformable object is (0, 0).\n\n* *x* - X coordinate of the new origin\n* *y* - Y coordinate of the new origin\n\n*See also:* `origin`","summary":"<p>set the local origin of the object</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"args_string":"(x : Number, y : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1020","def":{"name":"set_origin","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_transformable_setorigin_Bw9Bw9(to_unsafe, LibC::Float.new(x), LibC::Float.new(y))"}},{"id":"set_position(x:Number,y:Number)-instance-method","html_id":"set_position(x:Number,y:Number)-instance-method","name":"set_position","doc":"set the position of the object\n\nThis function completely overwrites the previous position.\nSee the move function to apply an offset based on the previous position instead.\nThe default position of a transformable object is (0, 0).\n\n* *x* - X coordinate of the new position\n* *y* - Y coordinate of the new position\n\n*See also:* `move`, `position`","summary":"<p>set the position of the object</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"args_string":"(x : Number, y : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L953","def":{"name":"set_position","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_transformable_setposition_Bw9Bw9(to_unsafe, LibC::Float.new(x), LibC::Float.new(y))"}},{"id":"set_scale(factor_x:Number,factor_y:Number)-instance-method","html_id":"set_scale(factor_x:Number,factor_y:Number)-instance-method","name":"set_scale","doc":"set the scale factors of the object\n\nThis function completely overwrites the previous scale.\nSee the scale function to add a factor based on the previous scale instead.\nThe default scale of a transformable object is (1, 1).\n\n* *factor_x* - New horizontal scale factor\n* *factor_y* - New vertical scale factor\n\n*See also:* `scale`, `scale`","summary":"<p>set the scale factors of the object</p>","abstract":false,"args":[{"name":"factor_x","doc":null,"default_value":"","external_name":"factor_x","restriction":"Number"},{"name":"factor_y","doc":null,"default_value":"","external_name":"factor_y","restriction":"Number"}],"args_string":"(factor_x : Number, factor_y : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L991","def":{"name":"set_scale","args":[{"name":"factor_x","doc":null,"default_value":"","external_name":"factor_x","restriction":"Number"},{"name":"factor_y","doc":null,"default_value":"","external_name":"factor_y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_transformable_setscale_Bw9Bw9(to_unsafe, LibC::Float.new(factor_x), LibC::Float.new(factor_y))"}},{"id":"transform:Transform-instance-method","html_id":"transform:Transform-instance-method","name":"transform","doc":"get the combined transform of the object\n\n*Returns:* Transform combining the position/rotation/scale/origin of the object\n\n*See also:* `inverse_transform`","summary":"<p>get the combined transform of the object</p>","abstract":false,"args":[],"args_string":" : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1165","def":{"name":"transform","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nSFMLExt.sfml_transformable_gettransform(to_unsafe, result)\nreturn result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/UdpSocket","path":"SF/UdpSocket.html","kind":"class","full_name":"SF::UdpSocket","name":"UdpSocket","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/SF/Socket","kind":"class","full_name":"SF::Socket","name":"Socket"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Socket","kind":"class","full_name":"SF::Socket","name":"Socket"},{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"network/obj.cr","line_number":2248,"url":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MaxDatagramSize","name":"MaxDatagramSize","value":"65507","doc":"The maximum number of bytes that can be sent in a single UDP datagram","summary":"<p>The maximum number of bytes that can be sent in a single UDP datagram</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Specialized socket using the UDP protocol\n\nA UDP socket is a connectionless socket. Instead of\nconnecting once to a remote host, like TCP sockets,\nit can send to and receive from any host at any time.\n\nIt is a datagram protocol: bounded blocks of data (datagrams)\nare transfered over the network rather than a continuous\nstream of data (TCP). Therefore, one call to send will always\nmatch one call to receive (if the datagram is not lost),\nwith the same data that was sent.\n\nThe UDP protocol is lightweight but unreliable. Unreliable\nmeans that datagrams may be duplicated, be lost or\narrive reordered. However, if a datagram arrives, its\ndata is guaranteed to be valid.\n\nUDP is generally used for real-time communication\n(audio or video streaming, real-time games, etc.) where\nspeed is crucial and lost data doesn't matter much.\n\nSending and receiving data can use either the low-level\nor the high-level functions. The low-level functions\nprocess a raw sequence of bytes, whereas the high-level\ninterface uses packets (see `SF::Packet`), which are easier\nto use and provide more safety regarding the data that is\nexchanged. You can look at the `SF::Packet` class to get\nmore details about how they work.\n\nIt is important to note that UdpSocket is unable to send\ndatagrams bigger than MaxDatagramSize. In this case, it\nreturns an error and doesn't send anything. This applies\nto both raw data and packets. Indeed, even packets are\nunable to split and recompose data, due to the unreliability\nof the protocol (dropped, mixed or duplicated datagrams may\nlead to a big mess when trying to recompose a packet).\n\nIf the socket is bound to a port, it is automatically\nunbound from it when the socket is destroyed. However,\nyou can unbind the socket explicitly with the Unbind\nfunction if necessary, to stop receiving messages or\nmake the port available for other sockets.\n\nUsage example:\n```\n# ----- The client -----\n\n# Create a socket and bind it to the port 55001\nsocket = SF::UdpSocket.new\nsocket.bind(55001)\n\n# Send a message to 192.168.1.50 on port 55002\nmessage = \"Hi, I am #{SF::IpAddress.local_address}\"\nsocket.send(message.to_slice, \"192.168.1.50\", 55002)\n\n# Receive an answer (most likely from 192.168.1.50, but could be anyone else)\nbuffer = Slice(UInt8).new(1024)\nstatus, received, sender, port = socket.receive(buffer)\nputs \"#{sender} said: #{buffer}\"\n\n# ----- The server -----\n\n# Create a socket and bind it to the port 55002\nsocket = SF::UdpSocket.new\nsocket.bind(55002)\n\n# Receive a message from anyone\nbuffer = Slice(UInt8).new(1024)\nstatus, received, sender, port = socket.receive(buffer)\nputs \"#{sender} said: #{buffer}\"\n\n# Send an answer\nmessage = \"Welcome #{sender}\"\nsocket.send(message.to_slice, sender, port)\n```\n\n*See also:* `SF::Socket`, `SF::TcpSocket`, `SF::Packet`","summary":"<p>Specialized socket using the UDP protocol</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2257","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"bind(port:Int,address:IpAddress=IpAddress::Any):Socket::Status-instance-method","html_id":"bind(port:Int,address:IpAddress=IpAddress::Any):Socket::Status-instance-method","name":"bind","doc":"Bind the socket to a specific port\n\nBinding the socket to a port is necessary for being\nable to receive data on that port.\nYou can use the special value Socket::AnyPort to tell the\nsystem to automatically pick an available port, and then\ncall local_port to retrieve the chosen port.\n\nSince the socket can only be bound to a single port at\nany given moment, if it is already bound when this\nfunction is called, it will be unbound from the previous\nport before being bound to the new one.\n\n* *port* - Port to bind the socket to\n* *address* - Address of the interface to bind to\n\n*Returns:* Status code\n\n*See also:* `unbind`, `local_port`","summary":"<p>Bind the socket to a specific port</p>","abstract":false,"args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int"},{"name":"address","doc":null,"default_value":"IpAddress::Any","external_name":"address","restriction":"IpAddress"}],"args_string":"(port : Int, address : IpAddress = <span class=\"t\">IpAddress</span><span class=\"t\">::</span><span class=\"t\">Any</span>) : Socket::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2292","def":{"name":"bind","args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int"},{"name":"address","doc":null,"default_value":"IpAddress::Any","external_name":"address","restriction":"IpAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Socket::Status","visibility":"Public","body":"SFMLExt.sfml_udpsocket_bind_bxiBfE(to_unsafe, LibC::UShort.new(port), address, out result)\nreturn Socket::Status.new(result)\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2250","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_udpsocket_finalize(to_unsafe)\nSFMLExt.sfml_udpsocket_free(@this)\n"}},{"id":"local_port:UInt16-instance-method","html_id":"local_port:UInt16-instance-method","name":"local_port","doc":"Get the port to which the socket is bound locally\n\nIf the socket is not bound to a port, this function\nreturns 0.\n\n*Returns:* Port to which the socket is bound\n\n*See also:* `bind`","summary":"<p>Get the port to which the socket is bound locally</p>","abstract":false,"args":[],"args_string":" : UInt16","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2269","def":{"name":"local_port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"SFMLExt.sfml_udpsocket_getlocalport(to_unsafe, out result)\nreturn result\n"}},{"id":"receive(data:Slice):::Tuple(Socket::Status,Int32,IpAddress,UInt16)-instance-method","html_id":"receive(data:Slice):::Tuple(Socket::Status,Int32,IpAddress,UInt16)-instance-method","name":"receive","doc":"Receive raw data from a remote peer\n\nIn blocking mode, this function will wait until some\nbytes are actually received.\nBe careful to use a buffer which is large enough for\nthe data that you intend to receive, if it is too small\nthen an error will be returned and *all* the data will\nbe lost.\n\n* *data* - The slice to fill with the received bytes\n\n*Returns:*\n* Status code\n* The actual number of bytes received\n* Address of the peer that sent the data\n* Port of the peer that sent the data\n\n*See also:* `send`","summary":"<p>Receive raw data from a remote peer</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"args_string":"(data : Slice) : ::Tuple(Socket::Status, Int32, IpAddress, UInt16)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2343","def":{"name":"receive","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Tuple(Socket::Status, Int32, IpAddress, UInt16)","visibility":"Public","body":"remote_address = IpAddress.new\nSFMLExt.sfml_udpsocket_receive_xALvgvi499ylYII(to_unsafe, data, data.bytesize, out received, remote_address, out remote_port, out result)\nreturn {Socket::Status.new(result), received.to_i, remote_address, remote_port}\n"}},{"id":"receive(packet:Packet):::Tuple(Socket::Status,IpAddress,UInt16)-instance-method","html_id":"receive(packet:Packet):::Tuple(Socket::Status,IpAddress,UInt16)-instance-method","name":"receive","doc":"Receive a formatted packet of data from a remote peer\n\nIn blocking mode, this function will wait until the whole packet\nhas been received.\n\n* *packet* - Packet to fill with the received data\n\n*Returns:*\n* Status code\n* Address of the peer that sent the data\n* Port of the peer that sent the data\n\n*See also:* `send`","summary":"<p>Receive a formatted packet of data from a remote peer</p>","abstract":false,"args":[{"name":"packet","doc":null,"default_value":"","external_name":"packet","restriction":"Packet"}],"args_string":"(packet : Packet) : ::Tuple(Socket::Status, IpAddress, UInt16)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2378","def":{"name":"receive","args":[{"name":"packet","doc":null,"default_value":"","external_name":"packet","restriction":"Packet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Tuple(Socket::Status, IpAddress, UInt16)","visibility":"Public","body":"remote_address = IpAddress.new\nSFMLExt.sfml_udpsocket_receive_jyF9ylYII(to_unsafe, packet, remote_address, out remote_port, out result)\nreturn {Socket::Status.new(result), remote_address, remote_port}\n"}},{"id":"send(data:Slice,remote_address:IpAddress,remote_port:Int):Socket::Status-instance-method","html_id":"send(data:Slice,remote_address:IpAddress,remote_port:Int):Socket::Status-instance-method","name":"send","doc":"Send raw data to a remote peer\n\nMake sure that *data* size is not greater than\n`UdpSocket::MaxDatagramSize`, otherwise this function will\nfail and no data will be sent.\n\n* *data* - Slice containing the sequence of bytes to send\n* *remote_address* - Address of the receiver\n* *remote_port* - Port of the receiver to send the data to\n\n*Returns:* Status code\n\n*See also:* `receive`","summary":"<p>Send raw data to a remote peer</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"},{"name":"remote_address","doc":null,"default_value":"","external_name":"remote_address","restriction":"IpAddress"},{"name":"remote_port","doc":null,"default_value":"","external_name":"remote_port","restriction":"Int"}],"args_string":"(data : Slice, remote_address : IpAddress, remote_port : Int) : Socket::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2321","def":{"name":"send","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Slice"},{"name":"remote_address","doc":null,"default_value":"","external_name":"remote_address","restriction":"IpAddress"},{"name":"remote_port","doc":null,"default_value":"","external_name":"remote_port","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Socket::Status","visibility":"Public","body":"SFMLExt.sfml_udpsocket_send_5h8vgvBfEbxi(to_unsafe, data, data.bytesize, remote_address, LibC::UShort.new(remote_port), out result)\nreturn Socket::Status.new(result)\n"}},{"id":"send(packet:Packet,remote_address:IpAddress,remote_port:Int):Socket::Status-instance-method","html_id":"send(packet:Packet,remote_address:IpAddress,remote_port:Int):Socket::Status-instance-method","name":"send","doc":"Send a formatted packet of data to a remote peer\n\nMake sure that the packet size is not greater than\nUdpSocket::MaxDatagramSize, otherwise this function will\nfail and no data will be sent.\n\n* *packet* - Packet to send\n* *remote_address* - Address of the receiver\n* *remote_port* - Port of the receiver to send the data to\n\n*Returns:* Status code\n\n*See also:* `receive`","summary":"<p>Send a formatted packet of data to a remote peer</p>","abstract":false,"args":[{"name":"packet","doc":null,"default_value":"","external_name":"packet","restriction":"Packet"},{"name":"remote_address","doc":null,"default_value":"","external_name":"remote_address","restriction":"IpAddress"},{"name":"remote_port","doc":null,"default_value":"","external_name":"remote_port","restriction":"Int"}],"args_string":"(packet : Packet, remote_address : IpAddress, remote_port : Int) : Socket::Status","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2361","def":{"name":"send","args":[{"name":"packet","doc":null,"default_value":"","external_name":"packet","restriction":"Packet"},{"name":"remote_address","doc":null,"default_value":"","external_name":"remote_address","restriction":"IpAddress"},{"name":"remote_port","doc":null,"default_value":"","external_name":"remote_port","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Socket::Status","visibility":"Public","body":"SFMLExt.sfml_udpsocket_send_jyFBfEbxi(to_unsafe, packet, remote_address, LibC::UShort.new(remote_port), out result)\nreturn Socket::Status.new(result)\n"}},{"id":"unbind-instance-method","html_id":"unbind-instance-method","name":"unbind","doc":"Unbind the socket from the local port to which it is bound\n\nThe port that the socket was previously bound to is immediately\nmade available to the operating system after this function is called.\nThis means that a subsequent call to bind() will be able to re-bind\nthe port if no other process has done so in the mean time.\nIf the socket is not bound to a port, this function has no effect.\n\n*See also:* `bind`","summary":"<p>Unbind the socket from the local port to which it is bound</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/network/obj.cr#L2305","def":{"name":"unbind","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_udpsocket_unbind(to_unsafe)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Vector2","path":"SF/Vector2.html","kind":"struct","full_name":"SF::Vector2(T)","name":"Vector2","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"system/system.cr","line_number":37,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Utility generic struct for manipulating 2-dimensional vectors\n\n`SF::Vector2` is a simple struct that defines a mathematical\nvector with two coordinates (x and y). It can be used to\nrepresent anything that has two dimensions: a size, a point,\na velocity, etc.\n\nThe generic parameter T is the type of the coordinates. It\ncan be any type that supports arithmetic operations (+, -, /, *)\nand comparisons (==, !=), for example `Int` or `Float`.\n\nYou generally don't have to care about the generic form,\nthe most common specializations have special aliases:\n* `SF::Vector2(Float32)` is `SF::Vector2f`\n* `SF::Vector2(Int32)` is `SF::Vector2i`\n\nSee also: `SF.vector2f`, `SF.vector2i`.\n\nThe `SF::Vector2` struct has a small and simple interface, its\n`x` and `y` members can be accessed directly and it contains no\nmathematical function like dot product, cross product, length, etc.\n\nUsage example:\n```\nv1 = SF.vector2f(16.5, 24)\nv1.x = 18.2_f32\ny = v1.y\n\nv2 = v1 * 5\nv3 = v1 + v2\n\ndifferent = (v2 != v3)\n```\n\nNote: for 3-dimensional vectors, see `SF::Vector3`.","summary":"<p>Utility generic struct for manipulating 2-dimensional vectors</p>","class_methods":[],"constructors":[{"id":"new(x:T,y:T)-class-method","html_id":"new(x:T,y:T)-class-method","name":"new","doc":"Construct the vector from its coordinates.","summary":"<p>Construct the vector from its coordinates.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"T"}],"args_string":"(x : T, y : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L50","def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Vector2(T).allocate\n_.initialize(x, y)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor: equivalent to `new(0, 0)`","summary":"<p>Default constructor: equivalent to <code><a href=\"../SF/Vector2.html#new(x:T,y:T)-class-method\">.new(0, 0)</a></code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L46","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Vector2(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(n:Number)-instance-method","html_id":"*(n:Number)-instance-method","name":"*","doc":"Memberwise multiplication by a scalar","summary":"<p>Memberwise multiplication by a scalar</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Number"}],"args_string":"(n : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L93","def":{"name":"*","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SF.vector2(x * n, y * n)"}},{"id":"*(other)-instance-method","html_id":"*(other)-instance-method","name":"*","doc":"Memberwise multiplication of two vectors","summary":"<p>Memberwise multiplication of two vectors</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L88","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ox, oy = other\nSF.vector2(x * ox, y * oy)\n"}},{"id":"+(other)-instance-method","html_id":"+(other)-instance-method","name":"+","doc":"Memberwise addition of two vectors","summary":"<p>Memberwise addition of two vectors</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L74","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ox, oy = other\nSF.vector2(x + ox, y + oy)\n"}},{"id":"-(other)-instance-method","html_id":"-(other)-instance-method","name":"-","doc":"Memberwise subtraction of two vectors","summary":"<p>Memberwise subtraction of two vectors</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L79","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ox, oy = other\nSF.vector2(x - ox, y - oy)\n"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":"Memberwise opposite of the vector","summary":"<p>Memberwise opposite of the vector</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L84","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SF.vector2(-x, -y)"}},{"id":"/(n:Number)-instance-method","html_id":"/(n:Number)-instance-method","name":"/","doc":"Memberwise division by a scalar","summary":"<p>Memberwise division by a scalar</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Number"}],"args_string":"(n : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L97","def":{"name":"/","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SF.vector2(x / n, y / n)"}},{"id":"==(other:Vector2)-instance-method","html_id":"==(other:Vector2)-instance-method","name":"==","doc":"Returns true if both corresponding coordinates of two vectors are equal","summary":"<p>Returns true if both corresponding coordinates of two vectors are equal</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector2"}],"args_string":"(other : Vector2)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L101","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ox, oy = other\n(x == ox) && (y == oy)\n"}},{"id":"[](i:Int):T-instance-method","html_id":"[](i:Int):T-instance-method","name":"[]","doc":"Get a coordinate by its index: 0 is `x`, 1 is `y`.\n\nRaises `IndexError` for other indices.","summary":"<p>Get a coordinate by its index: 0 is <code><a href=\"../SF/Vector2.html#x:T-instance-method\">#x</a></code>, 1 is <code><a href=\"../SF/Vector2.html#y:T-instance-method\">#y</a></code>.</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"}],"args_string":"(i : Int) : T","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L65","def":{"name":"[]","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"case i\nwhen 0\n  @x\nwhen 1\n  @y\nelse\n  raise(IndexError.new)\nend"}},{"id":"each(&)-instance-method","html_id":"each(&amp;)-instance-method","name":"each","doc":"Yields `x`, then `y`","summary":"<p>Yields <code><a href=\"../SF/Vector2.html#x:T-instance-method\">#x</a></code>, then <code><a href=\"../SF/Vector2.html#y:T-instance-method\">#y</a></code></p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L54","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield @x\nyield @y\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"Returns `2`","summary":"<p>Returns <code>2</code></p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L59","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"2"}},{"id":"x:T-instance-method","html_id":"x:T-instance-method","name":"x","doc":"The *x* coordinate","summary":"<p>The <em>x</em> coordinate</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L41","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@x"}},{"id":"x=(x:T)-instance-method","html_id":"x=(x:T)-instance-method","name":"x=","doc":"The *x* coordinate","summary":"<p>The <em>x</em> coordinate</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"}],"args_string":"(x : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L41","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = x"}},{"id":"y:T-instance-method","html_id":"y:T-instance-method","name":"y","doc":"The *y* coordinate","summary":"<p>The <em>y</em> coordinate</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L43","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@y"}},{"id":"y=(y:T)-instance-method","html_id":"y=(y:T)-instance-method","name":"y=","doc":"The *y* coordinate","summary":"<p>The <em>y</em> coordinate</p>","abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"T"}],"args_string":"(y : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L43","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = y"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Vector2f","path":"SF/Vector2f.html","kind":"alias","full_name":"SF::Vector2f","name":"Vector2f","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"system/system.cr","line_number":138,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":true,"aliased":"SF::Vector2(Float32)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Vector2i","path":"SF/Vector2i.html","kind":"alias","full_name":"SF::Vector2i","name":"Vector2i","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"system/system.cr","line_number":136,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":true,"aliased":"SF::Vector2(Int32)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Vector2u","path":"SF/Vector2u.html","kind":"alias","full_name":"SF::Vector2u","name":"Vector2u","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"system/system.cr","line_number":137,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":true,"aliased":"SF::Vector2(Int32)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Vector3","path":"SF/Vector3.html","kind":"struct","full_name":"SF::Vector3(T)","name":"Vector3","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"system/system.cr","line_number":173,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Utility generic struct for manipulating 2-dimensional vectors\n\n`SF::Vector3` is a simple struct that defines a mathematical\nvector with three coordinates (x, y and z). It can be used to\nrepresent anything that has three dimensions: a size, a point,\na velocity, etc.\n\nThe generic parameter T is the type of the coordinates. It\ncan be any type that supports arithmetic operations (+, -, /, *)\nand comparisons (==, !=), for example `Int` or `Float`.\n\nYou generally don't have to care about the generic form,\nthe most common specialization has a special alias:\n* `SF::Vector3(Float32)` is `SF::Vector3f`\n\nThe `SF::Vector3` struct has a small and simple interface, its\n`x`, `y`, `z` members can be accessed directly and it contains no\nmathematical function like dot product, cross product, length, etc.\n\nNote: for 2-dimensional vectors, see `SF::Vector2`.","summary":"<p>Utility generic struct for manipulating 2-dimensional vectors</p>","class_methods":[],"constructors":[{"id":"new(x:T,y:T,z:T)-class-method","html_id":"new(x:T,y:T,z:T)-class-method","name":"new","doc":"Construct the vector from its coordinates.","summary":"<p>Construct the vector from its coordinates.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"T"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"T"}],"args_string":"(x : T, y : T, z : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L188","def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"T"},{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Vector3(T).allocate\n_.initialize(x, y, z)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor: equivalent to `new(0, 0, 0)`","summary":"<p>Default constructor: equivalent to <code><a href=\"../SF/Vector3.html#new(x:T,y:T,z:T)-class-method\">.new(0, 0, 0)</a></code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L184","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Vector3(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(n:Number)-instance-method","html_id":"*(n:Number)-instance-method","name":"*","doc":"Memberwise multiplication by a scalar","summary":"<p>Memberwise multiplication by a scalar</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Number"}],"args_string":"(n : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L228","def":{"name":"*","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SF.vector3(x * n, y * n, z * n)"}},{"id":"+(other)-instance-method","html_id":"+(other)-instance-method","name":"+","doc":"Memberwise addition of two vectors","summary":"<p>Memberwise addition of two vectors</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L214","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ox, oy, oz = other\nSF.vector3(x + ox, y + oy, z + oz)\n"}},{"id":"-(other)-instance-method","html_id":"-(other)-instance-method","name":"-","doc":"Memberwise subtraction of two vectors","summary":"<p>Memberwise subtraction of two vectors</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L219","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ox, oy, oz = other\nSF.vector3(x - ox, y - oy, z - oz)\n"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":"Memberwise opposite of the vector","summary":"<p>Memberwise opposite of the vector</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L224","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SF.vector3(-x, -y, -z)"}},{"id":"/(n:Number)-instance-method","html_id":"/(n:Number)-instance-method","name":"/","doc":"Memberwise division by a scalar","summary":"<p>Memberwise division by a scalar</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Number"}],"args_string":"(n : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L232","def":{"name":"/","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SF.vector3(x / n, y / n, z / n)"}},{"id":"==(other:Vector3)-instance-method","html_id":"==(other:Vector3)-instance-method","name":"==","doc":"Returns true if all corresponding coordinates of two vectors are equal","summary":"<p>Returns true if all corresponding coordinates of two vectors are equal</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector3"}],"args_string":"(other : Vector3)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L236","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector3"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ox, oy, oz = other\n((x == ox) && (y == oy)) && (z == oz)\n"}},{"id":"[](i)-instance-method","html_id":"[](i)-instance-method","name":"[]","doc":"Get a coordinate by its index: 0 is `x`, 1 is `y`, 2 is `z`.\n\nRaises `IndexError` for other indices.","summary":"<p>Get a coordinate by its index: 0 is <code><a href=\"../SF/Vector3.html#x:T-instance-method\">#x</a></code>, 1 is <code><a href=\"../SF/Vector3.html#y:T-instance-method\">#y</a></code>, 2 is <code><a href=\"../SF/Vector3.html#z:T-instance-method\">#z</a></code>.</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"args_string":"(i)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L204","def":{"name":"[]","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case i\nwhen 0\n  @x\nwhen 1\n  @y\nwhen 2\n  @z\nelse\n  raise(IndexError.new)\nend"}},{"id":"each(&)-instance-method","html_id":"each(&amp;)-instance-method","name":"each","doc":"Yields `x`, then `y`, then `z`","summary":"<p>Yields <code><a href=\"../SF/Vector3.html#x:T-instance-method\">#x</a></code>, then <code><a href=\"../SF/Vector3.html#y:T-instance-method\">#y</a></code>, then <code><a href=\"../SF/Vector3.html#z:T-instance-method\">#z</a></code></p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L192","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield @x\nyield @y\nyield @z\n"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":"Returns `3`","summary":"<p>Returns <code>3</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L198","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"3"}},{"id":"x:T-instance-method","html_id":"x:T-instance-method","name":"x","doc":"The *x* coordinate","summary":"<p>The <em>x</em> coordinate</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L177","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@x"}},{"id":"x=(x:T)-instance-method","html_id":"x=(x:T)-instance-method","name":"x=","doc":"The *x* coordinate","summary":"<p>The <em>x</em> coordinate</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"}],"args_string":"(x : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L177","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = x"}},{"id":"y:T-instance-method","html_id":"y:T-instance-method","name":"y","doc":"The *y* coordinate","summary":"<p>The <em>y</em> coordinate</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L179","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@y"}},{"id":"y=(y:T)-instance-method","html_id":"y=(y:T)-instance-method","name":"y=","doc":"The *y* coordinate","summary":"<p>The <em>y</em> coordinate</p>","abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"T"}],"args_string":"(y : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L179","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = y"}},{"id":"z:T-instance-method","html_id":"z:T-instance-method","name":"z","doc":"The *z* coordinate","summary":"<p>The <em>z</em> coordinate</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L181","def":{"name":"z","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@z"}},{"id":"z=(z:T)-instance-method","html_id":"z=(z:T)-instance-method","name":"z=","doc":"The *z* coordinate","summary":"<p>The <em>z</em> coordinate</p>","abstract":false,"args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"T"}],"args_string":"(z : T)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr#L181","def":{"name":"z=","args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@z = z"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Vector3f","path":"SF/Vector3f.html","kind":"alias","full_name":"SF::Vector3f","name":"Vector3f","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"system/system.cr","line_number":252,"url":"https://github.com/oprypin/crsfml/blob/master/src/system/system.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":true,"aliased":"SF::Vector3(Float32)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Vertex","path":"SF/Vertex.html","kind":"struct","full_name":"SF::Vertex","name":"Vertex","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":1434,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Define a point with color and texture coordinates\n\nA vertex is an improved point. It has a position and other\nextra attributes that will be used for drawing: in SFML,\nvertices also have a color and a pair of texture coordinates.\n\nThe vertex is the building block of drawing. Everything which\nis visible on screen is made of vertices. They are grouped\nas 2D primitives (triangles, quads, ...), and these primitives\nare grouped to create even more complex 2D entities such as\nsprites, texts, etc.\n\nIf you use the graphical entities of SFML (sprite, text, shape)\nyou won't have to deal with vertices directly. But if you want\nto define your own 2D entities, such as tiled maps or particle\nsystems, using vertices will allow you to get maximum performances.\n\nExample:\n```\n# define a 100x100 square, red, with a 10x10 texture mapped on it\nvertices = [\n  SF::Vertex.new(SF.vector2f(  0,   0), SF::Color::Red, SF.vector2f( 0,  0)),\n  SF::Vertex.new(SF.vector2f(  0, 100), SF::Color::Red, SF.vector2f( 0, 10)),\n  SF::Vertex.new(SF.vector2f(100, 100), SF::Color::Red, SF.vector2f(10, 10)),\n  SF::Vertex.new(SF.vector2f(100,   0), SF::Color::Red, SF.vector2f(10,  0)),\n]\n\n# draw it\nwindow.draw(vertices, SF::Quads)\n```\n\nNote: although texture coordinates are supposed to be an integer\namount of pixels, their type is float because of some buggy graphics\ndrivers that are not able to process integer coordinates correctly.\n\n*See also:* `SF::VertexArray`","summary":"<p>Define a point with color and texture coordinates</p>","class_methods":[],"constructors":[{"id":"new(position:Vector2|Tuple,color:Color,tex_coords:Vector2|Tuple)-class-method","html_id":"new(position:Vector2|Tuple,color:Color,tex_coords:Vector2|Tuple)-class-method","name":"new","doc":"Construct the vertex from its position, color and texture coordinates\n\n* *position* - Vertex position\n* *color* - Vertex color\n* *tex_coords* - Vertex texture coordinates","summary":"<p>Construct the vertex from its position, color and texture coordinates</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"},{"name":"tex_coords","doc":null,"default_value":"","external_name":"tex_coords","restriction":"Vector2 | Tuple"}],"args_string":"(position : Vector2 | Tuple, color : Color, tex_coords : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1489","def":{"name":"new","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"},{"name":"tex_coords","doc":null,"default_value":"","external_name":"tex_coords","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(position, color, tex_coords)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(position:Vector2|Tuple,color:Color)-class-method","html_id":"new(position:Vector2|Tuple,color:Color)-class-method","name":"new","doc":"Construct the vertex from its position and color\n\nThe texture coordinates are (0, 0).\n\n* *position* - Vertex position\n* *color* - Vertex color","summary":"<p>Construct the vertex from its position and color</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"args_string":"(position : Vector2 | Tuple, color : Color)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1463","def":{"name":"new","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(position, color)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(position:Vector2|Tuple,tex_coords:Vector2|Tuple)-class-method","html_id":"new(position:Vector2|Tuple,tex_coords:Vector2|Tuple)-class-method","name":"new","doc":"Construct the vertex from its position and texture coordinates\n\nThe vertex color is white.\n\n* *position* - Vertex position\n* *tex_coords* - Vertex texture coordinates","summary":"<p>Construct the vertex from its position and texture coordinates</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"},{"name":"tex_coords","doc":null,"default_value":"","external_name":"tex_coords","restriction":"Vector2 | Tuple"}],"args_string":"(position : Vector2 | Tuple, tex_coords : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1476","def":{"name":"new","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"},{"name":"tex_coords","doc":null,"default_value":"","external_name":"tex_coords","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(position, tex_coords)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(position:Vector2|Tuple)-class-method","html_id":"new(position:Vector2|Tuple)-class-method","name":"new","doc":"Construct the vertex from its position\n\nThe vertex color is white and texture coordinates are (0, 0).\n\n* *position* - Vertex position","summary":"<p>Construct the vertex from its position</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"}],"args_string":"(position : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1450","def":{"name":"new","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(position)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1439","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"color:Color-instance-method","html_id":"color:Color-instance-method","name":"color","doc":"Color of the vertex","summary":"<p>Color of the vertex</p>","abstract":false,"args":[],"args_string":" : Color","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1508","def":{"name":"color","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"@color"}},{"id":"color=(color:Color)-instance-method","html_id":"color=(color:Color)-instance-method","name":"color=","doc":null,"summary":null,"abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"args_string":"(color : Color)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1511","def":{"name":"color=","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@color = color"}},{"id":"dup:Vertex-instance-method","html_id":"dup:Vertex-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : Vertex","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1534","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vertex","visibility":"Public","body":"return Vertex.new(self)"}},{"id":"position:Vector2f-instance-method","html_id":"position:Vector2f-instance-method","name":"position","doc":"2D position of the vertex","summary":"<p>2D position of the vertex</p>","abstract":false,"args":[],"args_string":" : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1499","def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"@position"}},{"id":"position=(position:Vector2|Tuple)-instance-method","html_id":"position=(position:Vector2|Tuple)-instance-method","name":"position=","doc":null,"summary":null,"abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"}],"args_string":"(position : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1502","def":{"name":"position=","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"position = Vector2f.new(position[0].to_f32, position[1].to_f32)\n@position = position\n"}},{"id":"tex_coords:Vector2f-instance-method","html_id":"tex_coords:Vector2f-instance-method","name":"tex_coords","doc":"Coordinates of the texture's pixel to map to the vertex","summary":"<p>Coordinates of the texture's pixel to map to the vertex</p>","abstract":false,"args":[],"args_string":" : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1516","def":{"name":"tex_coords","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"@tex_coords"}},{"id":"tex_coords=(tex_coords:Vector2|Tuple)-instance-method","html_id":"tex_coords=(tex_coords:Vector2|Tuple)-instance-method","name":"tex_coords=","doc":null,"summary":null,"abstract":false,"args":[{"name":"tex_coords","doc":null,"default_value":"","external_name":"tex_coords","restriction":"Vector2 | Tuple"}],"args_string":"(tex_coords : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1519","def":{"name":"tex_coords=","args":[{"name":"tex_coords","doc":null,"default_value":"","external_name":"tex_coords","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tex_coords = Vector2f.new(tex_coords[0].to_f32, tex_coords[1].to_f32)\n@tex_coords = tex_coords\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/VertexArray","path":"SF/VertexArray.html","kind":"class","full_name":"SF::VertexArray","name":"VertexArray","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":1586,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Define a set of one or more 2D primitives\n\n`SF::VertexArray` is a very simple wrapper around a dynamic\narray of vertices and a primitives type.\n\nIt includes `SF::Drawable`, but unlike other drawables it\nis not transformable.\n\nExample:\n```\nlines = SF::VertexArray.new(SF::LineStrip, 4)\nlines[0] = SF::Vertex.new(SF.vector2f(10, 0))\nlines[1] = SF::Vertex.new(SF.vector2f(20, 0))\nlines[2] = SF::Vertex.new(SF.vector2f(30, 5))\nlines[3] = SF::Vertex.new(SF.vector2f(40, 2))\n\nwindow.draw(lines)\n```\n\n*See also:* `SF::Vertex`","summary":"<p>Define a set of one or more 2D primitives</p>","class_methods":[],"constructors":[{"id":"new(type:PrimitiveType,vertex_count:Int=0)-class-method","html_id":"new(type:PrimitiveType,vertex_count:Int=0)-class-method","name":"new","doc":"Construct the vertex array with a type and an initial number of vertices\n\n* *type* - Type of primitives\n* *vertex_count* - Initial number of vertices in the array","summary":"<p>Construct the vertex array with a type and an initial number of vertices</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PrimitiveType"},{"name":"vertex_count","doc":null,"default_value":"0","external_name":"vertex_count","restriction":"Int"}],"args_string":"(type : PrimitiveType, vertex_count : Int = <span class=\"n\">0</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1603","def":{"name":"new","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PrimitiveType"},{"name":"vertex_count","doc":null,"default_value":"0","external_name":"vertex_count","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(type, vertex_count)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nCreates an empty vertex array.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1595","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](index:Int):Vertex-instance-method","html_id":"[](index:Int):Vertex-instance-method","name":"[]","doc":"Get the vertex by its index\n\nThis method doesn't check *index*, it must be in range\n`0 ... vertex_count`. The behavior is undefined otherwise.\n\n* *index* - Index of the vertex to get\n\n*Returns:* The index-th vertex\n\n*See also:* `vertex_count`","summary":"<p>Get the vertex by its index</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Vertex","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1635","def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vertex","visibility":"Public","body":"result = Vertex.allocate\nSFMLExt.sfml_vertexarray_operator_index_vgv(to_unsafe, LibC::SizeT.new(index), result)\nreturn result\n"}},{"id":"[]=(index:Int,value:Vertex)-instance-method","html_id":"[]=(index:Int,value:Vertex)-instance-method","name":"[]=","doc":"Set the vertex by its index\n\nThis method doesn't check *index*, it must be in range\n`0 ... vertex_count`. The behavior is undefined otherwise.\n\n* *index* - Index of the vertex to set\n\n*See also:* `vertex_count`","summary":"<p>Set the vertex by its index</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Vertex"}],"args_string":"(index : Int, value : Vertex)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1622","def":{"name":"[]=","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Vertex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_vertexarray_operator_indexset_vgvRos(to_unsafe, LibC::SizeT.new(index), value)"}},{"id":"append(vertex:Vertex)-instance-method","html_id":"append(vertex:Vertex)-instance-method","name":"append","doc":"Add a vertex to the array\n\n* *vertex* - Vertex to add","summary":"<p>Add a vertex to the array</p>","abstract":false,"args":[{"name":"vertex","doc":null,"default_value":"","external_name":"vertex","restriction":"Vertex"}],"args_string":"(vertex : Vertex)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1664","def":{"name":"append","args":[{"name":"vertex","doc":null,"default_value":"","external_name":"vertex","restriction":"Vertex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_vertexarray_append_Y3J(to_unsafe, vertex)"}},{"id":"bounds:FloatRect-instance-method","html_id":"bounds:FloatRect-instance-method","name":"bounds","doc":"Compute the bounding rectangle of the vertex array\n\nThis function returns the minimal axis-aligned rectangle\nthat contains all the vertices of the array.\n\n*Returns:* Bounding rectangle of the vertex array","summary":"<p>Compute the bounding rectangle of the vertex array</p>","abstract":false,"args":[],"args_string":" : FloatRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1694","def":{"name":"bounds","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FloatRect","visibility":"Public","body":"result = FloatRect.allocate\nSFMLExt.sfml_vertexarray_getbounds(to_unsafe, result)\nreturn result\n"}},{"id":"clear-instance-method","html_id":"clear-instance-method","name":"clear","doc":"Clear the vertex array\n\nThis function removes all the vertices from the array.\nIt doesn't deallocate the corresponding memory, so that\nadding new vertices after clearing doesn't involve\nreallocating all the memory.","summary":"<p>Clear the vertex array</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1646","def":{"name":"clear","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_vertexarray_clear(to_unsafe)"}},{"id":"dup:VertexArray-instance-method","html_id":"dup:VertexArray-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : VertexArray","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1725","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"VertexArray","visibility":"Public","body":"return VertexArray.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1588","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_vertexarray_finalize(to_unsafe)\nSFMLExt.sfml_vertexarray_free(@this)\n"}},{"id":"primitive_type:PrimitiveType-instance-method","html_id":"primitive_type:PrimitiveType-instance-method","name":"primitive_type","doc":"Get the type of primitives drawn by the vertex array\n\n*Returns:* Primitive type","summary":"<p>Get the type of primitives drawn by the vertex array</p>","abstract":false,"args":[],"args_string":" : PrimitiveType","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1684","def":{"name":"primitive_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PrimitiveType","visibility":"Public","body":"SFMLExt.sfml_vertexarray_getprimitivetype(to_unsafe, out result)\nreturn PrimitiveType.new(result)\n"}},{"id":"primitive_type=(type:PrimitiveType)-instance-method","html_id":"primitive_type=(type:PrimitiveType)-instance-method","name":"primitive_type=","doc":"Set the type of primitives to draw\n\nThis function defines how the vertices must be interpreted\nwhen it's time to draw them:\n* As points\n* As lines\n* As triangles\n* As quads\nThe default primitive type is `SF::Points`.\n\n* *type* - Type of primitive","summary":"<p>Set the type of primitives to draw</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PrimitiveType"}],"args_string":"(type : PrimitiveType)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1678","def":{"name":"primitive_type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PrimitiveType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_vertexarray_setprimitivetype_u9w(to_unsafe, type)"}},{"id":"resize(vertex_count:Int)-instance-method","html_id":"resize(vertex_count:Int)-instance-method","name":"resize","doc":"Resize the vertex array\n\nIf *vertex_count* is greater than the current size, the previous\nvertices are kept and new (default-constructed) vertices are\nadded.\nIf *vertex_count* is less than the current size, existing vertices\nare removed from the array.\n\n* *vertex_count* - New size of the array (number of vertices)","summary":"<p>Resize the vertex array</p>","abstract":false,"args":[{"name":"vertex_count","doc":null,"default_value":"","external_name":"vertex_count","restriction":"Int"}],"args_string":"(vertex_count : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1658","def":{"name":"resize","args":[{"name":"vertex_count","doc":null,"default_value":"","external_name":"vertex_count","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_vertexarray_resize_vgv(to_unsafe, LibC::SizeT.new(vertex_count))"}},{"id":"vertex_count:Int32-instance-method","html_id":"vertex_count:Int32-instance-method","name":"vertex_count","doc":"Return the vertex count\n\n*Returns:* Number of vertices in the array","summary":"<p>Return the vertex count</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L1610","def":{"name":"vertex_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_vertexarray_getvertexcount(to_unsafe, out result)\nreturn result.to_i\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/VertexBuffer","path":"SF/VertexBuffer.html","kind":"class","full_name":"SF::VertexBuffer","name":"VertexBuffer","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/GlResource","kind":"module","full_name":"SF::GlResource","name":"GlResource"},{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":6927,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/Drawable","kind":"module","full_name":"SF::Drawable","name":"Drawable"},{"html_id":"github.com/oprypin/crsfml/SF/GlResource","kind":"module","full_name":"SF::GlResource","name":"GlResource"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Vertex buffer storage for one or more 2D primitives\n\n`SF::VertexBuffer` is a simple wrapper around a dynamic\nbuffer of vertices and a primitives type.\n\nUnlike `SF::VertexArray`, the vertex data is stored in\ngraphics memory.\n\nIn situations where a large amount of vertex data would\nhave to be transferred from system memory to graphics memory\nevery frame, using `SF::VertexBuffer` can help. By using a\n`SF::VertexBuffer`, data that has not been changed between frames\ndoes not have to be re-transferred from system to graphics\nmemory as would be the case with `SF::VertexArray`. If data transfer\nis a bottleneck, this can lead to performance gains.\n\nUsing `SF::VertexBuffer`, the user also has the ability to only modify\na portion of the buffer in graphics memory. This way, a large buffer\ncan be allocated at the start of the application and only the\napplicable portions of it need to be updated during the course of\nthe application. This allows the user to take full control of data\ntransfers between system and graphics memory if they need to.\n\nIn special cases, the user can make use of multiple threads to update\nvertex data in multiple distinct regions of the buffer simultaneously.\nThis might make sense when e.g. the position of multiple objects has to\nbe recalculated very frequently. The computation load can be spread\nacross multiple threads as long as there are no other data dependencies.\n\nSimultaneous updates to the vertex buffer are not guaranteed to be\ncarried out by the driver in any specific order. Updating the same\nregion of the buffer from multiple threads will not cause undefined\nbehaviour, however the final state of the buffer will be unpredictable.\n\nSimultaneous updates of distinct non-overlapping regions of the buffer\nare also not guaranteed to complete in a specific order. However, in\nthis case the user can make sure to synchronize the writer threads at\nwell-defined points in their code. The driver will make sure that all\npending data transfers complete before the vertex buffer is sourced\nby the rendering pipeline.\n\nIt inherits `SF::Drawable`, but unlike other drawables it\nis not transformable.\n\nExample:\n```c++\nsf::Vertex vertices[15];\n...\nsf::VertexBuffer triangles(sf::Triangles);\ntriangles.create(15);\ntriangles.update(vertices);\n...\nwindow.draw(triangles);\n```\n\n*See also:* `SF::Vertex`, `SF::VertexArray`","summary":"<p>Vertex buffer storage for one or more 2D primitives</p>","class_methods":[{"id":"available?:Bool-class-method","html_id":"available?:Bool-class-method","name":"available?","doc":"Tell whether or not the system supports vertex buffers\n\nThis function should always be called before using\nthe vertex buffer features. If it returns false, then\nany attempt to use `SF::VertexBuffer` will fail.\n\n*Returns:* True if vertex buffers are supported, false otherwise","summary":"<p>Tell whether or not the system supports vertex buffers</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7165","def":{"name":"available?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_isavailable(out result)\nreturn result\n"}},{"id":"bind(vertex_buffer:VertexBuffer?)-class-method","html_id":"bind(vertex_buffer:VertexBuffer?)-class-method","name":"bind","doc":"Bind a vertex buffer for rendering\n\nThis function is not part of the graphics API, it mustn't be\nused when drawing SFML entities. It must be used only if you\nmix `SF::VertexBuffer` with OpenGL code.\n\n```c++\nsf::VertexBuffer vb1, vb2;\n...\nsf::VertexBuffer::bind(&vb1);\n// draw OpenGL stuff that use vb1...\nsf::VertexBuffer::bind(&vb2);\n// draw OpenGL stuff that use vb2...\nsf::VertexBuffer::bind(NULL);\n// draw OpenGL stuff that use no vertex buffer...\n```\n\n* *vertex_buffer* - Pointer to the vertex buffer to bind, can be null to use no vertex buffer","summary":"<p>Bind a vertex buffer for rendering</p>","abstract":false,"args":[{"name":"vertex_buffer","doc":null,"default_value":"","external_name":"vertex_buffer","restriction":"VertexBuffer | ::Nil"}],"args_string":"(vertex_buffer : VertexBuffer?)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7155","def":{"name":"bind","args":[{"name":"vertex_buffer","doc":null,"default_value":"","external_name":"vertex_buffer","restriction":"VertexBuffer | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_bind_Kfe(vertex_buffer)"}}],"constructors":[{"id":"new(type:PrimitiveType,usage:VertexBuffer::Usage)-class-method","html_id":"new(type:PrimitiveType,usage:VertexBuffer::Usage)-class-method","name":"new","doc":"Construct a VertexBuffer with a specific PrimitiveType and usage specifier\n\nCreates an empty vertex buffer and sets its primitive type\nto \\p type and usage to \\p usage.\n\n* *type* - Type of primitive\n* *usage* - Usage specifier","summary":"<p>Construct a VertexBuffer with a specific PrimitiveType and usage specifier</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PrimitiveType"},{"name":"usage","doc":null,"default_value":"","external_name":"usage","restriction":"VertexBuffer::Usage"}],"args_string":"(type : PrimitiveType, usage : VertexBuffer::Usage)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6977","def":{"name":"new","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PrimitiveType"},{"name":"usage","doc":null,"default_value":"","external_name":"usage","restriction":"VertexBuffer::Usage"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(type, usage)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(type:PrimitiveType)-class-method","html_id":"new(type:PrimitiveType)-class-method","name":"new","doc":"Construct a VertexBuffer with a specific PrimitiveType\n\nCreates an empty vertex buffer and sets its primitive type to \\p type.\n\n* *type* - Type of primitive","summary":"<p>Construct a VertexBuffer with a specific PrimitiveType</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PrimitiveType"}],"args_string":"(type : PrimitiveType)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6957","def":{"name":"new","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PrimitiveType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(usage:VertexBuffer::Usage)-class-method","html_id":"new(usage:VertexBuffer::Usage)-class-method","name":"new","doc":"Construct a VertexBuffer with a specific usage specifier\n\nCreates an empty vertex buffer and sets its usage to \\p usage.\n\n* *usage* - Usage specifier","summary":"<p>Construct a VertexBuffer with a specific usage specifier</p>","abstract":false,"args":[{"name":"usage","doc":null,"default_value":"","external_name":"usage","restriction":"VertexBuffer::Usage"}],"args_string":"(usage : VertexBuffer::Usage)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6966","def":{"name":"new","args":[{"name":"usage","doc":null,"default_value":"","external_name":"usage","restriction":"VertexBuffer::Usage"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(usage)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nCreates an empty vertex buffer.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6948","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*args,**kwargs):self-class-method","html_id":"new(*args,**kwargs):self-class-method","name":"new","doc":"Shorthand for `vertex_buffer = VertexBuffer.new; vertex_buffer.create(...); vertex_buffer`\n\nRaises `InitError` on failure","summary":"<p>Shorthand for <code>vertex_buffer = <a href=\"../SF/VertexBuffer.html#new-class-method\">VertexBuffer.new</a>; vertex_buffer<a href=\"../SF/VertexBuffer.html#create(vertex_count:Int):Bool-instance-method\">.create(...)</a>; vertex_buffer</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7006","def":{"name":"new","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nif !(obj.create(*args, **kwargs))\n  raise(InitError.new(\"VertexBuffer.create failed\"))\nend\nobj\n"}}],"instance_methods":[{"id":"create(vertex_count:Int):Bool-instance-method","html_id":"create(vertex_count:Int):Bool-instance-method","name":"create","doc":"Create the vertex buffer\n\nCreates the vertex buffer and allocates enough graphics\nmemory to hold \\p vertex_count vertices. Any previously\nallocated memory is freed in the process.\n\nIn order to deallocate previously allocated memory pass 0\nas \\p vertex_count. Don't forget to recreate with a non-zero\nvalue when graphics memory should be allocated again.\n\n* *vertex_count* - Number of vertices worth of memory to allocate\n\n*Returns:* True if creation was successful","summary":"<p>Create the vertex buffer</p>","abstract":false,"args":[{"name":"vertex_count","doc":null,"default_value":"","external_name":"vertex_count","restriction":"Int"}],"args_string":"(vertex_count : Int) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6999","def":{"name":"create","args":[{"name":"vertex_count","doc":null,"default_value":"","external_name":"vertex_count","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_create_vgv(to_unsafe, LibC::SizeT.new(vertex_count), out result)\nreturn result\n"}},{"id":"dup:VertexBuffer-instance-method","html_id":"dup:VertexBuffer-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : VertexBuffer","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7196","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"VertexBuffer","visibility":"Public","body":"return VertexBuffer.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6982","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_finalize(to_unsafe)\nSFMLExt.sfml_vertexbuffer_free(@this)\n"}},{"id":"native_handle:Int32-instance-method","html_id":"native_handle:Int32-instance-method","name":"native_handle","doc":"Get the underlying OpenGL handle of the vertex buffer.\n\nYou shouldn't need to use this function, unless you have\nvery specific stuff to implement that SFML doesn't support,\nor implement a temporary workaround until a bug is fixed.\n\n*Returns:* OpenGL handle of the vertex buffer or 0 if not yet created","summary":"<p>Get the underlying OpenGL handle of the vertex buffer.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7093","def":{"name":"native_handle","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_getnativehandle(to_unsafe, out result)\nreturn result.to_i\n"}},{"id":"primitive_type:PrimitiveType-instance-method","html_id":"primitive_type:PrimitiveType-instance-method","name":"primitive_type","doc":"Get the type of primitives drawn by the vertex buffer\n\n*Returns:* Primitive type","summary":"<p>Get the type of primitives drawn by the vertex buffer</p>","abstract":false,"args":[],"args_string":" : PrimitiveType","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7111","def":{"name":"primitive_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PrimitiveType","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_getprimitivetype(to_unsafe, out result)\nreturn PrimitiveType.new(result)\n"}},{"id":"primitive_type=(type:PrimitiveType)-instance-method","html_id":"primitive_type=(type:PrimitiveType)-instance-method","name":"primitive_type=","doc":"Set the type of primitives to draw\n\nThis function defines how the vertices must be interpreted\nwhen it's time to draw them.\n\nThe default primitive type is `SF::Points`.\n\n* *type* - Type of primitive","summary":"<p>Set the type of primitives to draw</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PrimitiveType"}],"args_string":"(type : PrimitiveType)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7105","def":{"name":"primitive_type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PrimitiveType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_setprimitivetype_u9w(to_unsafe, type)"}},{"id":"swap(right:VertexBuffer)-instance-method","html_id":"swap(right:VertexBuffer)-instance-method","name":"swap","doc":"Swap the contents of this vertex buffer with those of another\n\n* *right* - Instance to swap with","summary":"<p>Swap the contents of this vertex buffer with those of another</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VertexBuffer"}],"args_string":"(right : VertexBuffer)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7083","def":{"name":"swap","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VertexBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_swap_8jC(to_unsafe, right)"}},{"id":"update(vertices:Array(Vertex)|Slice(Vertex),offset:Int):Bool-instance-method","html_id":"update(vertices:Array(Vertex)|Slice(Vertex),offset:Int):Bool-instance-method","name":"update","doc":"Update a part of the buffer from an array of vertices\n\n\\p offset is specified as the number of vertices to skip\nfrom the beginning of the buffer.\n\nIf \\p offset is 0 and \\p vertex_count is equal to the size of\nthe currently created buffer, its whole contents are replaced.\n\nIf \\p offset is 0 and \\p vertex_count is greater than the\nsize of the currently created buffer, a new buffer is created\ncontaining the vertex data.\n\nIf \\p offset is 0 and \\p vertex_count is less than the size of\nthe currently created buffer, only the corresponding region\nis updated.\n\nIf \\p offset is not 0 and \\p offset + \\p vertex_count is greater\nthan the size of the currently created buffer, the update fails.\n\nNo additional check is performed on the size of the vertex\narray, passing invalid arguments will lead to undefined\nbehavior.\n\n* *vertices* - Array of vertices to copy to the buffer\n* *vertex_count* - Number of vertices to copy\n* *offset* - Offset in the buffer to copy to\n\n*Returns:* True if the update was successful","summary":"<p>Update a part of the buffer from an array of vertices</p>","abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"","external_name":"vertices","restriction":"Array(Vertex) | Slice(Vertex)"},{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Int"}],"args_string":"(vertices : Array(Vertex) | Slice(Vertex), offset : Int) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7067","def":{"name":"update","args":[{"name":"vertices","doc":null,"default_value":"","external_name":"vertices","restriction":"Array(Vertex) | Slice(Vertex)"},{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_update_46svgvemS(to_unsafe, vertices, vertices.size, LibC::UInt.new(offset), out result)\nreturn result\n"}},{"id":"update(vertices:Vertex):Bool-instance-method","html_id":"update(vertices:Vertex):Bool-instance-method","name":"update","doc":"Update the whole buffer from an array of vertices\n\nThe *vertex* array is assumed to have the same size as\nthe *created* buffer.\n\nNo additional check is performed on the size of the vertex\narray, passing invalid arguments will lead to undefined\nbehavior.\n\nThis function does nothing if *vertices* is null or if the\nbuffer was not previously created.\n\n* *vertices* - Array of vertices to copy to the buffer\n\n*Returns:* True if the update was successful","summary":"<p>Update the whole buffer from an array of vertices</p>","abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"","external_name":"vertices","restriction":"Vertex"}],"args_string":"(vertices : Vertex) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7035","def":{"name":"update","args":[{"name":"vertices","doc":null,"default_value":"","external_name":"vertices","restriction":"Vertex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_update_46s(to_unsafe, vertices, out result)\nreturn result\n"}},{"id":"update(vertex_buffer:VertexBuffer):Bool-instance-method","html_id":"update(vertex_buffer:VertexBuffer):Bool-instance-method","name":"update","doc":"Copy the contents of another buffer into this buffer\n\n* *vertex_buffer* - Vertex buffer whose contents to copy into this vertex buffer\n\n*Returns:* True if the copy was successful","summary":"<p>Copy the contents of another buffer into this buffer</p>","abstract":false,"args":[{"name":"vertex_buffer","doc":null,"default_value":"","external_name":"vertex_buffer","restriction":"VertexBuffer"}],"args_string":"(vertex_buffer : VertexBuffer) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7076","def":{"name":"update","args":[{"name":"vertex_buffer","doc":null,"default_value":"","external_name":"vertex_buffer","restriction":"VertexBuffer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_update_U2D(to_unsafe, vertex_buffer, out result)\nreturn result\n"}},{"id":"usage:VertexBuffer::Usage-instance-method","html_id":"usage:VertexBuffer::Usage-instance-method","name":"usage","doc":"Get the usage specifier of this vertex buffer\n\n*Returns:* Usage specifier","summary":"<p>Get the usage specifier of this vertex buffer</p>","abstract":false,"args":[],"args_string":" : VertexBuffer::Usage","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7133","def":{"name":"usage","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"VertexBuffer::Usage","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_getusage(to_unsafe, out result)\nreturn VertexBuffer::Usage.new(result)\n"}},{"id":"usage=(usage:VertexBuffer::Usage)-instance-method","html_id":"usage=(usage:VertexBuffer::Usage)-instance-method","name":"usage=","doc":"Set the usage specifier of this vertex buffer\n\nThis function provides a hint about how this vertex buffer is\ngoing to be used in terms of data update frequency.\n\nAfter changing the usage specifier, the vertex buffer has\nto be updated with new data for the usage specifier to\ntake effect.\n\nThe default primitive type is `SF::VertexBuffer::Stream`.\n\n* *usage* - Usage specifier","summary":"<p>Set the usage specifier of this vertex buffer</p>","abstract":false,"args":[{"name":"usage","doc":null,"default_value":"","external_name":"usage","restriction":"VertexBuffer::Usage"}],"args_string":"(usage : VertexBuffer::Usage)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7127","def":{"name":"usage=","args":[{"name":"usage","doc":null,"default_value":"","external_name":"usage","restriction":"VertexBuffer::Usage"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_setusage_9vK(to_unsafe, usage)"}},{"id":"vertex_count:Int32-instance-method","html_id":"vertex_count:Int32-instance-method","name":"vertex_count","doc":"Return the vertex count\n\n*Returns:* Number of vertices in the vertex buffer","summary":"<p>Return the vertex count</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L7016","def":{"name":"vertex_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"SFMLExt.sfml_vertexbuffer_getvertexcount(to_unsafe, out result)\nreturn result.to_i\n"}}],"macros":[],"types":[{"html_id":"github.com/oprypin/crsfml/SF/VertexBuffer/Usage","path":"SF/VertexBuffer/Usage.html","kind":"enum","full_name":"SF::VertexBuffer::Usage","name":"Usage","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/oprypin/crsfml/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/oprypin/crsfml/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":6936,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Stream","name":"Stream","value":"0","doc":"Constantly changing data","summary":"<p>Constantly changing data</p>"},{"id":"Dynamic","name":"Dynamic","value":"1","doc":"Occasionally changing data","summary":"<p>Occasionally changing data</p>"},{"id":"Static","name":"Static","value":"2","doc":"Rarely changing data","summary":"<p>Rarely changing data</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF/VertexBuffer","kind":"class","full_name":"SF::VertexBuffer","name":"VertexBuffer"},"doc":"Usage specifiers\n\nIf data is going to be updated once or more every frame,\nset the usage to Stream. If data is going to be set once\nand used for a long time without being modified, set the\nusage to Static. For everything else Dynamic should be a\ngood compromise.","summary":"<p>Usage specifiers</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"dynamic?-instance-method","html_id":"dynamic?-instance-method","name":"dynamic?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6940","def":{"name":"dynamic?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Dynamic"}},{"id":"static?-instance-method","html_id":"static?-instance-method","name":"static?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6942","def":{"name":"static?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Static"}},{"id":"stream?-instance-method","html_id":"stream?-instance-method","name":"stream?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L6938","def":{"name":"stream?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Stream"}}],"macros":[],"types":[]}]},{"html_id":"github.com/oprypin/crsfml/SF/VideoMode","path":"SF/VideoMode.html","kind":"struct","full_name":"SF::VideoMode","name":"VideoMode","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/oprypin/crsfml/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":2030,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"VideoMode defines a video mode (width, height, bpp)\n\nA video mode is defined by a width and a height (in pixels)\nand a depth (in bits per pixel). Video modes are used to\nsetup windows (`SF::Window`) at creation time.\n\nThe main usage of video modes is for fullscreen mode:\nindeed you must use one of the valid video modes\nallowed by the OS (which are defined by what the monitor\nand the graphics card support), otherwise your window\ncreation will just fail.\n\n`SF::VideoMode` provides a static function for retrieving\nthe list of all the video modes supported by the system:\nfullscreen_modes().\n\nA custom video mode can also be checked directly for\nfullscreen compatibility with its valid?() function.\n\nAdditionally, `SF::VideoMode` provides a static function\nto get the mode currently used by the desktop: desktop_mode().\nThis allows to build windows with the same size or pixel\ndepth as the current resolution.\n\nUsage example:\n```\n# Display the list of all the video modes available for fullscreen\nSF::VideoMode.fullscreen_modes.each do |mode|\n  puts \"Mode ##{i}: #{mode.width}x#{mode.height} - #{mode.bits_per_pixel} bpp\"\nend\n\n# Create a window with the same pixel depth as the desktop\ndesktop = SF::VideoMode.desktop_mode\nwindow.create(SF::VideoMode.new(1024, 768, desktop.bits_per_pixel), \"SFML window\")\n```","summary":"<p>VideoMode defines a video mode (width, height, bpp)</p>","class_methods":[{"id":"fullscreen_modes:Array(VideoMode)-class-method","html_id":"fullscreen_modes:Array(VideoMode)-class-method","name":"fullscreen_modes","doc":"Retrieve all the video modes supported in fullscreen mode\n\nWhen creating a fullscreen window, the video mode is restricted\nto be compatible with what the graphics driver and monitor\nsupport. This function returns the complete list of all video\nmodes that can be used in fullscreen mode.\nThe returned array is sorted from best to worst, so that\nthe first element will always give the best mode (higher\nwidth, height and bits-per-pixel).\n\n*Returns:* Array containing all the supported fullscreen modes","summary":"<p>Retrieve all the video modes supported in fullscreen mode</p>","abstract":false,"args":[],"args_string":" : Array(VideoMode)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2073","def":{"name":"fullscreen_modes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(VideoMode)","visibility":"Public","body":"SFMLExt.sfml_videomode_getfullscreenmodes(out result, out result_size)\nreturn Array.new(result_size.to_i) do |i|\n  (result.as(::Pointer(VideoMode)))[i]\nend\n"}}],"constructors":[{"id":"desktop_mode:VideoMode-class-method","html_id":"desktop_mode:VideoMode-class-method","name":"desktop_mode","doc":"Get the current desktop video mode\n\n*Returns:* Current desktop video mode","summary":"<p>Get the current desktop video mode</p>","abstract":false,"args":[],"args_string":" : VideoMode","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2057","def":{"name":"desktop_mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"VideoMode","visibility":"Public","body":"result = VideoMode.allocate\nSFMLExt.sfml_videomode_getdesktopmode(result)\nreturn result\n"}},{"id":"new(width:Int,height:Int,bits_per_pixel:Int=32)-class-method","html_id":"new(width:Int,height:Int,bits_per_pixel:Int=32)-class-method","name":"new","doc":"Construct the video mode with its attributes\n\n* *width* - Width in pixels\n* *height* - Height in pixels\n* *bits_per_pixel* - Pixel depths in bits per pixel","summary":"<p>Construct the video mode with its attributes</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"bits_per_pixel","doc":null,"default_value":"32","external_name":"bits_per_pixel","restriction":"Int"}],"args_string":"(width : Int, height : Int, bits_per_pixel : Int = <span class=\"n\">32</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2048","def":{"name":"new","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"bits_per_pixel","doc":null,"default_value":"32","external_name":"bits_per_pixel","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(width, height, bits_per_pixel)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nThis constructors initializes all members to 0.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2037","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"!=(right:VideoMode):Bool-instance-method","html_id":"!=(right:VideoMode):Bool-instance-method","name":"!=","doc":"Overload of != operator to compare two video modes\n\n* *left* - Left operand (a video mode)\n* *right* - Right operand (a video mode)\n\n*Returns:* True if modes are different","summary":"<p>Overload of != operator to compare two video modes</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VideoMode"}],"args_string":"(right : VideoMode) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2128","def":{"name":"!=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VideoMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_ne_asWasW(to_unsafe, right, out result)\nreturn result\n"}},{"id":"<(right:VideoMode):Bool-instance-method","html_id":"&lt;(right:VideoMode):Bool-instance-method","name":"<","doc":"Overload of &lt; operator to compare video modes\n\n* *left* - Left operand (a video mode)\n* *right* - Right operand (a video mode)\n\n*Returns:* True if *left* is lesser than *right*","summary":"<p>Overload of &lt; operator to compare video modes</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VideoMode"}],"args_string":"(right : VideoMode) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2138","def":{"name":"<","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VideoMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_lt_asWasW(to_unsafe, right, out result)\nreturn result\n"}},{"id":"<=(right:VideoMode):Bool-instance-method","html_id":"&lt;=(right:VideoMode):Bool-instance-method","name":"<=","doc":"Overload of &lt;= operator to compare video modes\n\n* *left* - Left operand (a video mode)\n* *right* - Right operand (a video mode)\n\n*Returns:* True if *left* is lesser or equal than *right*","summary":"<p>Overload of &lt;= operator to compare video modes</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VideoMode"}],"args_string":"(right : VideoMode) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2158","def":{"name":"<=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VideoMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_le_asWasW(to_unsafe, right, out result)\nreturn result\n"}},{"id":"==(right:VideoMode):Bool-instance-method","html_id":"==(right:VideoMode):Bool-instance-method","name":"==","doc":"Overload of == operator to compare two video modes\n\n* *left* - Left operand (a video mode)\n* *right* - Right operand (a video mode)\n\n*Returns:* True if modes are equal","summary":"<p>Overload of == operator to compare two video modes</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VideoMode"}],"args_string":"(right : VideoMode) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2118","def":{"name":"==","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VideoMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_eq_asWasW(to_unsafe, right, out result)\nreturn result\n"}},{"id":">(right:VideoMode):Bool-instance-method","html_id":"&gt;(right:VideoMode):Bool-instance-method","name":">","doc":"Overload of &gt; operator to compare video modes\n\n* *left* - Left operand (a video mode)\n* *right* - Right operand (a video mode)\n\n*Returns:* True if *left* is greater than *right*","summary":"<p>Overload of &gt; operator to compare video modes</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VideoMode"}],"args_string":"(right : VideoMode) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2148","def":{"name":">","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VideoMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_gt_asWasW(to_unsafe, right, out result)\nreturn result\n"}},{"id":">=(right:VideoMode):Bool-instance-method","html_id":"&gt;=(right:VideoMode):Bool-instance-method","name":">=","doc":"Overload of &gt;= operator to compare video modes\n\n* *left* - Left operand (a video mode)\n* *right* - Right operand (a video mode)\n\n*Returns:* True if *left* is greater or equal than *right*","summary":"<p>Overload of &gt;= operator to compare video modes</p>","abstract":false,"args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VideoMode"}],"args_string":"(right : VideoMode) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2168","def":{"name":">=","args":[{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":"VideoMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_operator_ge_asWasW(to_unsafe, right, out result)\nreturn result\n"}},{"id":"bits_per_pixel:UInt32-instance-method","html_id":"bits_per_pixel:UInt32-instance-method","name":"bits_per_pixel","doc":"Video mode pixel depth, in bits per pixels","summary":"<p>Video mode pixel depth, in bits per pixels</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2106","def":{"name":"bits_per_pixel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@bits_per_pixel"}},{"id":"bits_per_pixel=(bits_per_pixel:Int)-instance-method","html_id":"bits_per_pixel=(bits_per_pixel:Int)-instance-method","name":"bits_per_pixel=","doc":null,"summary":null,"abstract":false,"args":[{"name":"bits_per_pixel","doc":null,"default_value":"","external_name":"bits_per_pixel","restriction":"Int"}],"args_string":"(bits_per_pixel : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2109","def":{"name":"bits_per_pixel=","args":[{"name":"bits_per_pixel","doc":null,"default_value":"","external_name":"bits_per_pixel","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bits_per_pixel = LibC::UInt.new(bits_per_pixel)"}},{"id":"dup:VideoMode-instance-method","html_id":"dup:VideoMode-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nBecause `Value` is a value type, this method returns `self`,\nwhich already involves a shallow copy of this object because\nvalue types are passed by value.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : VideoMode","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2183","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"VideoMode","visibility":"Public","body":"return VideoMode.new(self)"}},{"id":"height:UInt32-instance-method","html_id":"height:UInt32-instance-method","name":"height","doc":"Video mode height, in pixels","summary":"<p>Video mode height, in pixels</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2098","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@height"}},{"id":"height=(height:Int)-instance-method","html_id":"height=(height:Int)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"}],"args_string":"(height : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2101","def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height = LibC::UInt.new(height)"}},{"id":"valid?:Bool-instance-method","html_id":"valid?:Bool-instance-method","name":"valid?","doc":"Tell whether or not the video mode is valid\n\nThe validity of video modes is only relevant when using\nfullscreen windows; otherwise any video mode can be used\nwith no restriction.\n\n*Returns:* True if the video mode is valid for fullscreen mode","summary":"<p>Tell whether or not the video mode is valid</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2084","def":{"name":"valid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_videomode_isvalid(to_unsafe, out result)\nreturn result\n"}},{"id":"width:UInt32-instance-method","html_id":"width:UInt32-instance-method","name":"width","doc":"Video mode width, in pixels","summary":"<p>Video mode width, in pixels</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2090","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@width"}},{"id":"width=(width:Int)-instance-method","html_id":"width=(width:Int)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"}],"args_string":"(width : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2093","def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width = LibC::UInt.new(width)"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/View","path":"SF/View.html","kind":"class","full_name":"SF::View","name":"View","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graphics/obj.cr","line_number":4235,"url":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"2D camera that defines what region is shown on screen\n\n`SF::View` defines a camera in the 2D scene. This is a\nvery powerful concept: you can scroll, rotate or zoom\nthe entire scene without altering the way that your\ndrawable objects are drawn.\n\nA view is composed of a source rectangle, which defines\nwhat part of the 2D scene is shown, and a target viewport,\nwhich defines where the contents of the source rectangle\nwill be displayed on the render target (window or texture).\n\nThe viewport allows to map the scene to a custom part\nof the render target, and can be used for split-screen\nor for displaying a minimap, for example. If the source\nrectangle doesn't have the same size as the viewport, its\ncontents will be stretched to fit in.\n\nTo apply a view, you have to assign it to the render target.\nThen, objects drawn in this render target will be\naffected by the view until you use another view.\n\nUsage example:\n```\nwindow = SF::RenderWindow.new\nview = SF::View.new\n\n# Initialize the view to a rectangle located at (100, 100) and with a size of 400x200\nview.reset(SF.float_rect(100, 100, 400, 200))\n\n# Rotate it by 45 degrees\nview.rotate(45)\n\n# Set its target viewport to be half of the window\nview.viewport = SF.float_rect(0.0, 0.0, 0.5, 1.0)\n\n# Apply it\nwindow.view = view\n\n# Render stuff\nwindow.draw some_sprite\n\n# Set the default view back\nwindow.view = window.default_view\n\n# Render stuff not affected by the view\nwindow.draw some_text\n```\n\nSee also the note on coordinates and undistorted rendering in `SF::Transformable`.\n\n*See also:* `SF::RenderWindow`, `SF::RenderTexture`","summary":"<p>2D camera that defines what region is shown on screen</p>","class_methods":[],"constructors":[{"id":"new(center:Vector2|Tuple,size:Vector2|Tuple)-class-method","html_id":"new(center:Vector2|Tuple,size:Vector2|Tuple)-class-method","name":"new","doc":"Construct the view from its center and size\n\n* *center* - Center of the zone to display\n* *size* - Size of zone to display","summary":"<p>Construct the view from its center and size</p>","abstract":false,"args":[{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":"Vector2 | Tuple"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Vector2 | Tuple"}],"args_string":"(center : Vector2 | Tuple, size : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4259","def":{"name":"new","args":[{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":"Vector2 | Tuple"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(center, size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rectangle:FloatRect)-class-method","html_id":"new(rectangle:FloatRect)-class-method","name":"new","doc":"Construct the view from a rectangle\n\n* *rectangle* - Rectangle defining the zone to display","summary":"<p>Construct the view from a rectangle</p>","abstract":false,"args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"FloatRect"}],"args_string":"(rectangle : FloatRect)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4251","def":{"name":"new","args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"FloatRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rectangle)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nThis constructor creates a default view of (0, 0, 1000, 1000)","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4244","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"center:Vector2f-instance-method","html_id":"center:Vector2f-instance-method","name":"center","doc":"Get the center of the view\n\n*Returns:* Center of the view\n\n*See also:* `size`, `center=`","summary":"<p>Get the center of the view</p>","abstract":false,"args":[],"args_string":" : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4341","def":{"name":"center","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\nSFMLExt.sfml_view_getcenter(to_unsafe, result)\nreturn result\n"}},{"id":"center=(center:Vector2|Tuple)-instance-method","html_id":"center=(center:Vector2|Tuple)-instance-method","name":"center=","doc":"Set the center of the view\n\n* *center* - New center\n\n*See also:* `size=`, `center`","summary":"<p>Set the center of the view</p>","abstract":false,"args":[{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":"Vector2 | Tuple"}],"args_string":"(center : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4279","def":{"name":"center=","args":[{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"center = Vector2f.new(center[0].to_f32, center[1].to_f32)\nSFMLExt.sfml_view_setcenter_UU2(to_unsafe, center)\n"}},{"id":"dup:View-instance-method","html_id":"dup:View-instance-method","name":"dup","doc":"Returns a shallow copy of this object.\n\nThis allocates a new object and copies the contents of\n`self` into it.","summary":"<p>Returns a shallow copy of this object.</p>","abstract":false,"args":[],"args_string":" : View","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4453","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"View","visibility":"Public","body":"return View.new(self)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4237","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_view_finalize(to_unsafe)\nSFMLExt.sfml_view_free(@this)\n"}},{"id":"inverse_transform:Transform-instance-method","html_id":"inverse_transform:Transform-instance-method","name":"inverse_transform","doc":"Get the inverse projection transform of the view\n\nThis function is meant for internal use only.\n\n*Returns:* Inverse of the projection transform defining the view\n\n*See also:* `transform`","summary":"<p>Get the inverse projection transform of the view</p>","abstract":false,"args":[],"args_string":" : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4435","def":{"name":"inverse_transform","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nSFMLExt.sfml_view_getinversetransform(to_unsafe, result)\nreturn result\n"}},{"id":"move(offset_x:Number,offset_y:Number)-instance-method","html_id":"move(offset_x:Number,offset_y:Number)-instance-method","name":"move","doc":"Move the view relatively to its current position\n\n* *offset_x* - X coordinate of the move offset\n* *offset_y* - Y coordinate of the move offset\n\n*See also:* `center=`, `rotate`, `zoom`","summary":"<p>Move the view relatively to its current position</p>","abstract":false,"args":[{"name":"offset_x","doc":null,"default_value":"","external_name":"offset_x","restriction":"Number"},{"name":"offset_y","doc":null,"default_value":"","external_name":"offset_y","restriction":"Number"}],"args_string":"(offset_x : Number, offset_y : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4381","def":{"name":"move","args":[{"name":"offset_x","doc":null,"default_value":"","external_name":"offset_x","restriction":"Number"},{"name":"offset_y","doc":null,"default_value":"","external_name":"offset_y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_view_move_Bw9Bw9(to_unsafe, LibC::Float.new(offset_x), LibC::Float.new(offset_y))"}},{"id":"move(offset:Vector2|Tuple)-instance-method","html_id":"move(offset:Vector2|Tuple)-instance-method","name":"move","doc":"Move the view relatively to its current position\n\n* *offset* - Move offset\n\n*See also:* `center=`, `rotate`, `zoom`","summary":"<p>Move the view relatively to its current position</p>","abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Vector2 | Tuple"}],"args_string":"(offset : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4389","def":{"name":"move","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"offset = Vector2f.new(offset[0].to_f32, offset[1].to_f32)\nSFMLExt.sfml_view_move_UU2(to_unsafe, offset)\n"}},{"id":"reset(rectangle:FloatRect)-instance-method","html_id":"reset(rectangle:FloatRect)-instance-method","name":"reset","doc":"Reset the view to the given rectangle\n\nNote that this function resets the rotation angle to 0.\n\n* *rectangle* - Rectangle defining the zone to display\n\n*See also:* `center=`, `size=`, `rotation=`","summary":"<p>Reset the view to the given rectangle</p>","abstract":false,"args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"FloatRect"}],"args_string":"(rectangle : FloatRect)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4333","def":{"name":"reset","args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"FloatRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_view_reset_WPZ(to_unsafe, rectangle)"}},{"id":"rotate(angle:Number)-instance-method","html_id":"rotate(angle:Number)-instance-method","name":"rotate","doc":"Rotate the view relatively to its current orientation\n\n* *angle* - Angle to rotate, in degrees\n\n*See also:* `rotation=`, `move`, `zoom`","summary":"<p>Rotate the view relatively to its current orientation</p>","abstract":false,"args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"}],"args_string":"(angle : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4398","def":{"name":"rotate","args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_view_rotate_Bw9(to_unsafe, LibC::Float.new(angle))"}},{"id":"rotation:Float32-instance-method","html_id":"rotation:Float32-instance-method","name":"rotation","doc":"Get the current orientation of the view\n\n*Returns:* Rotation angle of the view, in degrees\n\n*See also:* `rotation=`","summary":"<p>Get the current orientation of the view</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4361","def":{"name":"rotation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"SFMLExt.sfml_view_getrotation(to_unsafe, out result)\nreturn result\n"}},{"id":"rotation=(angle:Number)-instance-method","html_id":"rotation=(angle:Number)-instance-method","name":"rotation=","doc":"Set the orientation of the view\n\nThe default rotation of a view is 0 degree.\n\n* *angle* - New angle, in degrees\n\n*See also:* `rotation`","summary":"<p>Set the orientation of the view</p>","abstract":false,"args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"}],"args_string":"(angle : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4308","def":{"name":"rotation=","args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_view_setrotation_Bw9(to_unsafe, LibC::Float.new(angle))"}},{"id":"set_center(x:Number,y:Number)-instance-method","html_id":"set_center(x:Number,y:Number)-instance-method","name":"set_center","doc":"Set the center of the view\n\n* *x* - X coordinate of the new center\n* *y* - Y coordinate of the new center\n\n*See also:* `size=`, `center`","summary":"<p>Set the center of the view</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"args_string":"(x : Number, y : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4271","def":{"name":"set_center","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Number"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_view_setcenter_Bw9Bw9(to_unsafe, LibC::Float.new(x), LibC::Float.new(y))"}},{"id":"set_size(width:Number,height:Number)-instance-method","html_id":"set_size(width:Number,height:Number)-instance-method","name":"set_size","doc":"Set the size of the view\n\n* *width* - New width of the view\n* *height* - New height of the view\n\n*See also:* `center=`, `center`","summary":"<p>Set the size of the view</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Number"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Number"}],"args_string":"(width : Number, height : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4289","def":{"name":"set_size","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Number"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_view_setsize_Bw9Bw9(to_unsafe, LibC::Float.new(width), LibC::Float.new(height))"}},{"id":"size:Vector2f-instance-method","html_id":"size:Vector2f-instance-method","name":"size","doc":"Get the size of the view\n\n*Returns:* Size of the view\n\n*See also:* `center`, `size=`","summary":"<p>Get the size of the view</p>","abstract":false,"args":[],"args_string":" : Vector2f","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4351","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2f","visibility":"Public","body":"result = Vector2f.allocate\nSFMLExt.sfml_view_getsize(to_unsafe, result)\nreturn result\n"}},{"id":"size=(size:Vector2|Tuple)-instance-method","html_id":"size=(size:Vector2|Tuple)-instance-method","name":"size=","doc":"Set the size of the view\n\n* *size* - New size\n\n*See also:* `center=`, `center`","summary":"<p>Set the size of the view</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Vector2 | Tuple"}],"args_string":"(size : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4297","def":{"name":"size=","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"size = Vector2f.new(size[0].to_f32, size[1].to_f32)\nSFMLExt.sfml_view_setsize_UU2(to_unsafe, size)\n"}},{"id":"transform:Transform-instance-method","html_id":"transform:Transform-instance-method","name":"transform","doc":"Get the projection transform of the view\n\nThis function is meant for internal use only.\n\n*Returns:* Projection transform defining the view\n\n*See also:* `inverse_transform`","summary":"<p>Get the projection transform of the view</p>","abstract":false,"args":[],"args_string":" : Transform","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4423","def":{"name":"transform","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Transform","visibility":"Public","body":"result = Transform.allocate\nSFMLExt.sfml_view_gettransform(to_unsafe, result)\nreturn result\n"}},{"id":"viewport:FloatRect-instance-method","html_id":"viewport:FloatRect-instance-method","name":"viewport","doc":"Get the target viewport rectangle of the view\n\n*Returns:* Viewport rectangle, expressed as a factor of the target size\n\n*See also:* `viewport=`","summary":"<p>Get the target viewport rectangle of the view</p>","abstract":false,"args":[],"args_string":" : FloatRect","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4370","def":{"name":"viewport","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FloatRect","visibility":"Public","body":"result = FloatRect.allocate\nSFMLExt.sfml_view_getviewport(to_unsafe, result)\nreturn result\n"}},{"id":"viewport=(viewport:FloatRect)-instance-method","html_id":"viewport=(viewport:FloatRect)-instance-method","name":"viewport=","doc":"Set the target viewport\n\nThe viewport is the rectangle into which the contents of the\nview are displayed, expressed as a factor (between 0 and 1)\nof the size of the RenderTarget to which the view is applied.\nFor example, a view which takes the left side of the target would\nbe defined with View.viewport=(`SF::FloatRect`(0, 0, 0.5, 1)).\nBy default, a view has a viewport which covers the entire target.\n\n* *viewport* - New viewport rectangle\n\n*See also:* `viewport`","summary":"<p>Set the target viewport</p>","abstract":false,"args":[{"name":"viewport","doc":null,"default_value":"","external_name":"viewport","restriction":"FloatRect"}],"args_string":"(viewport : FloatRect)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4323","def":{"name":"viewport=","args":[{"name":"viewport","doc":null,"default_value":"","external_name":"viewport","restriction":"FloatRect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_view_setviewport_WPZ(to_unsafe, viewport)"}},{"id":"zoom(factor:Number)-instance-method","html_id":"zoom(factor:Number)-instance-method","name":"zoom","doc":"Resize the view rectangle relatively to its current size\n\nResizing the view simulates a zoom, as the zone displayed on\nscreen grows or shrinks.\n*factor* is a multiplier:\n* 1 keeps the size unchanged\n* &gt; 1 makes the view bigger (objects appear smaller)\n* &lt; 1 makes the view smaller (objects appear bigger)\n\n* *factor* - Zoom factor to apply\n\n*See also:* `size=`, `move`, `rotate`","summary":"<p>Resize the view rectangle relatively to its current size</p>","abstract":false,"args":[{"name":"factor","doc":null,"default_value":"","external_name":"factor","restriction":"Number"}],"args_string":"(factor : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/graphics/obj.cr#L4413","def":{"name":"zoom","args":[{"name":"factor","doc":null,"default_value":"","external_name":"factor","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_view_zoom_Bw9(to_unsafe, LibC::Float.new(factor))"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/Window","path":"SF/Window.html","kind":"class","full_name":"SF::Window","name":"Window","abstract":false,"superclass":{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"},{"html_id":"github.com/oprypin/crsfml/SF/GlResource","kind":"module","full_name":"SF::GlResource","name":"GlResource"},{"html_id":"github.com/oprypin/crsfml/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/oprypin/crsfml/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"window/obj.cr","line_number":2260,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/oprypin/crsfml/SF/GlResource","kind":"module","full_name":"SF::GlResource","name":"GlResource"},{"html_id":"github.com/oprypin/crsfml/SF/NonCopyable","kind":"module","full_name":"SF::NonCopyable","name":"NonCopyable"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/oprypin/crsfml/SF/RenderWindow","kind":"class","full_name":"SF::RenderWindow","name":"RenderWindow"}],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"Window that serves as a target for OpenGL rendering\n\n`SF::Window` is the main class of the Window module. It defines\nan OS window that is able to receive an OpenGL rendering.\n\nA `SF::Window` can create its own new window, or be embedded into\nan already existing control using the create(handle) function.\nThis can be useful for embedding an OpenGL rendering area into\na view which is part of a bigger GUI with existing windows,\ncontrols, etc. It can also serve as embedding an OpenGL rendering\narea into a window created by another (probably richer) GUI library\nlike Qt or wx_widgets.\n\nThe `SF::Window` class provides a simple interface for manipulating\nthe window: move, resize, show/hide, control mouse cursor, etc.\nIt also provides event handling through its poll_event() and wait_event()\nfunctions.\n\nNote that OpenGL experts can pass their own parameters (antialiasing\nlevel, bits for the depth and stencil buffers, etc.) to the\nOpenGL context attached to the window, with the `SF::ContextSettings`\nstructure which is passed as an optional argument when creating the\nwindow.\n\nOn dual-graphics systems consisting of a low-power integrated GPU\nand a powerful discrete GPU, the driver picks which GPU will run an\nSFML application. In order to inform the driver that an SFML application\ncan benefit from being run on the more powerful discrete GPU,\n#SFML_DEFINE_DISCRETE_GPU_PREFERENCE can be placed in a source file\nthat is compiled and linked into the final application. The macro\nshould be placed outside of any scopes in the global namespace.\n\nUsage example:\n```\n# Declare and create a new window\nwindow = SF::Window.new(SF::VideoMode.new(800, 600), \"SFML window\")\n\n# Limit the framerate to 60 frames per second (this step is optional)\nwindow.framerate_limit = 60\n\n# The main loop - ends as soon as the window is closed\nwhile window.open?\n  # Event processing\n  while (event = window.poll_event())\n    # Request for closing the window\n    if event.is_a?(SF::Event::Closed)\n      window.close()\n    end\n  end\n\n  # Activate the window for OpenGL rendering\n  window.active = true\n\n  # OpenGL drawing commands go here...\n\n  # End the current frame and display its contents on screen\n  window.display()\nend\n```","summary":"<p>Window that serves as a target for OpenGL rendering</p>","class_methods":[],"constructors":[{"id":"new(mode:VideoMode,title:String,style:Style=Style::Default,settings:ContextSettings=ContextSettings.new)-class-method","html_id":"new(mode:VideoMode,title:String,style:Style=Style::Default,settings:ContextSettings=ContextSettings.new)-class-method","name":"new","doc":"Construct a new window\n\nThis constructor creates the window with the size and pixel\ndepth defined in *mode.* An optional style can be passed to\ncustomize the look and behavior of the window (borders,\ntitle bar, resizable, closable, ...). If *style* contains\nStyle::Fullscreen, then *mode* must be a valid video mode.\n\nThe fourth parameter is an optional structure specifying\nadvanced OpenGL context settings such as antialiasing,\ndepth-buffer bits, etc.\n\n* *mode* - Video mode to use (defines the width, height and depth of the rendering area of the window)\n* *title* - Title of the window\n* *style* - Window style, a bitwise OR combination of `SF::Style` enumerators\n* *settings* - Additional settings for the underlying OpenGL context","summary":"<p>Construct a new window</p>","abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"VideoMode"},{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"},{"name":"style","doc":null,"default_value":"Style::Default","external_name":"style","restriction":"Style"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"args_string":"(mode : VideoMode, title : String, style : Style = <span class=\"t\">Style</span><span class=\"t\">::</span><span class=\"t\">Default</span>, settings : ContextSettings = <span class=\"t\">ContextSettings</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2286","def":{"name":"new","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"VideoMode"},{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"},{"name":"style","doc":null,"default_value":"Style::Default","external_name":"style","restriction":"Style"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(mode, title, style, settings)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(handle:WindowHandle,settings:ContextSettings=ContextSettings.new)-class-method","html_id":"new(handle:WindowHandle,settings:ContextSettings=ContextSettings.new)-class-method","name":"new","doc":"Construct the window from an existing control\n\nUse this constructor if you want to create an OpenGL\nrendering area into an already existing control.\n\nThe second parameter is an optional structure specifying\nadvanced OpenGL context settings such as antialiasing,\ndepth-buffer bits, etc.\n\n* *handle* - Platform-specific handle of the control\n* *settings* - Additional settings for the underlying OpenGL context","summary":"<p>Construct the window from an existing control</p>","abstract":false,"args":[{"name":"handle","doc":null,"default_value":"","external_name":"handle","restriction":"WindowHandle"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"args_string":"(handle : WindowHandle, settings : ContextSettings = <span class=\"t\">ContextSettings</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2301","def":{"name":"new","args":[{"name":"handle","doc":null,"default_value":"","external_name":"handle","restriction":"WindowHandle"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(handle, settings)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Default constructor\n\nThis constructor doesn't actually create the window,\nuse the other constructors or call create() to do so.","summary":"<p>Default constructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2266","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*args,**kwargs):self-class-method","html_id":"new(*args,**kwargs):self-class-method","name":"new","doc":"Shorthand for `window = Window.new; window.create(...); window`","summary":"<p>Shorthand for <code>window = <a href=\"../SF/Window.html#new-class-method\">Window.new</a>; window.create(...); window</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs) : <span class=\"k\">self</span>","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2351","def":{"name":"new","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"obj = new\nobj.create(*args, **kwargs)\nobj\n"}}],"instance_methods":[{"id":"active=(active:Bool=true):Bool-instance-method","html_id":"active=(active:Bool=true):Bool-instance-method","name":"active=","doc":"Activate or deactivate the window as the current target\nfor OpenGL rendering\n\nA window is active only on the current thread, if you want to\nmake it active on another thread you have to deactivate it\non the previous thread first if it was active.\nOnly one window can be active on a thread at a time, thus\nthe window previously active (if any) automatically gets deactivated.\nThis is not to be confused with request_focus().\n\n* *active* - True to activate, false to deactivate\n\n*Returns:* True if operation was successful, false otherwise","summary":"<p>Activate or deactivate the window as the current target for OpenGL rendering</p>","abstract":false,"args":[{"name":"active","doc":null,"default_value":"true","external_name":"active","restriction":"Bool"}],"args_string":"(active : Bool = <span class=\"n\">true</span>) : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2640","def":{"name":"active=","args":[{"name":"active","doc":null,"default_value":"true","external_name":"active","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_window_setactive_GZq(to_unsafe, active, out result)\nreturn result\n"}},{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":"Close the window and destroy all the attached resources\n\nAfter calling this function, the `SF::Window` instance remains\nvalid and you can call create() to recreate the window.\nAll other functions such as poll_event() or display() will\nstill work (i.e. you don't have to test open?() every time),\nand will have no effect on closed windows.","summary":"<p>Close the window and destroy all the attached resources</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2363","def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_close(to_unsafe)"}},{"id":"create(mode:VideoMode,title:String,style:Style=Style::Default,settings:ContextSettings=ContextSettings.new)-instance-method","html_id":"create(mode:VideoMode,title:String,style:Style=Style::Default,settings:ContextSettings=ContextSettings.new)-instance-method","name":"create","doc":"Create (or recreate) the window\n\nIf the window was already created, it closes it first.\nIf *style* contains Style::Fullscreen, then *mode*\nmust be a valid video mode.\n\nThe fourth parameter is an optional structure specifying\nadvanced OpenGL context settings such as antialiasing,\ndepth-buffer bits, etc.\n\n* *mode* - Video mode to use (defines the width, height and depth of the rendering area of the window)\n* *title* - Title of the window\n* *style* - Window style, a bitwise OR combination of `SF::Style` enumerators\n* *settings* - Additional settings for the underlying OpenGL context","summary":"<p>Create (or recreate) the window</p>","abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"VideoMode"},{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"},{"name":"style","doc":null,"default_value":"Style::Default","external_name":"style","restriction":"Style"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"args_string":"(mode : VideoMode, title : String, style : Style = <span class=\"t\">Style</span><span class=\"t\">::</span><span class=\"t\">Default</span>, settings : ContextSettings = <span class=\"t\">ContextSettings</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2326","def":{"name":"create","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"VideoMode"},{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"},{"name":"style","doc":null,"default_value":"Style::Default","external_name":"style","restriction":"Style"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_create_wg0bQssaLFw4(to_unsafe, mode, title.size, title.chars, style, settings)"}},{"id":"create(handle:WindowHandle,settings:ContextSettings=ContextSettings.new)-instance-method","html_id":"create(handle:WindowHandle,settings:ContextSettings=ContextSettings.new)-instance-method","name":"create","doc":"Create (or recreate) the window from an existing control\n\nUse this function if you want to create an OpenGL\nrendering area into an already existing control.\nIf the window was already created, it closes it first.\n\nThe second parameter is an optional structure specifying\nadvanced OpenGL context settings such as antialiasing,\ndepth-buffer bits, etc.\n\n* *handle* - Platform-specific handle of the control\n* *settings* - Additional settings for the underlying OpenGL context","summary":"<p>Create (or recreate) the window from an existing control</p>","abstract":false,"args":[{"name":"handle","doc":null,"default_value":"","external_name":"handle","restriction":"WindowHandle"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"args_string":"(handle : WindowHandle, settings : ContextSettings = <span class=\"t\">ContextSettings</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2347","def":{"name":"create","args":[{"name":"handle","doc":null,"default_value":"","external_name":"handle","restriction":"WindowHandle"},{"name":"settings","doc":null,"default_value":"ContextSettings.new","external_name":"settings","restriction":"ContextSettings"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_create_rLQFw4(to_unsafe, handle, settings)"}},{"id":"display-instance-method","html_id":"display-instance-method","name":"display","doc":"Display on screen what has been rendered to the window so far\n\nThis function is typically called after all OpenGL rendering\nhas been done for the current frame, in order to show\nit on screen.","summary":"<p>Display on screen what has been rendered to the window so far</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2675","def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_display(to_unsafe)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destructor\n\nCloses the window and frees all the resources attached to it.","summary":"<p>Destructor</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2308","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_finalize(to_unsafe)\nSFMLExt.sfml_window_free(@this)\n"}},{"id":"focus?:Bool-instance-method","html_id":"focus?:Bool-instance-method","name":"focus?","doc":"Check whether the window has the input focus\n\nAt any given time, only one window may have the input focus\nto receive input events such as keystrokes or most mouse\nevents.\n\n*Returns:* True if window has focus, false otherwise\n*See also:* `request_focus`","summary":"<p>Check whether the window has the input focus</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2666","def":{"name":"focus?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_window_hasfocus(to_unsafe, out result)\nreturn result\n"}},{"id":"framerate_limit=(limit:Int)-instance-method","html_id":"framerate_limit=(limit:Int)-instance-method","name":"framerate_limit=","doc":"Limit the framerate to a maximum fixed frequency\n\nIf a limit is set, the window will use a small delay after\neach call to display() to ensure that the current frame\nlasted long enough to match the framerate limit.\nSFML will try to match the given limit as much as it can,\nbut since it internally uses `SF.sleep`, whose precision\ndepends on the underlying OS, the results may be a little\nunprecise as well (for example, you can get 65 FPS when\nrequesting 60).\n\n* *limit* - Framerate limit, in frames per seconds (use 0 to disable limit)","summary":"<p>Limit the framerate to a maximum fixed frequency</p>","abstract":false,"args":[{"name":"limit","doc":null,"default_value":"","external_name":"limit","restriction":"Int"}],"args_string":"(limit : Int)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2613","def":{"name":"framerate_limit=","args":[{"name":"limit","doc":null,"default_value":"","external_name":"limit","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_setframeratelimit_emS(to_unsafe, LibC::UInt.new(limit))"}},{"id":"joystick_threshold=(threshold:Number)-instance-method","html_id":"joystick_threshold=(threshold:Number)-instance-method","name":"joystick_threshold=","doc":"Change the joystick threshold\n\nThe joystick threshold is the value below which\nno JoystickMoved event will be generated.\n\nThe threshold value is 0.1 by default.\n\n* *threshold* - New threshold, in the range `0.0 .. 100.0`","summary":"<p>Change the joystick threshold</p>","abstract":false,"args":[{"name":"threshold","doc":null,"default_value":"","external_name":"threshold","restriction":"Number"}],"args_string":"(threshold : Number)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2624","def":{"name":"joystick_threshold=","args":[{"name":"threshold","doc":null,"default_value":"","external_name":"threshold","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_setjoystickthreshold_Bw9(to_unsafe, LibC::Float.new(threshold))"}},{"id":"key_repeat_enabled=(enabled:Bool)-instance-method","html_id":"key_repeat_enabled=(enabled:Bool)-instance-method","name":"key_repeat_enabled=","doc":"Enable or disable automatic key-repeat\n\nIf key repeat is enabled, you will receive repeated\nKeyPressed events while keeping a key pressed. If it is disabled,\nyou will only get a single event when the key is pressed.\n\nKey repeat is enabled by default.\n\n* *enabled* - True to enable, false to disable","summary":"<p>Enable or disable automatic key-repeat</p>","abstract":false,"args":[{"name":"enabled","doc":null,"default_value":"","external_name":"enabled","restriction":"Bool"}],"args_string":"(enabled : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2598","def":{"name":"key_repeat_enabled=","args":[{"name":"enabled","doc":null,"default_value":"","external_name":"enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_setkeyrepeatenabled_GZq(to_unsafe, enabled)"}},{"id":"mouse_cursor=(cursor:Cursor)-instance-method","html_id":"mouse_cursor=(cursor:Cursor)-instance-method","name":"mouse_cursor=","doc":"Set the displayed cursor to a native system cursor\n\nUpon window creation, the arrow cursor is used by default.\n\n*Warning:* The cursor must not be destroyed while in use by\nthe window.\n\n*Warning:* Features related to Cursor are not supported on\niOS and Android.\n\n* *cursor* - Native system cursor type to display\n\n*See also:* `SF::`Cursor`::load_from_system`\n*See also:* `SF::`Cursor`::load_from_pixels`","summary":"<p>Set the displayed cursor to a native system cursor</p>","abstract":false,"args":[{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"Cursor"}],"args_string":"(cursor : Cursor)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2584","def":{"name":"mouse_cursor=","args":[{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"Cursor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@_window_mouse_cursor = cursor\nSFMLExt.sfml_window_setmousecursor_Voc(to_unsafe, cursor)\n"}},{"id":"mouse_cursor_grabbed=(grabbed:Bool)-instance-method","html_id":"mouse_cursor_grabbed=(grabbed:Bool)-instance-method","name":"mouse_cursor_grabbed=","doc":"Grab or release the mouse cursor\n\nIf set, grabs the mouse cursor inside this window's client\narea so it may no longer be moved outside its bounds.\nNote that grabbing is only active while the window has\nfocus.\n\n* *grabbed* - True to enable, false to disable","summary":"<p>Grab or release the mouse cursor</p>","abstract":false,"args":[{"name":"grabbed","doc":null,"default_value":"","external_name":"grabbed","restriction":"Bool"}],"args_string":"(grabbed : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2567","def":{"name":"mouse_cursor_grabbed=","args":[{"name":"grabbed","doc":null,"default_value":"","external_name":"grabbed","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_setmousecursorgrabbed_GZq(to_unsafe, grabbed)"}},{"id":"mouse_cursor_visible=(visible:Bool)-instance-method","html_id":"mouse_cursor_visible=(visible:Bool)-instance-method","name":"mouse_cursor_visible=","doc":"Show or hide the mouse cursor\n\nThe mouse cursor is visible by default.\n\n* *visible* - True to show the mouse cursor, false to hide it","summary":"<p>Show or hide the mouse cursor</p>","abstract":false,"args":[{"name":"visible","doc":null,"default_value":"","external_name":"visible","restriction":"Bool"}],"args_string":"(visible : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2556","def":{"name":"mouse_cursor_visible=","args":[{"name":"visible","doc":null,"default_value":"","external_name":"visible","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_setmousecursorvisible_GZq(to_unsafe, visible)"}},{"id":"open?:Bool-instance-method","html_id":"open?:Bool-instance-method","name":"open?","doc":"Tell whether or not the window is open\n\nThis function returns whether or not the window exists.\nNote that a hidden window (visible=(false)) is open\n(therefore this function would return true).\n\n*Returns:* True if the window is open, false if it has been closed","summary":"<p>Tell whether or not the window is open</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2373","def":{"name":"open?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"SFMLExt.sfml_window_isopen(to_unsafe, out result)\nreturn result\n"}},{"id":"poll_event:Event?-instance-method","html_id":"poll_event:Event?-instance-method","name":"poll_event","doc":"Pop the event on top of the event queue, if any, and return it\n\nThis function is not blocking: if there's no pending event then\nit will return false and leave *event* unmodified.\nNote that more than one event may be present in the event queue,\nthus you should always call this function in a loop\nto make sure that you process every pending event.\n```\nwhile (event = window.poll_event())\n  # process event...\nend\n```\n\n* *event* - Event to be returned\n\n*Returns:* True if an event was returned, or false if the event queue was empty\n\n*See also:* `wait_event`","summary":"<p>Pop the event on top of the event queue, if any, and return it</p>","abstract":false,"args":[],"args_string":" : Event?","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2408","def":{"name":"poll_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"SFMLExt.sfml_event_allocate(out event)\nSFMLExt.sfml_window_pollevent_YJW(to_unsafe, event, out result)\nif result\n  {% if true %}\n        case (event_id = event.as(LibC::Int*)).value\n          {% for m, i in [\"Closed\", \"Resized\", \"LostFocus\", \"GainedFocus\", \"TextEntered\", \"KeyPressed\", \"KeyReleased\", \"MouseWheelMoved\", \"MouseWheelScrolled\", \"MouseButtonPressed\", \"MouseButtonReleased\", \"MouseMoved\", \"MouseEntered\", \"MouseLeft\", \"JoystickButtonPressed\", \"JoystickButtonReleased\", \"JoystickMoved\", \"JoystickConnected\", \"JoystickDisconnected\", \"TouchBegan\", \"TouchMoved\", \"TouchEnded\", \"SensorChanged\"] of ::String %}\n        when {{ i }}\n          (event_id + 1).as(Event::{{ m.id }}*).value\n          {% end %}\n        else\n          raise \"Unknown SFML event ID #{event_id.value}\"\n        end\n        {% end %}\nend\n"}},{"id":"position:Vector2i-instance-method","html_id":"position:Vector2i-instance-method","name":"position","doc":"Get the position of the window\n\n*Returns:* Position of the window, in pixels\n\n*See also:* `position=`","summary":"<p>Get the position of the window</p>","abstract":false,"args":[],"args_string":" : Vector2i","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2465","def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2i","visibility":"Public","body":"result = Vector2i.allocate\nSFMLExt.sfml_window_getposition(to_unsafe, result)\nreturn result\n"}},{"id":"position=(position:Vector2|Tuple)-instance-method","html_id":"position=(position:Vector2|Tuple)-instance-method","name":"position=","doc":"Change the position of the window on screen\n\nThis function only works for top-level windows\n(i.e. it will be ignored for windows created from\nthe handle of a child window/control).\n\n* *position* - New position, in pixels\n\n*See also:* `position`","summary":"<p>Change the position of the window on screen</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"}],"args_string":"(position : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2479","def":{"name":"position=","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"position = Vector2i.new(position[0].to_i32, position[1].to_i32)\nSFMLExt.sfml_window_setposition_ufV(to_unsafe, position)\n"}},{"id":"request_focus-instance-method","html_id":"request_focus-instance-method","name":"request_focus","doc":"Request the current window to be made the active\nforeground window\n\nAt any given time, only one window may have the input focus\nto receive input events such as keystrokes or mouse events.\nIf a window requests focus, it only hints to the operating\nsystem, that it would like to be focused. The operating system\nis free to deny the request.\nThis is not to be confused with active=().\n\n*See also:* `focus?`","summary":"<p>Request the current window to be made the active foreground window</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2655","def":{"name":"request_focus","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_requestfocus(to_unsafe)"}},{"id":"set_icon(width:Int,height:Int,pixels:::Pointer(UInt8))-instance-method","html_id":"set_icon(width:Int,height:Int,pixels:::Pointer(UInt8))-instance-method","name":"set_icon","doc":"Change the window's icon\n\n*pixels* must be an array of *width* x *height* pixels\nin 32-bits RGBA format.\n\nThe OS default icon is used by default.\n\n* *width* - Icon's width, in pixels\n* *height* - Icon's height, in pixels\n* *pixels* - Pointer to the array of pixels in memory. The\npixels are copied, so you need not keep the\nsource alive after calling this function.\n\n*See also:* `title=`","summary":"<p>Change the window's icon</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"pixels","doc":null,"default_value":"","external_name":"pixels","restriction":"::Pointer(UInt8)"}],"args_string":"(width : Int, height : Int, pixels : ::Pointer(UInt8))","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2527","def":{"name":"set_icon","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int"},{"name":"pixels","doc":null,"default_value":"","external_name":"pixels","restriction":"::Pointer(UInt8)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_seticon_emSemS843(to_unsafe, LibC::UInt.new(width), LibC::UInt.new(height), pixels)"}},{"id":"settings:ContextSettings-instance-method","html_id":"settings:ContextSettings-instance-method","name":"settings","doc":"Get the settings of the OpenGL context of the window\n\nNote that these settings may be different from what was\npassed to the constructor or the create() function,\nif one or more settings were not supported. In this case,\nSFML chose the closest match.\n\n*Returns:* Structure containing the OpenGL context settings","summary":"<p>Get the settings of the OpenGL context of the window</p>","abstract":false,"args":[],"args_string":" : ContextSettings","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2385","def":{"name":"settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ContextSettings","visibility":"Public","body":"result = ContextSettings.allocate\nSFMLExt.sfml_window_getsettings(to_unsafe, result)\nreturn result\n"}},{"id":"size:Vector2u-instance-method","html_id":"size:Vector2u-instance-method","name":"size","doc":"Get the size of the rendering region of the window\n\nThe size doesn't include the titlebar and borders\nof the window.\n\n*Returns:* Size in pixels\n\n*See also:* `size=`","summary":"<p>Get the size of the rendering region of the window</p>","abstract":false,"args":[],"args_string":" : Vector2u","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2491","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector2u","visibility":"Public","body":"result = Vector2u.allocate\nSFMLExt.sfml_window_getsize(to_unsafe, result)\nreturn result\n"}},{"id":"size=(size:Vector2|Tuple)-instance-method","html_id":"size=(size:Vector2|Tuple)-instance-method","name":"size=","doc":"Change the size of the rendering region of the window\n\n* *size* - New size, in pixels\n\n*See also:* `size`","summary":"<p>Change the size of the rendering region of the window</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Vector2 | Tuple"}],"args_string":"(size : Vector2 | Tuple)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2501","def":{"name":"size=","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Vector2 | Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"size = Vector2u.new(size[0].to_u32, size[1].to_u32)\nSFMLExt.sfml_window_setsize_DXO(to_unsafe, size)\n"}},{"id":"system_handle:WindowHandle-instance-method","html_id":"system_handle:WindowHandle-instance-method","name":"system_handle","doc":"Get the OS-specific handle of the window\n\nThe type of the returned handle is `SF::WindowHandle`,\nwhich is a typedef to the handle type defined by the OS.\nYou shouldn't need to use this function, unless you have\nvery specific stuff to implement that SFML doesn't support,\nor implement a temporary workaround until a bug is fixed.\n\n*Returns:* System handle of the window","summary":"<p>Get the OS-specific handle of the window</p>","abstract":false,"args":[],"args_string":" : WindowHandle","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2687","def":{"name":"system_handle","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"WindowHandle","visibility":"Public","body":"SFMLExt.sfml_window_getsystemhandle(to_unsafe, out result)\nreturn result\n"}},{"id":"title=(title:String)-instance-method","html_id":"title=(title:String)-instance-method","name":"title=","doc":"Change the title of the window\n\n* *title* - New title\n\n*See also:* `icon=`","summary":"<p>Change the title of the window</p>","abstract":false,"args":[{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"}],"args_string":"(title : String)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2510","def":{"name":"title=","args":[{"name":"title","doc":null,"default_value":"","external_name":"title","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_settitle_bQs(to_unsafe, title.size, title.chars)"}},{"id":"vertical_sync_enabled=(enabled:Bool)-instance-method","html_id":"vertical_sync_enabled=(enabled:Bool)-instance-method","name":"vertical_sync_enabled=","doc":"Enable or disable vertical synchronization\n\nActivating vertical synchronization will limit the number\nof frames displayed to the refresh rate of the monitor.\nThis can avoid some visual artifacts, and limit the framerate\nto a good value (but not constant across different computers).\n\nVertical synchronization is disabled by default.\n\n* *enabled* - True to enable v-sync, false to deactivate it","summary":"<p>Enable or disable vertical synchronization</p>","abstract":false,"args":[{"name":"enabled","doc":null,"default_value":"","external_name":"enabled","restriction":"Bool"}],"args_string":"(enabled : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2548","def":{"name":"vertical_sync_enabled=","args":[{"name":"enabled","doc":null,"default_value":"","external_name":"enabled","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_setverticalsyncenabled_GZq(to_unsafe, enabled)"}},{"id":"visible=(visible:Bool)-instance-method","html_id":"visible=(visible:Bool)-instance-method","name":"visible=","doc":"Show or hide the window\n\nThe window is shown by default.\n\n* *visible* - True to show the window, false to hide it","summary":"<p>Show or hide the window</p>","abstract":false,"args":[{"name":"visible","doc":null,"default_value":"","external_name":"visible","restriction":"Bool"}],"args_string":"(visible : Bool)","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2535","def":{"name":"visible=","args":[{"name":"visible","doc":null,"default_value":"","external_name":"visible","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SFMLExt.sfml_window_setvisible_GZq(to_unsafe, visible)"}},{"id":"wait_event:Event?-instance-method","html_id":"wait_event:Event?-instance-method","name":"wait_event","doc":"Wait for an event and return it\n\nThis function is blocking: if there's no pending event then\nit will wait until an event is received.\nAfter this function returns (and no error occurred),\nthe *event* object is always valid and filled properly.\nThis function is typically used when you have a thread that\nis dedicated to events handling: you want to make this thread\nsleep as long as no new event is received.\n```\nif (event = window.wait_event())\n  # process event...\nend\n```\n\n* *event* - Event to be returned\n\n*Returns:* False if any error occurred\n\n*See also:* `poll_event`","summary":"<p>Wait for an event and return it</p>","abstract":false,"args":[],"args_string":" : Event?","source_link":"https://github.com/oprypin/crsfml/blob/master/src/window/obj.cr#L2444","def":{"name":"wait_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"SFMLExt.sfml_event_allocate(out event)\nSFMLExt.sfml_window_waitevent_YJW(to_unsafe, event, out result)\nif result\n  {% if true %}\n        case (event_id = event.as(LibC::Int*)).value\n          {% for m, i in [\"Closed\", \"Resized\", \"LostFocus\", \"GainedFocus\", \"TextEntered\", \"KeyPressed\", \"KeyReleased\", \"MouseWheelMoved\", \"MouseWheelScrolled\", \"MouseButtonPressed\", \"MouseButtonReleased\", \"MouseMoved\", \"MouseEntered\", \"MouseLeft\", \"JoystickButtonPressed\", \"JoystickButtonReleased\", \"JoystickMoved\", \"JoystickConnected\", \"JoystickDisconnected\", \"TouchBegan\", \"TouchMoved\", \"TouchEnded\", \"SensorChanged\"] of ::String %}\n        when {{ i }}\n          (event_id + 1).as(Event::{{ m.id }}*).value\n          {% end %}\n        else\n          raise \"Unknown SFML event ID #{event_id.value}\"\n        end\n        {% end %}\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/oprypin/crsfml/SF/WindowHandle","path":"SF/WindowHandle.html","kind":"alias","full_name":"SF::WindowHandle","name":"WindowHandle","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"window/window.cr","line_number":5,"url":"https://github.com/oprypin/crsfml/blob/master/src/window/window.cr"}],"repository_name":"github.com/oprypin/crsfml","program":false,"enum":false,"alias":true,"aliased":"SFMLExt::WindowHandle","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/oprypin/crsfml/SF","kind":"module","full_name":"SF","name":"SF"},"doc":"A low-level window handle type, specific to each platform.","summary":"<p>A low-level window handle type, specific to each platform.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}}